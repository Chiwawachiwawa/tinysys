/**
 * @digit/vanilla - Digi-Key's Global Styles and Scripts
 *
 * @version v0.5.6
 * @bundled 1/16/2023
 */
var dk = (function (exports) {
	'use strict';

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var check = function (it) {
	  return it && it.Math == Math && it;
	};

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global_1 =
	  // eslint-disable-next-line es/no-global-this -- safe
	  check(typeof globalThis == 'object' && globalThis) ||
	  check(typeof window == 'object' && window) ||
	  // eslint-disable-next-line no-restricted-globals -- safe
	  check(typeof self == 'object' && self) ||
	  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||
	  // eslint-disable-next-line no-new-func -- fallback
	  (function () { return this; })() || Function('return this')();

	var fails = function (exec) {
	  try {
	    return !!exec();
	  } catch (error) {
	    return true;
	  }
	};

	// Detect IE8's incomplete defineProperty implementation
	var descriptors = !fails(function () {
	  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
	  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
	});

	var functionBindNative = !fails(function () {
	  var test = (function () { /* empty */ }).bind();
	  // eslint-disable-next-line no-prototype-builtins -- safe
	  return typeof test != 'function' || test.hasOwnProperty('prototype');
	});

	var call$2 = Function.prototype.call;

	var functionCall = functionBindNative ? call$2.bind(call$2) : function () {
	  return call$2.apply(call$2, arguments);
	};

	var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;
	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;

	// Nashorn ~ JDK8 bug
	var NASHORN_BUG = getOwnPropertyDescriptor$5 && !$propertyIsEnumerable$1.call({ 1: 2 }, 1);

	// `Object.prototype.propertyIsEnumerable` method implementation
	// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
	var f$9 = NASHORN_BUG ? function propertyIsEnumerable(V) {
	  var descriptor = getOwnPropertyDescriptor$5(this, V);
	  return !!descriptor && descriptor.enumerable;
	} : $propertyIsEnumerable$1;

	var objectPropertyIsEnumerable = {
		f: f$9
	};

	var createPropertyDescriptor = function (bitmap, value) {
	  return {
	    enumerable: !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable: !(bitmap & 4),
	    value: value
	  };
	};

	var FunctionPrototype$2 = Function.prototype;
	var bind$3 = FunctionPrototype$2.bind;
	var call$1 = FunctionPrototype$2.call;
	var uncurryThis = functionBindNative && bind$3.bind(call$1, call$1);

	var functionUncurryThis = functionBindNative ? function (fn) {
	  return fn && uncurryThis(fn);
	} : function (fn) {
	  return fn && function () {
	    return call$1.apply(fn, arguments);
	  };
	};

	var toString$2 = functionUncurryThis({}.toString);
	var stringSlice$9 = functionUncurryThis(''.slice);

	var classofRaw = function (it) {
	  return stringSlice$9(toString$2(it), 8, -1);
	};

	var Object$5 = global_1.Object;
	var split = functionUncurryThis(''.split);

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var indexedObject = fails(function () {
	  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
	  // eslint-disable-next-line no-prototype-builtins -- safe
	  return !Object$5('z').propertyIsEnumerable(0);
	}) ? function (it) {
	  return classofRaw(it) == 'String' ? split(it, '') : Object$5(it);
	} : Object$5;

	var TypeError$n = global_1.TypeError;

	// `RequireObjectCoercible` abstract operation
	// https://tc39.es/ecma262/#sec-requireobjectcoercible
	var requireObjectCoercible = function (it) {
	  if (it == undefined) throw TypeError$n("Can't call method on " + it);
	  return it;
	};

	// toObject with fallback for non-array-like ES3 strings



	var toIndexedObject = function (it) {
	  return indexedObject(requireObjectCoercible(it));
	};

	// `IsCallable` abstract operation
	// https://tc39.es/ecma262/#sec-iscallable
	var isCallable = function (argument) {
	  return typeof argument == 'function';
	};

	var isObject$1 = function (it) {
	  return typeof it == 'object' ? it !== null : isCallable(it);
	};

	var aFunction = function (argument) {
	  return isCallable(argument) ? argument : undefined;
	};

	var getBuiltIn = function (namespace, method) {
	  return arguments.length < 2 ? aFunction(global_1[namespace]) : global_1[namespace] && global_1[namespace][method];
	};

	var objectIsPrototypeOf = functionUncurryThis({}.isPrototypeOf);

	var engineUserAgent = getBuiltIn('navigator', 'userAgent') || '';

	var process$4 = global_1.process;
	var Deno = global_1.Deno;
	var versions = process$4 && process$4.versions || Deno && Deno.version;
	var v8 = versions && versions.v8;
	var match, version;

	if (v8) {
	  match = v8.split('.');
	  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
	  // but their correct versions are not interesting for us
	  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
	}

	// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
	// so check `userAgent` even if `.v8` exists, but 0
	if (!version && engineUserAgent) {
	  match = engineUserAgent.match(/Edge\/(\d+)/);
	  if (!match || match[1] >= 74) {
	    match = engineUserAgent.match(/Chrome\/(\d+)/);
	    if (match) version = +match[1];
	  }
	}

	var engineV8Version = version;

	/* eslint-disable es/no-symbol -- required for testing */



	// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
	var nativeSymbol = !!Object.getOwnPropertySymbols && !fails(function () {
	  var symbol = Symbol();
	  // Chrome 38 Symbol has incorrect toString conversion
	  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
	  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
	    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
	    !Symbol.sham && engineV8Version && engineV8Version < 41;
	});

	/* eslint-disable es/no-symbol -- required for testing */


	var useSymbolAsUid = nativeSymbol
	  && !Symbol.sham
	  && typeof Symbol.iterator == 'symbol';

	var Object$4 = global_1.Object;

	var isSymbol = useSymbolAsUid ? function (it) {
	  return typeof it == 'symbol';
	} : function (it) {
	  var $Symbol = getBuiltIn('Symbol');
	  return isCallable($Symbol) && objectIsPrototypeOf($Symbol.prototype, Object$4(it));
	};

	var String$5 = global_1.String;

	var tryToString = function (argument) {
	  try {
	    return String$5(argument);
	  } catch (error) {
	    return 'Object';
	  }
	};

	var TypeError$m = global_1.TypeError;

	// `Assert: IsCallable(argument) is true`
	var aCallable = function (argument) {
	  if (isCallable(argument)) return argument;
	  throw TypeError$m(tryToString(argument) + ' is not a function');
	};

	// `GetMethod` abstract operation
	// https://tc39.es/ecma262/#sec-getmethod
	var getMethod = function (V, P) {
	  var func = V[P];
	  return func == null ? undefined : aCallable(func);
	};

	var TypeError$l = global_1.TypeError;

	// `OrdinaryToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-ordinarytoprimitive
	var ordinaryToPrimitive = function (input, pref) {
	  var fn, val;
	  if (pref === 'string' && isCallable(fn = input.toString) && !isObject$1(val = functionCall(fn, input))) return val;
	  if (isCallable(fn = input.valueOf) && !isObject$1(val = functionCall(fn, input))) return val;
	  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject$1(val = functionCall(fn, input))) return val;
	  throw TypeError$l("Can't convert object to primitive value");
	};

	// eslint-disable-next-line es/no-object-defineproperty -- safe
	var defineProperty$b = Object.defineProperty;

	var setGlobal = function (key, value) {
	  try {
	    defineProperty$b(global_1, key, { value: value, configurable: true, writable: true });
	  } catch (error) {
	    global_1[key] = value;
	  } return value;
	};

	var SHARED = '__core-js_shared__';
	var store$1 = global_1[SHARED] || setGlobal(SHARED, {});

	var sharedStore = store$1;

	var shared = createCommonjsModule(function (module) {
	(module.exports = function (key, value) {
	  return sharedStore[key] || (sharedStore[key] = value !== undefined ? value : {});
	})('versions', []).push({
	  version: '3.21.1',
	  mode: 'global',
	  copyright: 'Â© 2014-2022 Denis Pushkarev (zloirock.ru)',
	  license: 'https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE',
	  source: 'https://github.com/zloirock/core-js'
	});
	});

	var Object$3 = global_1.Object;

	// `ToObject` abstract operation
	// https://tc39.es/ecma262/#sec-toobject
	var toObject = function (argument) {
	  return Object$3(requireObjectCoercible(argument));
	};

	var hasOwnProperty = functionUncurryThis({}.hasOwnProperty);

	// `HasOwnProperty` abstract operation
	// https://tc39.es/ecma262/#sec-hasownproperty
	var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {
	  return hasOwnProperty(toObject(it), key);
	};

	var id$1 = 0;
	var postfix = Math.random();
	var toString$1 = functionUncurryThis(1.0.toString);

	var uid = function (key) {
	  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$1(++id$1 + postfix, 36);
	};

	var WellKnownSymbolsStore$1 = shared('wks');
	var Symbol$3 = global_1.Symbol;
	var symbolFor = Symbol$3 && Symbol$3['for'];
	var createWellKnownSymbol = useSymbolAsUid ? Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid;

	var wellKnownSymbol = function (name) {
	  if (!hasOwnProperty_1(WellKnownSymbolsStore$1, name) || !(nativeSymbol || typeof WellKnownSymbolsStore$1[name] == 'string')) {
	    var description = 'Symbol.' + name;
	    if (nativeSymbol && hasOwnProperty_1(Symbol$3, name)) {
	      WellKnownSymbolsStore$1[name] = Symbol$3[name];
	    } else if (useSymbolAsUid && symbolFor) {
	      WellKnownSymbolsStore$1[name] = symbolFor(description);
	    } else {
	      WellKnownSymbolsStore$1[name] = createWellKnownSymbol(description);
	    }
	  } return WellKnownSymbolsStore$1[name];
	};

	var TypeError$k = global_1.TypeError;
	var TO_PRIMITIVE$1 = wellKnownSymbol('toPrimitive');

	// `ToPrimitive` abstract operation
	// https://tc39.es/ecma262/#sec-toprimitive
	var toPrimitive = function (input, pref) {
	  if (!isObject$1(input) || isSymbol(input)) return input;
	  var exoticToPrim = getMethod(input, TO_PRIMITIVE$1);
	  var result;
	  if (exoticToPrim) {
	    if (pref === undefined) pref = 'default';
	    result = functionCall(exoticToPrim, input, pref);
	    if (!isObject$1(result) || isSymbol(result)) return result;
	    throw TypeError$k("Can't convert object to primitive value");
	  }
	  if (pref === undefined) pref = 'number';
	  return ordinaryToPrimitive(input, pref);
	};

	// `ToPropertyKey` abstract operation
	// https://tc39.es/ecma262/#sec-topropertykey
	var toPropertyKey = function (argument) {
	  var key = toPrimitive(argument, 'string');
	  return isSymbol(key) ? key : key + '';
	};

	var document$3 = global_1.document;
	// typeof document.createElement is 'object' in old IE
	var EXISTS$1 = isObject$1(document$3) && isObject$1(document$3.createElement);

	var documentCreateElement = function (it) {
	  return EXISTS$1 ? document$3.createElement(it) : {};
	};

	// Thanks to IE8 for its funny defineProperty
	var ie8DomDefine = !descriptors && !fails(function () {
	  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
	  return Object.defineProperty(documentCreateElement('div'), 'a', {
	    get: function () { return 7; }
	  }).a != 7;
	});

	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;

	// `Object.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
	var f$8 = descriptors ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {
	  O = toIndexedObject(O);
	  P = toPropertyKey(P);
	  if (ie8DomDefine) try {
	    return $getOwnPropertyDescriptor$2(O, P);
	  } catch (error) { /* empty */ }
	  if (hasOwnProperty_1(O, P)) return createPropertyDescriptor(!functionCall(objectPropertyIsEnumerable.f, O, P), O[P]);
	};

	var objectGetOwnPropertyDescriptor = {
		f: f$8
	};

	// V8 ~ Chrome 36-
	// https://bugs.chromium.org/p/v8/issues/detail?id=3334
	var v8PrototypeDefineBug = descriptors && fails(function () {
	  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
	  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
	    value: 42,
	    writable: false
	  }).prototype != 42;
	});

	var String$4 = global_1.String;
	var TypeError$j = global_1.TypeError;

	// `Assert: Type(argument) is Object`
	var anObject = function (argument) {
	  if (isObject$1(argument)) return argument;
	  throw TypeError$j(String$4(argument) + ' is not an object');
	};

	var TypeError$i = global_1.TypeError;
	// eslint-disable-next-line es/no-object-defineproperty -- safe
	var $defineProperty$1 = Object.defineProperty;
	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;
	var ENUMERABLE = 'enumerable';
	var CONFIGURABLE$1 = 'configurable';
	var WRITABLE = 'writable';

	// `Object.defineProperty` method
	// https://tc39.es/ecma262/#sec-object.defineproperty
	var f$7 = descriptors ? v8PrototypeDefineBug ? function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPropertyKey(P);
	  anObject(Attributes);
	  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
	    var current = $getOwnPropertyDescriptor$1(O, P);
	    if (current && current[WRITABLE]) {
	      O[P] = Attributes.value;
	      Attributes = {
	        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],
	        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
	        writable: false
	      };
	    }
	  } return $defineProperty$1(O, P, Attributes);
	} : $defineProperty$1 : function defineProperty(O, P, Attributes) {
	  anObject(O);
	  P = toPropertyKey(P);
	  anObject(Attributes);
	  if (ie8DomDefine) try {
	    return $defineProperty$1(O, P, Attributes);
	  } catch (error) { /* empty */ }
	  if ('get' in Attributes || 'set' in Attributes) throw TypeError$i('Accessors not supported');
	  if ('value' in Attributes) O[P] = Attributes.value;
	  return O;
	};

	var objectDefineProperty = {
		f: f$7
	};

	var createNonEnumerableProperty = descriptors ? function (object, key, value) {
	  return objectDefineProperty.f(object, key, createPropertyDescriptor(1, value));
	} : function (object, key, value) {
	  object[key] = value;
	  return object;
	};

	var functionToString = functionUncurryThis(Function.toString);

	// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
	if (!isCallable(sharedStore.inspectSource)) {
	  sharedStore.inspectSource = function (it) {
	    return functionToString(it);
	  };
	}

	var inspectSource = sharedStore.inspectSource;

	var WeakMap$2 = global_1.WeakMap;

	var nativeWeakMap = isCallable(WeakMap$2) && /native code/.test(inspectSource(WeakMap$2));

	var keys$2 = shared('keys');

	var sharedKey = function (key) {
	  return keys$2[key] || (keys$2[key] = uid(key));
	};

	var hiddenKeys$1 = {};

	var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
	var TypeError$h = global_1.TypeError;
	var WeakMap$1 = global_1.WeakMap;
	var set$1, get$1, has;

	var enforce = function (it) {
	  return has(it) ? get$1(it) : set$1(it, {});
	};

	var getterFor = function (TYPE) {
	  return function (it) {
	    var state;
	    if (!isObject$1(it) || (state = get$1(it)).type !== TYPE) {
	      throw TypeError$h('Incompatible receiver, ' + TYPE + ' required');
	    } return state;
	  };
	};

	if (nativeWeakMap || sharedStore.state) {
	  var store = sharedStore.state || (sharedStore.state = new WeakMap$1());
	  var wmget = functionUncurryThis(store.get);
	  var wmhas = functionUncurryThis(store.has);
	  var wmset = functionUncurryThis(store.set);
	  set$1 = function (it, metadata) {
	    if (wmhas(store, it)) throw new TypeError$h(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    wmset(store, it, metadata);
	    return metadata;
	  };
	  get$1 = function (it) {
	    return wmget(store, it) || {};
	  };
	  has = function (it) {
	    return wmhas(store, it);
	  };
	} else {
	  var STATE = sharedKey('state');
	  hiddenKeys$1[STATE] = true;
	  set$1 = function (it, metadata) {
	    if (hasOwnProperty_1(it, STATE)) throw new TypeError$h(OBJECT_ALREADY_INITIALIZED);
	    metadata.facade = it;
	    createNonEnumerableProperty(it, STATE, metadata);
	    return metadata;
	  };
	  get$1 = function (it) {
	    return hasOwnProperty_1(it, STATE) ? it[STATE] : {};
	  };
	  has = function (it) {
	    return hasOwnProperty_1(it, STATE);
	  };
	}

	var internalState = {
	  set: set$1,
	  get: get$1,
	  has: has,
	  enforce: enforce,
	  getterFor: getterFor
	};

	var FunctionPrototype$1 = Function.prototype;
	// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	var getDescriptor = descriptors && Object.getOwnPropertyDescriptor;

	var EXISTS = hasOwnProperty_1(FunctionPrototype$1, 'name');
	// additional protection from minified / mangled / dropped function names
	var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
	var CONFIGURABLE = EXISTS && (!descriptors || (descriptors && getDescriptor(FunctionPrototype$1, 'name').configurable));

	var functionName = {
	  EXISTS: EXISTS,
	  PROPER: PROPER,
	  CONFIGURABLE: CONFIGURABLE
	};

	var redefine = createCommonjsModule(function (module) {
	var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;

	var getInternalState = internalState.get;
	var enforceInternalState = internalState.enforce;
	var TEMPLATE = String(String).split('String');

	(module.exports = function (O, key, value, options) {
	  var unsafe = options ? !!options.unsafe : false;
	  var simple = options ? !!options.enumerable : false;
	  var noTargetGet = options ? !!options.noTargetGet : false;
	  var name = options && options.name !== undefined ? options.name : key;
	  var state;
	  if (isCallable(value)) {
	    if (String(name).slice(0, 7) === 'Symbol(') {
	      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
	    }
	    if (!hasOwnProperty_1(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
	      createNonEnumerableProperty(value, 'name', name);
	    }
	    state = enforceInternalState(value);
	    if (!state.source) {
	      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
	    }
	  }
	  if (O === global_1) {
	    if (simple) O[key] = value;
	    else setGlobal(key, value);
	    return;
	  } else if (!unsafe) {
	    delete O[key];
	  } else if (!noTargetGet && O[key]) {
	    simple = true;
	  }
	  if (simple) O[key] = value;
	  else createNonEnumerableProperty(O, key, value);
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, 'toString', function toString() {
	  return isCallable(this) && getInternalState(this).source || inspectSource(this);
	});
	});

	var ceil$1 = Math.ceil;
	var floor$2 = Math.floor;

	// `ToIntegerOrInfinity` abstract operation
	// https://tc39.es/ecma262/#sec-tointegerorinfinity
	var toIntegerOrInfinity = function (argument) {
	  var number = +argument;
	  // eslint-disable-next-line no-self-compare -- safe
	  return number !== number || number === 0 ? 0 : (number > 0 ? floor$2 : ceil$1)(number);
	};

	var max$4 = Math.max;
	var min$7 = Math.min;

	// Helper for a popular repeating case of the spec:
	// Let integer be ? ToInteger(index).
	// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
	var toAbsoluteIndex = function (index, length) {
	  var integer = toIntegerOrInfinity(index);
	  return integer < 0 ? max$4(integer + length, 0) : min$7(integer, length);
	};

	var min$6 = Math.min;

	// `ToLength` abstract operation
	// https://tc39.es/ecma262/#sec-tolength
	var toLength = function (argument) {
	  return argument > 0 ? min$6(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
	};

	// `LengthOfArrayLike` abstract operation
	// https://tc39.es/ecma262/#sec-lengthofarraylike
	var lengthOfArrayLike = function (obj) {
	  return toLength(obj.length);
	};

	// `Array.prototype.{ indexOf, includes }` methods implementation
	var createMethod$5 = function (IS_INCLUDES) {
	  return function ($this, el, fromIndex) {
	    var O = toIndexedObject($this);
	    var length = lengthOfArrayLike(O);
	    var index = toAbsoluteIndex(fromIndex, length);
	    var value;
	    // Array#includes uses SameValueZero equality algorithm
	    // eslint-disable-next-line no-self-compare -- NaN check
	    if (IS_INCLUDES && el != el) while (length > index) {
	      value = O[index++];
	      // eslint-disable-next-line no-self-compare -- NaN check
	      if (value != value) return true;
	    // Array#indexOf ignores holes, Array#includes - not
	    } else for (;length > index; index++) {
	      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

	var arrayIncludes = {
	  // `Array.prototype.includes` method
	  // https://tc39.es/ecma262/#sec-array.prototype.includes
	  includes: createMethod$5(true),
	  // `Array.prototype.indexOf` method
	  // https://tc39.es/ecma262/#sec-array.prototype.indexof
	  indexOf: createMethod$5(false)
	};

	var indexOf$2 = arrayIncludes.indexOf;


	var push$6 = functionUncurryThis([].push);

	var objectKeysInternal = function (object, names) {
	  var O = toIndexedObject(object);
	  var i = 0;
	  var result = [];
	  var key;
	  for (key in O) !hasOwnProperty_1(hiddenKeys$1, key) && hasOwnProperty_1(O, key) && push$6(result, key);
	  // Don't enum bug & hidden keys
	  while (names.length > i) if (hasOwnProperty_1(O, key = names[i++])) {
	    ~indexOf$2(result, key) || push$6(result, key);
	  }
	  return result;
	};

	// IE8- don't enum bug keys
	var enumBugKeys = [
	  'constructor',
	  'hasOwnProperty',
	  'isPrototypeOf',
	  'propertyIsEnumerable',
	  'toLocaleString',
	  'toString',
	  'valueOf'
	];

	var hiddenKeys = enumBugKeys.concat('length', 'prototype');

	// `Object.getOwnPropertyNames` method
	// https://tc39.es/ecma262/#sec-object.getownpropertynames
	// eslint-disable-next-line es/no-object-getownpropertynames -- safe
	var f$6 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
	  return objectKeysInternal(O, hiddenKeys);
	};

	var objectGetOwnPropertyNames = {
		f: f$6
	};

	// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
	var f$5 = Object.getOwnPropertySymbols;

	var objectGetOwnPropertySymbols = {
		f: f$5
	};

	var concat$3 = functionUncurryThis([].concat);

	// all object keys, includes non-enumerable and symbols
	var ownKeys$8 = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
	  var keys = objectGetOwnPropertyNames.f(anObject(it));
	  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
	  return getOwnPropertySymbols ? concat$3(keys, getOwnPropertySymbols(it)) : keys;
	};

	var copyConstructorProperties = function (target, source, exceptions) {
	  var keys = ownKeys$8(source);
	  var defineProperty = objectDefineProperty.f;
	  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	  for (var i = 0; i < keys.length; i++) {
	    var key = keys[i];
	    if (!hasOwnProperty_1(target, key) && !(exceptions && hasOwnProperty_1(exceptions, key))) {
	      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
	    }
	  }
	};

	var replacement = /#|\.prototype\./;

	var isForced = function (feature, detection) {
	  var value = data$1[normalize(feature)];
	  return value == POLYFILL ? true
	    : value == NATIVE ? false
	    : isCallable(detection) ? fails(detection)
	    : !!detection;
	};

	var normalize = isForced.normalize = function (string) {
	  return String(string).replace(replacement, '.').toLowerCase();
	};

	var data$1 = isForced.data = {};
	var NATIVE = isForced.NATIVE = 'N';
	var POLYFILL = isForced.POLYFILL = 'P';

	var isForced_1 = isForced;

	var getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;






	/*
	  options.target      - name of the target object
	  options.global      - target is the global object
	  options.stat        - export as static methods of target
	  options.proto       - export as prototype methods of target
	  options.real        - real prototype method for the `pure` version
	  options.forced      - export even if the native feature is available
	  options.bind        - bind methods to the target, required for the `pure` version
	  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
	  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
	  options.sham        - add a flag to not completely full polyfills
	  options.enumerable  - export as enumerable property
	  options.noTargetGet - prevent calling a getter on target
	  options.name        - the .name of the function if it does not match the key
	*/
	var _export = function (options, source) {
	  var TARGET = options.target;
	  var GLOBAL = options.global;
	  var STATIC = options.stat;
	  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
	  if (GLOBAL) {
	    target = global_1;
	  } else if (STATIC) {
	    target = global_1[TARGET] || setGlobal(TARGET, {});
	  } else {
	    target = (global_1[TARGET] || {}).prototype;
	  }
	  if (target) for (key in source) {
	    sourceProperty = source[key];
	    if (options.noTargetGet) {
	      descriptor = getOwnPropertyDescriptor$4(target, key);
	      targetProperty = descriptor && descriptor.value;
	    } else targetProperty = target[key];
	    FORCED = isForced_1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
	    // contained in target
	    if (!FORCED && targetProperty !== undefined) {
	      if (typeof sourceProperty == typeof targetProperty) continue;
	      copyConstructorProperties(sourceProperty, targetProperty);
	    }
	    // add a flag to not completely full polyfills
	    if (options.sham || (targetProperty && targetProperty.sham)) {
	      createNonEnumerableProperty(sourceProperty, 'sham', true);
	    }
	    // extend global
	    redefine(target, key, sourceProperty, options);
	  }
	};

	var defineProperty$a = objectDefineProperty.f;

	// `Object.defineProperty` method
	// https://tc39.es/ecma262/#sec-object.defineproperty
	// eslint-disable-next-line es/no-object-defineproperty -- safe
	_export({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty$a, sham: !descriptors }, {
	  defineProperty: defineProperty$a
	});

	function _defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	}

	var FunctionPrototype = Function.prototype;
	var apply = FunctionPrototype.apply;
	var call = FunctionPrototype.call;

	// eslint-disable-next-line es/no-reflect -- safe
	var functionApply = typeof Reflect == 'object' && Reflect.apply || (functionBindNative ? call.bind(apply) : function () {
	  return call.apply(apply, arguments);
	});

	// `IsArray` abstract operation
	// https://tc39.es/ecma262/#sec-isarray
	// eslint-disable-next-line es/no-array-isarray -- safe
	var isArray$3 = Array.isArray || function isArray(argument) {
	  return classofRaw(argument) == 'Array';
	};

	var TO_STRING_TAG$3 = wellKnownSymbol('toStringTag');
	var test$1 = {};

	test$1[TO_STRING_TAG$3] = 'z';

	var toStringTagSupport = String(test$1) === '[object z]';

	var TO_STRING_TAG$2 = wellKnownSymbol('toStringTag');
	var Object$2 = global_1.Object;

	// ES3 wrong here
	var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function (it, key) {
	  try {
	    return it[key];
	  } catch (error) { /* empty */ }
	};

	// getting tag from ES6+ `Object.prototype.toString`
	var classof = toStringTagSupport ? classofRaw : function (it) {
	  var O, tag, result;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (tag = tryGet(O = Object$2(it), TO_STRING_TAG$2)) == 'string' ? tag
	    // builtinTag case
	    : CORRECT_ARGUMENTS ? classofRaw(O)
	    // ES3 arguments fallback
	    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
	};

	var String$3 = global_1.String;

	var toString_1 = function (argument) {
	  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
	  return String$3(argument);
	};

	// `Object.keys` method
	// https://tc39.es/ecma262/#sec-object.keys
	// eslint-disable-next-line es/no-object-keys -- safe
	var objectKeys = Object.keys || function keys(O) {
	  return objectKeysInternal(O, enumBugKeys);
	};

	// `Object.defineProperties` method
	// https://tc39.es/ecma262/#sec-object.defineproperties
	// eslint-disable-next-line es/no-object-defineproperties -- safe
	var f$4 = descriptors && !v8PrototypeDefineBug ? Object.defineProperties : function defineProperties(O, Properties) {
	  anObject(O);
	  var props = toIndexedObject(Properties);
	  var keys = objectKeys(Properties);
	  var length = keys.length;
	  var index = 0;
	  var key;
	  while (length > index) objectDefineProperty.f(O, key = keys[index++], props[key]);
	  return O;
	};

	var objectDefineProperties = {
		f: f$4
	};

	var html$1 = getBuiltIn('document', 'documentElement');

	/* global ActiveXObject -- old IE, WSH */








	var GT = '>';
	var LT = '<';
	var PROTOTYPE$1 = 'prototype';
	var SCRIPT = 'script';
	var IE_PROTO$1 = sharedKey('IE_PROTO');

	var EmptyConstructor = function () { /* empty */ };

	var scriptTag = function (content) {
	  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
	};

	// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
	var NullProtoObjectViaActiveX = function (activeXDocument) {
	  activeXDocument.write(scriptTag(''));
	  activeXDocument.close();
	  var temp = activeXDocument.parentWindow.Object;
	  activeXDocument = null; // avoid memory leak
	  return temp;
	};

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var NullProtoObjectViaIFrame = function () {
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = documentCreateElement('iframe');
	  var JS = 'java' + SCRIPT + ':';
	  var iframeDocument;
	  iframe.style.display = 'none';
	  html$1.appendChild(iframe);
	  // https://github.com/zloirock/core-js/issues/475
	  iframe.src = String(JS);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(scriptTag('document.F=Object'));
	  iframeDocument.close();
	  return iframeDocument.F;
	};

	// Check for document.domain and active x support
	// No need to use active x approach when document.domain is not set
	// see https://github.com/es-shims/es5-shim/issues/150
	// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
	// avoid IE GC bug
	var activeXDocument;
	var NullProtoObject = function () {
	  try {
	    activeXDocument = new ActiveXObject('htmlfile');
	  } catch (error) { /* ignore */ }
	  NullProtoObject = typeof document != 'undefined'
	    ? document.domain && activeXDocument
	      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
	      : NullProtoObjectViaIFrame()
	    : NullProtoObjectViaActiveX(activeXDocument); // WSH
	  var length = enumBugKeys.length;
	  while (length--) delete NullProtoObject[PROTOTYPE$1][enumBugKeys[length]];
	  return NullProtoObject();
	};

	hiddenKeys$1[IE_PROTO$1] = true;

	// `Object.create` method
	// https://tc39.es/ecma262/#sec-object.create
	var objectCreate = Object.create || function create(O, Properties) {
	  var result;
	  if (O !== null) {
	    EmptyConstructor[PROTOTYPE$1] = anObject(O);
	    result = new EmptyConstructor();
	    EmptyConstructor[PROTOTYPE$1] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO$1] = O;
	  } else result = NullProtoObject();
	  return Properties === undefined ? result : objectDefineProperties.f(result, Properties);
	};

	var createProperty = function (object, key, value) {
	  var propertyKey = toPropertyKey(key);
	  if (propertyKey in object) objectDefineProperty.f(object, propertyKey, createPropertyDescriptor(0, value));
	  else object[propertyKey] = value;
	};

	var Array$5 = global_1.Array;
	var max$3 = Math.max;

	var arraySliceSimple = function (O, start, end) {
	  var length = lengthOfArrayLike(O);
	  var k = toAbsoluteIndex(start, length);
	  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
	  var result = Array$5(max$3(fin - k, 0));
	  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
	  result.length = n;
	  return result;
	};

	/* eslint-disable es/no-object-getownpropertynames -- safe */


	var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;


	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function (it) {
	  try {
	    return $getOwnPropertyNames$1(it);
	  } catch (error) {
	    return arraySliceSimple(windowNames);
	  }
	};

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var f$3 = function getOwnPropertyNames(it) {
	  return windowNames && classofRaw(it) == 'Window'
	    ? getWindowNames(it)
	    : $getOwnPropertyNames$1(toIndexedObject(it));
	};

	var objectGetOwnPropertyNamesExternal = {
		f: f$3
	};

	var arraySlice$1 = functionUncurryThis([].slice);

	var f$2 = wellKnownSymbol;

	var wellKnownSymbolWrapped = {
		f: f$2
	};

	var path = global_1;

	var defineProperty$9 = objectDefineProperty.f;

	var defineWellKnownSymbol = function (NAME) {
	  var Symbol = path.Symbol || (path.Symbol = {});
	  if (!hasOwnProperty_1(Symbol, NAME)) defineProperty$9(Symbol, NAME, {
	    value: wellKnownSymbolWrapped.f(NAME)
	  });
	};

	var defineProperty$8 = objectDefineProperty.f;



	var TO_STRING_TAG$1 = wellKnownSymbol('toStringTag');

	var setToStringTag = function (target, TAG, STATIC) {
	  if (target && !STATIC) target = target.prototype;
	  if (target && !hasOwnProperty_1(target, TO_STRING_TAG$1)) {
	    defineProperty$8(target, TO_STRING_TAG$1, { configurable: true, value: TAG });
	  }
	};

	var bind$2 = functionUncurryThis(functionUncurryThis.bind);

	// optional / simple context binding
	var functionBindContext = function (fn, that) {
	  aCallable(fn);
	  return that === undefined ? fn : functionBindNative ? bind$2(fn, that) : function (/* ...args */) {
	    return fn.apply(that, arguments);
	  };
	};

	var noop$1 = function () { /* empty */ };
	var empty$1 = [];
	var construct$1 = getBuiltIn('Reflect', 'construct');
	var constructorRegExp = /^\s*(?:class|function)\b/;
	var exec$4 = functionUncurryThis(constructorRegExp.exec);
	var INCORRECT_TO_STRING = !constructorRegExp.exec(noop$1);

	var isConstructorModern = function isConstructor(argument) {
	  if (!isCallable(argument)) return false;
	  try {
	    construct$1(noop$1, empty$1, argument);
	    return true;
	  } catch (error) {
	    return false;
	  }
	};

	var isConstructorLegacy = function isConstructor(argument) {
	  if (!isCallable(argument)) return false;
	  switch (classof(argument)) {
	    case 'AsyncFunction':
	    case 'GeneratorFunction':
	    case 'AsyncGeneratorFunction': return false;
	  }
	  try {
	    // we can't check .prototype since constructors produced by .bind haven't it
	    // `Function#toString` throws on some built-it function in some legacy engines
	    // (for example, `DOMQuad` and similar in FF41-)
	    return INCORRECT_TO_STRING || !!exec$4(constructorRegExp, inspectSource(argument));
	  } catch (error) {
	    return true;
	  }
	};

	isConstructorLegacy.sham = true;

	// `IsConstructor` abstract operation
	// https://tc39.es/ecma262/#sec-isconstructor
	var isConstructor = !construct$1 || fails(function () {
	  var called;
	  return isConstructorModern(isConstructorModern.call)
	    || !isConstructorModern(Object)
	    || !isConstructorModern(function () { called = true; })
	    || called;
	}) ? isConstructorLegacy : isConstructorModern;

	var SPECIES$6 = wellKnownSymbol('species');
	var Array$4 = global_1.Array;

	// a part of `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate
	var arraySpeciesConstructor = function (originalArray) {
	  var C;
	  if (isArray$3(originalArray)) {
	    C = originalArray.constructor;
	    // cross-realm fallback
	    if (isConstructor(C) && (C === Array$4 || isArray$3(C.prototype))) C = undefined;
	    else if (isObject$1(C)) {
	      C = C[SPECIES$6];
	      if (C === null) C = undefined;
	    }
	  } return C === undefined ? Array$4 : C;
	};

	// `ArraySpeciesCreate` abstract operation
	// https://tc39.es/ecma262/#sec-arrayspeciescreate
	var arraySpeciesCreate = function (originalArray, length) {
	  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
	};

	var push$5 = functionUncurryThis([].push);

	// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
	var createMethod$4 = function (TYPE) {
	  var IS_MAP = TYPE == 1;
	  var IS_FILTER = TYPE == 2;
	  var IS_SOME = TYPE == 3;
	  var IS_EVERY = TYPE == 4;
	  var IS_FIND_INDEX = TYPE == 6;
	  var IS_FILTER_REJECT = TYPE == 7;
	  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
	  return function ($this, callbackfn, that, specificCreate) {
	    var O = toObject($this);
	    var self = indexedObject(O);
	    var boundFunction = functionBindContext(callbackfn, that);
	    var length = lengthOfArrayLike(self);
	    var index = 0;
	    var create = specificCreate || arraySpeciesCreate;
	    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
	    var value, result;
	    for (;length > index; index++) if (NO_HOLES || index in self) {
	      value = self[index];
	      result = boundFunction(value, index, O);
	      if (TYPE) {
	        if (IS_MAP) target[index] = result; // map
	        else if (result) switch (TYPE) {
	          case 3: return true;              // some
	          case 5: return value;             // find
	          case 6: return index;             // findIndex
	          case 2: push$5(target, value);      // filter
	        } else switch (TYPE) {
	          case 4: return false;             // every
	          case 7: push$5(target, value);      // filterReject
	        }
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
	  };
	};

	var arrayIteration = {
	  // `Array.prototype.forEach` method
	  // https://tc39.es/ecma262/#sec-array.prototype.foreach
	  forEach: createMethod$4(0),
	  // `Array.prototype.map` method
	  // https://tc39.es/ecma262/#sec-array.prototype.map
	  map: createMethod$4(1),
	  // `Array.prototype.filter` method
	  // https://tc39.es/ecma262/#sec-array.prototype.filter
	  filter: createMethod$4(2),
	  // `Array.prototype.some` method
	  // https://tc39.es/ecma262/#sec-array.prototype.some
	  some: createMethod$4(3),
	  // `Array.prototype.every` method
	  // https://tc39.es/ecma262/#sec-array.prototype.every
	  every: createMethod$4(4),
	  // `Array.prototype.find` method
	  // https://tc39.es/ecma262/#sec-array.prototype.find
	  find: createMethod$4(5),
	  // `Array.prototype.findIndex` method
	  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
	  findIndex: createMethod$4(6),
	  // `Array.prototype.filterReject` method
	  // https://github.com/tc39/proposal-array-filtering
	  filterReject: createMethod$4(7)
	};

	var $forEach$1 = arrayIteration.forEach;

	var HIDDEN = sharedKey('hidden');
	var SYMBOL = 'Symbol';
	var PROTOTYPE = 'prototype';
	var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

	var setInternalState$5 = internalState.set;
	var getInternalState$5 = internalState.getterFor(SYMBOL);

	var ObjectPrototype$2 = Object[PROTOTYPE];
	var $Symbol = global_1.Symbol;
	var SymbolPrototype$1 = $Symbol && $Symbol[PROTOTYPE];
	var TypeError$g = global_1.TypeError;
	var QObject = global_1.QObject;
	var $stringify$1 = getBuiltIn('JSON', 'stringify');
	var nativeGetOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;
	var nativeDefineProperty = objectDefineProperty.f;
	var nativeGetOwnPropertyNames = objectGetOwnPropertyNamesExternal.f;
	var nativePropertyIsEnumerable = objectPropertyIsEnumerable.f;
	var push$4 = functionUncurryThis([].push);

	var AllSymbols = shared('symbols');
	var ObjectPrototypeSymbols = shared('op-symbols');
	var StringToSymbolRegistry = shared('string-to-symbol-registry');
	var SymbolToStringRegistry = shared('symbol-to-string-registry');
	var WellKnownSymbolsStore = shared('wks');

	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDescriptor = descriptors && fails(function () {
	  return objectCreate(nativeDefineProperty({}, 'a', {
	    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
	  })).a != 7;
	}) ? function (O, P, Attributes) {
	  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$2, P);
	  if (ObjectPrototypeDescriptor) delete ObjectPrototype$2[P];
	  nativeDefineProperty(O, P, Attributes);
	  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$2) {
	    nativeDefineProperty(ObjectPrototype$2, P, ObjectPrototypeDescriptor);
	  }
	} : nativeDefineProperty;

	var wrap = function (tag, description) {
	  var symbol = AllSymbols[tag] = objectCreate(SymbolPrototype$1);
	  setInternalState$5(symbol, {
	    type: SYMBOL,
	    tag: tag,
	    description: description
	  });
	  if (!descriptors) symbol.description = description;
	  return symbol;
	};

	var $defineProperty = function defineProperty(O, P, Attributes) {
	  if (O === ObjectPrototype$2) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
	  anObject(O);
	  var key = toPropertyKey(P);
	  anObject(Attributes);
	  if (hasOwnProperty_1(AllSymbols, key)) {
	    if (!Attributes.enumerable) {
	      if (!hasOwnProperty_1(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
	      O[HIDDEN][key] = true;
	    } else {
	      if (hasOwnProperty_1(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
	      Attributes = objectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
	    } return setSymbolDescriptor(O, key, Attributes);
	  } return nativeDefineProperty(O, key, Attributes);
	};

	var $defineProperties = function defineProperties(O, Properties) {
	  anObject(O);
	  var properties = toIndexedObject(Properties);
	  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
	  $forEach$1(keys, function (key) {
	    if (!descriptors || functionCall($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
	  });
	  return O;
	};

	var $create = function create(O, Properties) {
	  return Properties === undefined ? objectCreate(O) : $defineProperties(objectCreate(O), Properties);
	};

	var $propertyIsEnumerable = function propertyIsEnumerable(V) {
	  var P = toPropertyKey(V);
	  var enumerable = functionCall(nativePropertyIsEnumerable, this, P);
	  if (this === ObjectPrototype$2 && hasOwnProperty_1(AllSymbols, P) && !hasOwnProperty_1(ObjectPrototypeSymbols, P)) return false;
	  return enumerable || !hasOwnProperty_1(this, P) || !hasOwnProperty_1(AllSymbols, P) || hasOwnProperty_1(this, HIDDEN) && this[HIDDEN][P]
	    ? enumerable : true;
	};

	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
	  var it = toIndexedObject(O);
	  var key = toPropertyKey(P);
	  if (it === ObjectPrototype$2 && hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(ObjectPrototypeSymbols, key)) return;
	  var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);
	  if (descriptor && hasOwnProperty_1(AllSymbols, key) && !(hasOwnProperty_1(it, HIDDEN) && it[HIDDEN][key])) {
	    descriptor.enumerable = true;
	  }
	  return descriptor;
	};

	var $getOwnPropertyNames = function getOwnPropertyNames(O) {
	  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
	  var result = [];
	  $forEach$1(names, function (key) {
	    if (!hasOwnProperty_1(AllSymbols, key) && !hasOwnProperty_1(hiddenKeys$1, key)) push$4(result, key);
	  });
	  return result;
	};

	var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
	  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$2;
	  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
	  var result = [];
	  $forEach$1(names, function (key) {
	    if (hasOwnProperty_1(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwnProperty_1(ObjectPrototype$2, key))) {
	      push$4(result, AllSymbols[key]);
	    }
	  });
	  return result;
	};

	// `Symbol` constructor
	// https://tc39.es/ecma262/#sec-symbol-constructor
	if (!nativeSymbol) {
	  $Symbol = function Symbol() {
	    if (objectIsPrototypeOf(SymbolPrototype$1, this)) throw TypeError$g('Symbol is not a constructor');
	    var description = !arguments.length || arguments[0] === undefined ? undefined : toString_1(arguments[0]);
	    var tag = uid(description);
	    var setter = function (value) {
	      if (this === ObjectPrototype$2) functionCall(setter, ObjectPrototypeSymbols, value);
	      if (hasOwnProperty_1(this, HIDDEN) && hasOwnProperty_1(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
	      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
	    };
	    if (descriptors && USE_SETTER) setSymbolDescriptor(ObjectPrototype$2, tag, { configurable: true, set: setter });
	    return wrap(tag, description);
	  };

	  SymbolPrototype$1 = $Symbol[PROTOTYPE];

	  redefine(SymbolPrototype$1, 'toString', function toString() {
	    return getInternalState$5(this).tag;
	  });

	  redefine($Symbol, 'withoutSetter', function (description) {
	    return wrap(uid(description), description);
	  });

	  objectPropertyIsEnumerable.f = $propertyIsEnumerable;
	  objectDefineProperty.f = $defineProperty;
	  objectDefineProperties.f = $defineProperties;
	  objectGetOwnPropertyDescriptor.f = $getOwnPropertyDescriptor;
	  objectGetOwnPropertyNames.f = objectGetOwnPropertyNamesExternal.f = $getOwnPropertyNames;
	  objectGetOwnPropertySymbols.f = $getOwnPropertySymbols;

	  wellKnownSymbolWrapped.f = function (name) {
	    return wrap(wellKnownSymbol(name), name);
	  };

	  if (descriptors) {
	    // https://github.com/tc39/proposal-Symbol-description
	    nativeDefineProperty(SymbolPrototype$1, 'description', {
	      configurable: true,
	      get: function description() {
	        return getInternalState$5(this).description;
	      }
	    });
	    {
	      redefine(ObjectPrototype$2, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
	    }
	  }
	}

	_export({ global: true, wrap: true, forced: !nativeSymbol, sham: !nativeSymbol }, {
	  Symbol: $Symbol
	});

	$forEach$1(objectKeys(WellKnownSymbolsStore), function (name) {
	  defineWellKnownSymbol(name);
	});

	_export({ target: SYMBOL, stat: true, forced: !nativeSymbol }, {
	  // `Symbol.for` method
	  // https://tc39.es/ecma262/#sec-symbol.for
	  'for': function (key) {
	    var string = toString_1(key);
	    if (hasOwnProperty_1(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
	    var symbol = $Symbol(string);
	    StringToSymbolRegistry[string] = symbol;
	    SymbolToStringRegistry[symbol] = string;
	    return symbol;
	  },
	  // `Symbol.keyFor` method
	  // https://tc39.es/ecma262/#sec-symbol.keyfor
	  keyFor: function keyFor(sym) {
	    if (!isSymbol(sym)) throw TypeError$g(sym + ' is not a symbol');
	    if (hasOwnProperty_1(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
	  },
	  useSetter: function () { USE_SETTER = true; },
	  useSimple: function () { USE_SETTER = false; }
	});

	_export({ target: 'Object', stat: true, forced: !nativeSymbol, sham: !descriptors }, {
	  // `Object.create` method
	  // https://tc39.es/ecma262/#sec-object.create
	  create: $create,
	  // `Object.defineProperty` method
	  // https://tc39.es/ecma262/#sec-object.defineproperty
	  defineProperty: $defineProperty,
	  // `Object.defineProperties` method
	  // https://tc39.es/ecma262/#sec-object.defineproperties
	  defineProperties: $defineProperties,
	  // `Object.getOwnPropertyDescriptor` method
	  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
	});

	_export({ target: 'Object', stat: true, forced: !nativeSymbol }, {
	  // `Object.getOwnPropertyNames` method
	  // https://tc39.es/ecma262/#sec-object.getownpropertynames
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // `Object.getOwnPropertySymbols` method
	  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
	// https://bugs.chromium.org/p/v8/issues/detail?id=3443
	_export({ target: 'Object', stat: true, forced: fails(function () { objectGetOwnPropertySymbols.f(1); }) }, {
	  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
	    return objectGetOwnPropertySymbols.f(toObject(it));
	  }
	});

	// `JSON.stringify` method behavior with symbols
	// https://tc39.es/ecma262/#sec-json.stringify
	if ($stringify$1) {
	  var FORCED_JSON_STRINGIFY = !nativeSymbol || fails(function () {
	    var symbol = $Symbol();
	    // MS Edge converts symbol values to JSON as {}
	    return $stringify$1([symbol]) != '[null]'
	      // WebKit converts symbol values to JSON as null
	      || $stringify$1({ a: symbol }) != '{}'
	      // V8 throws on boxed symbols
	      || $stringify$1(Object(symbol)) != '{}';
	  });

	  _export({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
	    // eslint-disable-next-line no-unused-vars -- required for `.length`
	    stringify: function stringify(it, replacer, space) {
	      var args = arraySlice$1(arguments);
	      var $replacer = replacer;
	      if (!isObject$1(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
	      if (!isArray$3(replacer)) replacer = function (key, value) {
	        if (isCallable($replacer)) value = functionCall($replacer, this, key, value);
	        if (!isSymbol(value)) return value;
	      };
	      args[1] = replacer;
	      return functionApply($stringify$1, null, args);
	    }
	  });
	}

	// `Symbol.prototype[@@toPrimitive]` method
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
	if (!SymbolPrototype$1[TO_PRIMITIVE]) {
	  var valueOf = SymbolPrototype$1.valueOf;
	  // eslint-disable-next-line no-unused-vars -- required for .length
	  redefine(SymbolPrototype$1, TO_PRIMITIVE, function (hint) {
	    // TODO: improve hint logic
	    return functionCall(valueOf, this);
	  });
	}
	// `Symbol.prototype[@@toStringTag]` property
	// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
	setToStringTag($Symbol, SYMBOL);

	hiddenKeys$1[HIDDEN] = true;

	var defineProperty$7 = objectDefineProperty.f;


	var NativeSymbol = global_1.Symbol;
	var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

	if (descriptors && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
	  // Safari 12 bug
	  NativeSymbol().description !== undefined
	)) {
	  var EmptyStringDescriptionStore = {};
	  // wrap Symbol constructor for correct work with undefined description
	  var SymbolWrapper = function Symbol() {
	    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString_1(arguments[0]);
	    var result = objectIsPrototypeOf(SymbolPrototype, this)
	      ? new NativeSymbol(description)
	      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
	      : description === undefined ? NativeSymbol() : NativeSymbol(description);
	    if (description === '') EmptyStringDescriptionStore[result] = true;
	    return result;
	  };

	  copyConstructorProperties(SymbolWrapper, NativeSymbol);
	  SymbolWrapper.prototype = SymbolPrototype;
	  SymbolPrototype.constructor = SymbolWrapper;

	  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
	  var symbolToString = functionUncurryThis(SymbolPrototype.toString);
	  var symbolValueOf = functionUncurryThis(SymbolPrototype.valueOf);
	  var regexp = /^Symbol\((.*)\)[^)]+$/;
	  var replace$5 = functionUncurryThis(''.replace);
	  var stringSlice$8 = functionUncurryThis(''.slice);

	  defineProperty$7(SymbolPrototype, 'description', {
	    configurable: true,
	    get: function description() {
	      var symbol = symbolValueOf(this);
	      var string = symbolToString(symbol);
	      if (hasOwnProperty_1(EmptyStringDescriptionStore, symbol)) return '';
	      var desc = NATIVE_SYMBOL ? stringSlice$8(string, 7, -1) : replace$5(string, regexp, '$1');
	      return desc === '' ? undefined : desc;
	    }
	  });

	  _export({ global: true, forced: true }, {
	    Symbol: SymbolWrapper
	  });
	}

	// `Object.prototype.toString` method implementation
	// https://tc39.es/ecma262/#sec-object.prototype.tostring
	var objectToString = toStringTagSupport ? {}.toString : function toString() {
	  return '[object ' + classof(this) + ']';
	};

	// `Object.prototype.toString` method
	// https://tc39.es/ecma262/#sec-object.prototype.tostring
	if (!toStringTagSupport) {
	  redefine(Object.prototype, 'toString', objectToString, { unsafe: true });
	}

	// `Symbol.iterator` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.iterator
	defineWellKnownSymbol('iterator');

	var UNSCOPABLES = wellKnownSymbol('unscopables');
	var ArrayPrototype$1 = Array.prototype;

	// Array.prototype[@@unscopables]
	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	if (ArrayPrototype$1[UNSCOPABLES] == undefined) {
	  objectDefineProperty.f(ArrayPrototype$1, UNSCOPABLES, {
	    configurable: true,
	    value: objectCreate(null)
	  });
	}

	// add a key to Array.prototype[@@unscopables]
	var addToUnscopables = function (key) {
	  ArrayPrototype$1[UNSCOPABLES][key] = true;
	};

	var iterators = {};

	var correctPrototypeGetter = !fails(function () {
	  function F() { /* empty */ }
	  F.prototype.constructor = null;
	  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
	  return Object.getPrototypeOf(new F()) !== F.prototype;
	});

	var IE_PROTO = sharedKey('IE_PROTO');
	var Object$1 = global_1.Object;
	var ObjectPrototype$1 = Object$1.prototype;

	// `Object.getPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.getprototypeof
	var objectGetPrototypeOf = correctPrototypeGetter ? Object$1.getPrototypeOf : function (O) {
	  var object = toObject(O);
	  if (hasOwnProperty_1(object, IE_PROTO)) return object[IE_PROTO];
	  var constructor = object.constructor;
	  if (isCallable(constructor) && object instanceof constructor) {
	    return constructor.prototype;
	  } return object instanceof Object$1 ? ObjectPrototype$1 : null;
	};

	var ITERATOR$7 = wellKnownSymbol('iterator');
	var BUGGY_SAFARI_ITERATORS$1 = false;

	// `%IteratorPrototype%` object
	// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
	var IteratorPrototype$2, PrototypeOfArrayIteratorPrototype, arrayIterator;

	/* eslint-disable es/no-array-prototype-keys -- safe */
	if ([].keys) {
	  arrayIterator = [].keys();
	  // Safari 8 has buggy iterators w/o `next`
	  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;
	  else {
	    PrototypeOfArrayIteratorPrototype = objectGetPrototypeOf(objectGetPrototypeOf(arrayIterator));
	    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$2 = PrototypeOfArrayIteratorPrototype;
	  }
	}

	var NEW_ITERATOR_PROTOTYPE = IteratorPrototype$2 == undefined || fails(function () {
	  var test = {};
	  // FF44- legacy iterators case
	  return IteratorPrototype$2[ITERATOR$7].call(test) !== test;
	});

	if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$2 = {};

	// `%IteratorPrototype%[@@iterator]()` method
	// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
	if (!isCallable(IteratorPrototype$2[ITERATOR$7])) {
	  redefine(IteratorPrototype$2, ITERATOR$7, function () {
	    return this;
	  });
	}

	var iteratorsCore = {
	  IteratorPrototype: IteratorPrototype$2,
	  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1
	};

	var IteratorPrototype$1 = iteratorsCore.IteratorPrototype;





	var returnThis$1 = function () { return this; };

	var createIteratorConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
	  var TO_STRING_TAG = NAME + ' Iterator';
	  IteratorConstructor.prototype = objectCreate(IteratorPrototype$1, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
	  setToStringTag(IteratorConstructor, TO_STRING_TAG, false);
	  iterators[TO_STRING_TAG] = returnThis$1;
	  return IteratorConstructor;
	};

	var String$2 = global_1.String;
	var TypeError$f = global_1.TypeError;

	var aPossiblePrototype = function (argument) {
	  if (typeof argument == 'object' || isCallable(argument)) return argument;
	  throw TypeError$f("Can't set " + String$2(argument) + ' as a prototype');
	};

	/* eslint-disable no-proto -- safe */




	// `Object.setPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.setprototypeof
	// Works with __proto__ only. Old v8 can't work with null proto objects.
	// eslint-disable-next-line es/no-object-setprototypeof -- safe
	var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {
	  var CORRECT_SETTER = false;
	  var test = {};
	  var setter;
	  try {
	    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
	    setter = functionUncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
	    setter(test, []);
	    CORRECT_SETTER = test instanceof Array;
	  } catch (error) { /* empty */ }
	  return function setPrototypeOf(O, proto) {
	    anObject(O);
	    aPossiblePrototype(proto);
	    if (CORRECT_SETTER) setter(O, proto);
	    else O.__proto__ = proto;
	    return O;
	  };
	}() : undefined);

	var PROPER_FUNCTION_NAME$2 = functionName.PROPER;
	var CONFIGURABLE_FUNCTION_NAME = functionName.CONFIGURABLE;
	var IteratorPrototype = iteratorsCore.IteratorPrototype;
	var BUGGY_SAFARI_ITERATORS = iteratorsCore.BUGGY_SAFARI_ITERATORS;
	var ITERATOR$6 = wellKnownSymbol('iterator');
	var KEYS = 'keys';
	var VALUES = 'values';
	var ENTRIES = 'entries';

	var returnThis = function () { return this; };

	var defineIterator = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
	  createIteratorConstructor(IteratorConstructor, NAME, next);

	  var getIterationMethod = function (KIND) {
	    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
	    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
	    switch (KIND) {
	      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
	      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
	      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
	    } return function () { return new IteratorConstructor(this); };
	  };

	  var TO_STRING_TAG = NAME + ' Iterator';
	  var INCORRECT_VALUES_NAME = false;
	  var IterablePrototype = Iterable.prototype;
	  var nativeIterator = IterablePrototype[ITERATOR$6]
	    || IterablePrototype['@@iterator']
	    || DEFAULT && IterablePrototype[DEFAULT];
	  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
	  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
	  var CurrentIteratorPrototype, methods, KEY;

	  // fix native
	  if (anyNativeIterator) {
	    CurrentIteratorPrototype = objectGetPrototypeOf(anyNativeIterator.call(new Iterable()));
	    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
	      if (objectGetPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
	        if (objectSetPrototypeOf) {
	          objectSetPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
	        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR$6])) {
	          redefine(CurrentIteratorPrototype, ITERATOR$6, returnThis);
	        }
	      }
	      // Set @@toStringTag to native iterators
	      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true);
	    }
	  }

	  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
	  if (PROPER_FUNCTION_NAME$2 && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
	    if (CONFIGURABLE_FUNCTION_NAME) {
	      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
	    } else {
	      INCORRECT_VALUES_NAME = true;
	      defaultIterator = function values() { return functionCall(nativeIterator, this); };
	    }
	  }

	  // export additional methods
	  if (DEFAULT) {
	    methods = {
	      values: getIterationMethod(VALUES),
	      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
	      entries: getIterationMethod(ENTRIES)
	    };
	    if (FORCED) for (KEY in methods) {
	      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
	        redefine(IterablePrototype, KEY, methods[KEY]);
	      }
	    } else _export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
	  }

	  // define iterator
	  if (IterablePrototype[ITERATOR$6] !== defaultIterator) {
	    redefine(IterablePrototype, ITERATOR$6, defaultIterator, { name: DEFAULT });
	  }
	  iterators[NAME] = defaultIterator;

	  return methods;
	};

	var defineProperty$6 = objectDefineProperty.f;




	var ARRAY_ITERATOR = 'Array Iterator';
	var setInternalState$4 = internalState.set;
	var getInternalState$4 = internalState.getterFor(ARRAY_ITERATOR);

	// `Array.prototype.entries` method
	// https://tc39.es/ecma262/#sec-array.prototype.entries
	// `Array.prototype.keys` method
	// https://tc39.es/ecma262/#sec-array.prototype.keys
	// `Array.prototype.values` method
	// https://tc39.es/ecma262/#sec-array.prototype.values
	// `Array.prototype[@@iterator]` method
	// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
	// `CreateArrayIterator` internal method
	// https://tc39.es/ecma262/#sec-createarrayiterator
	var es_array_iterator = defineIterator(Array, 'Array', function (iterated, kind) {
	  setInternalState$4(this, {
	    type: ARRAY_ITERATOR,
	    target: toIndexedObject(iterated), // target
	    index: 0,                          // next index
	    kind: kind                         // kind
	  });
	// `%ArrayIteratorPrototype%.next` method
	// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
	}, function () {
	  var state = getInternalState$4(this);
	  var target = state.target;
	  var kind = state.kind;
	  var index = state.index++;
	  if (!target || index >= target.length) {
	    state.target = undefined;
	    return { value: undefined, done: true };
	  }
	  if (kind == 'keys') return { value: index, done: false };
	  if (kind == 'values') return { value: target[index], done: false };
	  return { value: [index, target[index]], done: false };
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values%
	// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
	// https://tc39.es/ecma262/#sec-createmappedargumentsobject
	var values = iterators.Arguments = iterators.Array;

	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

	// V8 ~ Chrome 45- bug
	if (descriptors && values.name !== 'values') try {
	  defineProperty$6(values, 'name', { value: 'values' });
	} catch (error) { /* empty */ }

	var charAt$7 = functionUncurryThis(''.charAt);
	var charCodeAt$2 = functionUncurryThis(''.charCodeAt);
	var stringSlice$7 = functionUncurryThis(''.slice);

	var createMethod$3 = function (CONVERT_TO_STRING) {
	  return function ($this, pos) {
	    var S = toString_1(requireObjectCoercible($this));
	    var position = toIntegerOrInfinity(pos);
	    var size = S.length;
	    var first, second;
	    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
	    first = charCodeAt$2(S, position);
	    return first < 0xD800 || first > 0xDBFF || position + 1 === size
	      || (second = charCodeAt$2(S, position + 1)) < 0xDC00 || second > 0xDFFF
	        ? CONVERT_TO_STRING
	          ? charAt$7(S, position)
	          : first
	        : CONVERT_TO_STRING
	          ? stringSlice$7(S, position, position + 2)
	          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
	  };
	};

	var stringMultibyte = {
	  // `String.prototype.codePointAt` method
	  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
	  codeAt: createMethod$3(false),
	  // `String.prototype.at` method
	  // https://github.com/mathiasbynens/String.prototype.at
	  charAt: createMethod$3(true)
	};

	var charAt$6 = stringMultibyte.charAt;




	var STRING_ITERATOR = 'String Iterator';
	var setInternalState$3 = internalState.set;
	var getInternalState$3 = internalState.getterFor(STRING_ITERATOR);

	// `String.prototype[@@iterator]` method
	// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
	defineIterator(String, 'String', function (iterated) {
	  setInternalState$3(this, {
	    type: STRING_ITERATOR,
	    string: toString_1(iterated),
	    index: 0
	  });
	// `%StringIteratorPrototype%.next` method
	// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
	}, function next() {
	  var state = getInternalState$3(this);
	  var string = state.string;
	  var index = state.index;
	  var point;
	  if (index >= string.length) return { value: undefined, done: true };
	  point = charAt$6(string, index);
	  state.index += point.length;
	  return { value: point, done: false };
	});

	// iterable DOM collections
	// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
	var domIterables = {
	  CSSRuleList: 0,
	  CSSStyleDeclaration: 0,
	  CSSValueList: 0,
	  ClientRectList: 0,
	  DOMRectList: 0,
	  DOMStringList: 0,
	  DOMTokenList: 1,
	  DataTransferItemList: 0,
	  FileList: 0,
	  HTMLAllCollection: 0,
	  HTMLCollection: 0,
	  HTMLFormElement: 0,
	  HTMLSelectElement: 0,
	  MediaList: 0,
	  MimeTypeArray: 0,
	  NamedNodeMap: 0,
	  NodeList: 1,
	  PaintRequestList: 0,
	  Plugin: 0,
	  PluginArray: 0,
	  SVGLengthList: 0,
	  SVGNumberList: 0,
	  SVGPathSegList: 0,
	  SVGPointList: 0,
	  SVGStringList: 0,
	  SVGTransformList: 0,
	  SourceBufferList: 0,
	  StyleSheetList: 0,
	  TextTrackCueList: 0,
	  TextTrackList: 0,
	  TouchList: 0
	};

	// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`


	var classList = documentCreateElement('span').classList;
	var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

	var domTokenListPrototype = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;

	var ITERATOR$5 = wellKnownSymbol('iterator');
	var TO_STRING_TAG = wellKnownSymbol('toStringTag');
	var ArrayValues = es_array_iterator.values;

	var handlePrototype$1 = function (CollectionPrototype, COLLECTION_NAME) {
	  if (CollectionPrototype) {
	    // some Chrome versions have non-configurable methods on DOMTokenList
	    if (CollectionPrototype[ITERATOR$5] !== ArrayValues) try {
	      createNonEnumerableProperty(CollectionPrototype, ITERATOR$5, ArrayValues);
	    } catch (error) {
	      CollectionPrototype[ITERATOR$5] = ArrayValues;
	    }
	    if (!CollectionPrototype[TO_STRING_TAG]) {
	      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
	    }
	    if (domIterables[COLLECTION_NAME]) for (var METHOD_NAME in es_array_iterator) {
	      // some Chrome versions have non-configurable methods on DOMTokenList
	      if (CollectionPrototype[METHOD_NAME] !== es_array_iterator[METHOD_NAME]) try {
	        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, es_array_iterator[METHOD_NAME]);
	      } catch (error) {
	        CollectionPrototype[METHOD_NAME] = es_array_iterator[METHOD_NAME];
	      }
	    }
	  }
	};

	for (var COLLECTION_NAME$1 in domIterables) {
	  handlePrototype$1(global_1[COLLECTION_NAME$1] && global_1[COLLECTION_NAME$1].prototype, COLLECTION_NAME$1);
	}

	handlePrototype$1(domTokenListPrototype, 'DOMTokenList');

	function _typeof(obj) {
	  "@babel/helpers - typeof";

	  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
	    return typeof obj;
	  } : function (obj) {
	    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	  }, _typeof(obj);
	}

	// `RegExp.prototype.flags` getter implementation
	// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
	var regexpFlags = function () {
	  var that = anObject(this);
	  var result = '';
	  if (that.global) result += 'g';
	  if (that.ignoreCase) result += 'i';
	  if (that.multiline) result += 'm';
	  if (that.dotAll) result += 's';
	  if (that.unicode) result += 'u';
	  if (that.sticky) result += 'y';
	  return result;
	};

	// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
	var $RegExp$2 = global_1.RegExp;

	var UNSUPPORTED_Y$3 = fails(function () {
	  var re = $RegExp$2('a', 'y');
	  re.lastIndex = 2;
	  return re.exec('abcd') != null;
	});

	// UC Browser bug
	// https://github.com/zloirock/core-js/issues/1008
	var MISSED_STICKY$2 = UNSUPPORTED_Y$3 || fails(function () {
	  return !$RegExp$2('a', 'y').sticky;
	});

	var BROKEN_CARET = UNSUPPORTED_Y$3 || fails(function () {
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
	  var re = $RegExp$2('^r', 'gy');
	  re.lastIndex = 2;
	  return re.exec('str') != null;
	});

	var regexpStickyHelpers = {
	  BROKEN_CARET: BROKEN_CARET,
	  MISSED_STICKY: MISSED_STICKY$2,
	  UNSUPPORTED_Y: UNSUPPORTED_Y$3
	};

	// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
	var $RegExp$1 = global_1.RegExp;

	var regexpUnsupportedDotAll = fails(function () {
	  var re = $RegExp$1('.', 's');
	  return !(re.dotAll && re.exec('\n') && re.flags === 's');
	});

	// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
	var $RegExp = global_1.RegExp;

	var regexpUnsupportedNcg = fails(function () {
	  var re = $RegExp('(?<a>b)', 'g');
	  return re.exec('b').groups.a !== 'b' ||
	    'b'.replace(re, '$<a>c') !== 'bc';
	});

	/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
	/* eslint-disable regexp/no-useless-quantifier -- testing */







	var getInternalState$2 = internalState.get;



	var nativeReplace = shared('native-string-replace', String.prototype.replace);
	var nativeExec = RegExp.prototype.exec;
	var patchedExec = nativeExec;
	var charAt$5 = functionUncurryThis(''.charAt);
	var indexOf$1 = functionUncurryThis(''.indexOf);
	var replace$4 = functionUncurryThis(''.replace);
	var stringSlice$6 = functionUncurryThis(''.slice);

	var UPDATES_LAST_INDEX_WRONG = (function () {
	  var re1 = /a/;
	  var re2 = /b*/g;
	  functionCall(nativeExec, re1, 'a');
	  functionCall(nativeExec, re2, 'a');
	  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
	})();

	var UNSUPPORTED_Y$2 = regexpStickyHelpers.BROKEN_CARET;

	// nonparticipating capturing group, copied from es5-shim's String#split patch.
	var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

	var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y$2 || regexpUnsupportedDotAll || regexpUnsupportedNcg;

	if (PATCH) {
	  patchedExec = function exec(string) {
	    var re = this;
	    var state = getInternalState$2(re);
	    var str = toString_1(string);
	    var raw = state.raw;
	    var result, reCopy, lastIndex, match, i, object, group;

	    if (raw) {
	      raw.lastIndex = re.lastIndex;
	      result = functionCall(patchedExec, raw, str);
	      re.lastIndex = raw.lastIndex;
	      return result;
	    }

	    var groups = state.groups;
	    var sticky = UNSUPPORTED_Y$2 && re.sticky;
	    var flags = functionCall(regexpFlags, re);
	    var source = re.source;
	    var charsAdded = 0;
	    var strCopy = str;

	    if (sticky) {
	      flags = replace$4(flags, 'y', '');
	      if (indexOf$1(flags, 'g') === -1) {
	        flags += 'g';
	      }

	      strCopy = stringSlice$6(str, re.lastIndex);
	      // Support anchored sticky behavior.
	      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt$5(str, re.lastIndex - 1) !== '\n')) {
	        source = '(?: ' + source + ')';
	        strCopy = ' ' + strCopy;
	        charsAdded++;
	      }
	      // ^(? + rx + ) is needed, in combination with some str slicing, to
	      // simulate the 'y' flag.
	      reCopy = new RegExp('^(?:' + source + ')', flags);
	    }

	    if (NPCG_INCLUDED) {
	      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
	    }
	    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

	    match = functionCall(nativeExec, sticky ? reCopy : re, strCopy);

	    if (sticky) {
	      if (match) {
	        match.input = stringSlice$6(match.input, charsAdded);
	        match[0] = stringSlice$6(match[0], charsAdded);
	        match.index = re.lastIndex;
	        re.lastIndex += match[0].length;
	      } else re.lastIndex = 0;
	    } else if (UPDATES_LAST_INDEX_WRONG && match) {
	      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
	    }
	    if (NPCG_INCLUDED && match && match.length > 1) {
	      // Fix browsers whose `exec` methods don't consistently return `undefined`
	      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
	      functionCall(nativeReplace, match[0], reCopy, function () {
	        for (i = 1; i < arguments.length - 2; i++) {
	          if (arguments[i] === undefined) match[i] = undefined;
	        }
	      });
	    }

	    if (match && groups) {
	      match.groups = object = objectCreate(null);
	      for (i = 0; i < groups.length; i++) {
	        group = groups[i];
	        object[group[0]] = match[group[1]];
	      }
	    }

	    return match;
	  };
	}

	var regexpExec = patchedExec;

	// `RegExp.prototype.exec` method
	// https://tc39.es/ecma262/#sec-regexp.prototype.exec
	_export({ target: 'RegExp', proto: true, forced: /./.exec !== regexpExec }, {
	  exec: regexpExec
	});

	// TODO: Remove from `core-js@4` since it's moved to entry points








	var SPECIES$5 = wellKnownSymbol('species');
	var RegExpPrototype$3 = RegExp.prototype;

	var fixRegexpWellKnownSymbolLogic = function (KEY, exec, FORCED, SHAM) {
	  var SYMBOL = wellKnownSymbol(KEY);

	  var DELEGATES_TO_SYMBOL = !fails(function () {
	    // String methods call symbol-named RegEp methods
	    var O = {};
	    O[SYMBOL] = function () { return 7; };
	    return ''[KEY](O) != 7;
	  });

	  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
	    // Symbol-named RegExp methods call .exec
	    var execCalled = false;
	    var re = /a/;

	    if (KEY === 'split') {
	      // We can't use real regex here since it causes deoptimization
	      // and serious performance degradation in V8
	      // https://github.com/zloirock/core-js/issues/306
	      re = {};
	      // RegExp[@@split] doesn't call the regex's exec method, but first creates
	      // a new one. We need to return the patched regex when creating the new one.
	      re.constructor = {};
	      re.constructor[SPECIES$5] = function () { return re; };
	      re.flags = '';
	      re[SYMBOL] = /./[SYMBOL];
	    }

	    re.exec = function () { execCalled = true; return null; };

	    re[SYMBOL]('');
	    return !execCalled;
	  });

	  if (
	    !DELEGATES_TO_SYMBOL ||
	    !DELEGATES_TO_EXEC ||
	    FORCED
	  ) {
	    var uncurriedNativeRegExpMethod = functionUncurryThis(/./[SYMBOL]);
	    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
	      var uncurriedNativeMethod = functionUncurryThis(nativeMethod);
	      var $exec = regexp.exec;
	      if ($exec === regexpExec || $exec === RegExpPrototype$3.exec) {
	        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
	          // The native String method already delegates to @@method (this
	          // polyfilled function), leasing to infinite recursion.
	          // We avoid it by directly calling the native @@method method.
	          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
	        }
	        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
	      }
	      return { done: false };
	    });

	    redefine(String.prototype, KEY, methods[0]);
	    redefine(RegExpPrototype$3, SYMBOL, methods[1]);
	  }

	  if (SHAM) createNonEnumerableProperty(RegExpPrototype$3[SYMBOL], 'sham', true);
	};

	var charAt$4 = stringMultibyte.charAt;

	// `AdvanceStringIndex` abstract operation
	// https://tc39.es/ecma262/#sec-advancestringindex
	var advanceStringIndex = function (S, index, unicode) {
	  return index + (unicode ? charAt$4(S, index).length : 1);
	};

	var floor$1 = Math.floor;
	var charAt$3 = functionUncurryThis(''.charAt);
	var replace$3 = functionUncurryThis(''.replace);
	var stringSlice$5 = functionUncurryThis(''.slice);
	var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
	var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

	// `GetSubstitution` abstract operation
	// https://tc39.es/ecma262/#sec-getsubstitution
	var getSubstitution = function (matched, str, position, captures, namedCaptures, replacement) {
	  var tailPos = position + matched.length;
	  var m = captures.length;
	  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
	  if (namedCaptures !== undefined) {
	    namedCaptures = toObject(namedCaptures);
	    symbols = SUBSTITUTION_SYMBOLS;
	  }
	  return replace$3(replacement, symbols, function (match, ch) {
	    var capture;
	    switch (charAt$3(ch, 0)) {
	      case '$': return '$';
	      case '&': return matched;
	      case '`': return stringSlice$5(str, 0, position);
	      case "'": return stringSlice$5(str, tailPos);
	      case '<':
	        capture = namedCaptures[stringSlice$5(ch, 1, -1)];
	        break;
	      default: // \d\d?
	        var n = +ch;
	        if (n === 0) return match;
	        if (n > m) {
	          var f = floor$1(n / 10);
	          if (f === 0) return match;
	          if (f <= m) return captures[f - 1] === undefined ? charAt$3(ch, 1) : captures[f - 1] + charAt$3(ch, 1);
	          return match;
	        }
	        capture = captures[n - 1];
	    }
	    return capture === undefined ? '' : capture;
	  });
	};

	var TypeError$e = global_1.TypeError;

	// `RegExpExec` abstract operation
	// https://tc39.es/ecma262/#sec-regexpexec
	var regexpExecAbstract = function (R, S) {
	  var exec = R.exec;
	  if (isCallable(exec)) {
	    var result = functionCall(exec, R, S);
	    if (result !== null) anObject(result);
	    return result;
	  }
	  if (classofRaw(R) === 'RegExp') return functionCall(regexpExec, R, S);
	  throw TypeError$e('RegExp#exec called on incompatible receiver');
	};

	var REPLACE = wellKnownSymbol('replace');
	var max$2 = Math.max;
	var min$5 = Math.min;
	var concat$2 = functionUncurryThis([].concat);
	var push$3 = functionUncurryThis([].push);
	var stringIndexOf$2 = functionUncurryThis(''.indexOf);
	var stringSlice$4 = functionUncurryThis(''.slice);

	var maybeToString = function (it) {
	  return it === undefined ? it : String(it);
	};

	// IE <= 11 replaces $0 with the whole match, as if it was $&
	// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
	var REPLACE_KEEPS_$0 = (function () {
	  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
	  return 'a'.replace(/./, '$0') === '$0';
	})();

	// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
	var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
	  if (/./[REPLACE]) {
	    return /./[REPLACE]('a', '$0') === '';
	  }
	  return false;
	})();

	var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
	  var re = /./;
	  re.exec = function () {
	    var result = [];
	    result.groups = { a: '7' };
	    return result;
	  };
	  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
	  return ''.replace(re, '$<a>') !== '7';
	});

	// @@replace logic
	fixRegexpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
	  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

	  return [
	    // `String.prototype.replace` method
	    // https://tc39.es/ecma262/#sec-string.prototype.replace
	    function replace(searchValue, replaceValue) {
	      var O = requireObjectCoercible(this);
	      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);
	      return replacer
	        ? functionCall(replacer, searchValue, O, replaceValue)
	        : functionCall(nativeReplace, toString_1(O), searchValue, replaceValue);
	    },
	    // `RegExp.prototype[@@replace]` method
	    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
	    function (string, replaceValue) {
	      var rx = anObject(this);
	      var S = toString_1(string);

	      if (
	        typeof replaceValue == 'string' &&
	        stringIndexOf$2(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
	        stringIndexOf$2(replaceValue, '$<') === -1
	      ) {
	        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
	        if (res.done) return res.value;
	      }

	      var functionalReplace = isCallable(replaceValue);
	      if (!functionalReplace) replaceValue = toString_1(replaceValue);

	      var global = rx.global;
	      if (global) {
	        var fullUnicode = rx.unicode;
	        rx.lastIndex = 0;
	      }
	      var results = [];
	      while (true) {
	        var result = regexpExecAbstract(rx, S);
	        if (result === null) break;

	        push$3(results, result);
	        if (!global) break;

	        var matchStr = toString_1(result[0]);
	        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
	      }

	      var accumulatedResult = '';
	      var nextSourcePosition = 0;
	      for (var i = 0; i < results.length; i++) {
	        result = results[i];

	        var matched = toString_1(result[0]);
	        var position = max$2(min$5(toIntegerOrInfinity(result.index), S.length), 0);
	        var captures = [];
	        // NOTE: This is equivalent to
	        //   captures = result.slice(1).map(maybeToString)
	        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
	        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
	        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
	        for (var j = 1; j < result.length; j++) push$3(captures, maybeToString(result[j]));
	        var namedCaptures = result.groups;
	        if (functionalReplace) {
	          var replacerArgs = concat$2([matched], captures, position, S);
	          if (namedCaptures !== undefined) push$3(replacerArgs, namedCaptures);
	          var replacement = toString_1(functionApply(replaceValue, undefined, replacerArgs));
	        } else {
	          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
	        }
	        if (position >= nextSourcePosition) {
	          accumulatedResult += stringSlice$4(S, nextSourcePosition, position) + replacement;
	          nextSourcePosition = position + matched.length;
	        }
	      }
	      return accumulatedResult + stringSlice$4(S, nextSourcePosition);
	    }
	  ];
	}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);

	// makes subclassing work correct for wrapped built-ins
	var inheritIfRequired = function ($this, dummy, Wrapper) {
	  var NewTarget, NewTargetPrototype;
	  if (
	    // it can work only with native `setPrototypeOf`
	    objectSetPrototypeOf &&
	    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
	    isCallable(NewTarget = dummy.constructor) &&
	    NewTarget !== Wrapper &&
	    isObject$1(NewTargetPrototype = NewTarget.prototype) &&
	    NewTargetPrototype !== Wrapper.prototype
	  ) objectSetPrototypeOf($this, NewTargetPrototype);
	  return $this;
	};

	var MATCH$2 = wellKnownSymbol('match');

	// `IsRegExp` abstract operation
	// https://tc39.es/ecma262/#sec-isregexp
	var isRegexp = function (it) {
	  var isRegExp;
	  return isObject$1(it) && ((isRegExp = it[MATCH$2]) !== undefined ? !!isRegExp : classofRaw(it) == 'RegExp');
	};

	var SPECIES$4 = wellKnownSymbol('species');

	var setSpecies = function (CONSTRUCTOR_NAME) {
	  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
	  var defineProperty = objectDefineProperty.f;

	  if (descriptors && Constructor && !Constructor[SPECIES$4]) {
	    defineProperty(Constructor, SPECIES$4, {
	      configurable: true,
	      get: function () { return this; }
	    });
	  }
	};

	var defineProperty$5 = objectDefineProperty.f;
	var getOwnPropertyNames$2 = objectGetOwnPropertyNames.f;








	var enforceInternalState$1 = internalState.enforce;





	var MATCH$1 = wellKnownSymbol('match');
	var NativeRegExp = global_1.RegExp;
	var RegExpPrototype$2 = NativeRegExp.prototype;
	var SyntaxError = global_1.SyntaxError;
	var getFlags$1 = functionUncurryThis(regexpFlags);
	var exec$3 = functionUncurryThis(RegExpPrototype$2.exec);
	var charAt$2 = functionUncurryThis(''.charAt);
	var replace$2 = functionUncurryThis(''.replace);
	var stringIndexOf$1 = functionUncurryThis(''.indexOf);
	var stringSlice$3 = functionUncurryThis(''.slice);
	// TODO: Use only propper RegExpIdentifierName
	var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
	var re1 = /a/g;
	var re2 = /a/g;

	// "new" should create a new object, old webkit bug
	var CORRECT_NEW = new NativeRegExp(re1) !== re1;

	var MISSED_STICKY$1 = regexpStickyHelpers.MISSED_STICKY;
	var UNSUPPORTED_Y$1 = regexpStickyHelpers.UNSUPPORTED_Y;

	var BASE_FORCED = descriptors &&
	  (!CORRECT_NEW || MISSED_STICKY$1 || regexpUnsupportedDotAll || regexpUnsupportedNcg || fails(function () {
	    re2[MATCH$1] = false;
	    // RegExp constructor can alter flags and IsRegExp works correct with @@match
	    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
	  }));

	var handleDotAll = function (string) {
	  var length = string.length;
	  var index = 0;
	  var result = '';
	  var brackets = false;
	  var chr;
	  for (; index <= length; index++) {
	    chr = charAt$2(string, index);
	    if (chr === '\\') {
	      result += chr + charAt$2(string, ++index);
	      continue;
	    }
	    if (!brackets && chr === '.') {
	      result += '[\\s\\S]';
	    } else {
	      if (chr === '[') {
	        brackets = true;
	      } else if (chr === ']') {
	        brackets = false;
	      } result += chr;
	    }
	  } return result;
	};

	var handleNCG = function (string) {
	  var length = string.length;
	  var index = 0;
	  var result = '';
	  var named = [];
	  var names = {};
	  var brackets = false;
	  var ncg = false;
	  var groupid = 0;
	  var groupname = '';
	  var chr;
	  for (; index <= length; index++) {
	    chr = charAt$2(string, index);
	    if (chr === '\\') {
	      chr = chr + charAt$2(string, ++index);
	    } else if (chr === ']') {
	      brackets = false;
	    } else if (!brackets) switch (true) {
	      case chr === '[':
	        brackets = true;
	        break;
	      case chr === '(':
	        if (exec$3(IS_NCG, stringSlice$3(string, index + 1))) {
	          index += 2;
	          ncg = true;
	        }
	        result += chr;
	        groupid++;
	        continue;
	      case chr === '>' && ncg:
	        if (groupname === '' || hasOwnProperty_1(names, groupname)) {
	          throw new SyntaxError('Invalid capture group name');
	        }
	        names[groupname] = true;
	        named[named.length] = [groupname, groupid];
	        ncg = false;
	        groupname = '';
	        continue;
	    }
	    if (ncg) groupname += chr;
	    else result += chr;
	  } return [result, named];
	};

	// `RegExp` constructor
	// https://tc39.es/ecma262/#sec-regexp-constructor
	if (isForced_1('RegExp', BASE_FORCED)) {
	  var RegExpWrapper = function RegExp(pattern, flags) {
	    var thisIsRegExp = objectIsPrototypeOf(RegExpPrototype$2, this);
	    var patternIsRegExp = isRegexp(pattern);
	    var flagsAreUndefined = flags === undefined;
	    var groups = [];
	    var rawPattern = pattern;
	    var rawFlags, dotAll, sticky, handled, result, state;

	    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
	      return pattern;
	    }

	    if (patternIsRegExp || objectIsPrototypeOf(RegExpPrototype$2, pattern)) {
	      pattern = pattern.source;
	      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags$1(rawPattern);
	    }

	    pattern = pattern === undefined ? '' : toString_1(pattern);
	    flags = flags === undefined ? '' : toString_1(flags);
	    rawPattern = pattern;

	    if (regexpUnsupportedDotAll && 'dotAll' in re1) {
	      dotAll = !!flags && stringIndexOf$1(flags, 's') > -1;
	      if (dotAll) flags = replace$2(flags, /s/g, '');
	    }

	    rawFlags = flags;

	    if (MISSED_STICKY$1 && 'sticky' in re1) {
	      sticky = !!flags && stringIndexOf$1(flags, 'y') > -1;
	      if (sticky && UNSUPPORTED_Y$1) flags = replace$2(flags, /y/g, '');
	    }

	    if (regexpUnsupportedNcg) {
	      handled = handleNCG(pattern);
	      pattern = handled[0];
	      groups = handled[1];
	    }

	    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype$2, RegExpWrapper);

	    if (dotAll || sticky || groups.length) {
	      state = enforceInternalState$1(result);
	      if (dotAll) {
	        state.dotAll = true;
	        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
	      }
	      if (sticky) state.sticky = true;
	      if (groups.length) state.groups = groups;
	    }

	    if (pattern !== rawPattern) try {
	      // fails in old engines, but we have no alternatives for unsupported regex syntax
	      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
	    } catch (error) { /* empty */ }

	    return result;
	  };

	  var proxy = function (key) {
	    key in RegExpWrapper || defineProperty$5(RegExpWrapper, key, {
	      configurable: true,
	      get: function () { return NativeRegExp[key]; },
	      set: function (it) { NativeRegExp[key] = it; }
	    });
	  };

	  for (var keys$1 = getOwnPropertyNames$2(NativeRegExp), index = 0; keys$1.length > index;) {
	    proxy(keys$1[index++]);
	  }

	  RegExpPrototype$2.constructor = RegExpWrapper;
	  RegExpWrapper.prototype = RegExpPrototype$2;
	  redefine(global_1, 'RegExp', RegExpWrapper);
	}

	// https://tc39.es/ecma262/#sec-get-regexp-@@species
	setSpecies('RegExp');

	var MISSED_STICKY = regexpStickyHelpers.MISSED_STICKY;

	var defineProperty$4 = objectDefineProperty.f;
	var getInternalState$1 = internalState.get;

	var RegExpPrototype$1 = RegExp.prototype;
	var TypeError$d = global_1.TypeError;

	// `RegExp.prototype.sticky` getter
	// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
	if (descriptors && MISSED_STICKY) {
	  defineProperty$4(RegExpPrototype$1, 'sticky', {
	    configurable: true,
	    get: function () {
	      if (this === RegExpPrototype$1) return undefined;
	      // We can't use InternalStateModule.getterFor because
	      // we don't add metadata for regexps created by a literal.
	      if (classofRaw(this) === 'RegExp') {
	        return !!getInternalState$1(this).sticky;
	      }
	      throw TypeError$d('Incompatible receiver, RegExp required');
	    }
	  });
	}

	var PROPER_FUNCTION_NAME$1 = functionName.PROPER;







	var TO_STRING = 'toString';
	var RegExpPrototype = RegExp.prototype;
	var n$ToString = RegExpPrototype[TO_STRING];
	var getFlags = functionUncurryThis(regexpFlags);

	var NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
	// FF44- RegExp#toString has a wrong name
	var INCORRECT_NAME = PROPER_FUNCTION_NAME$1 && n$ToString.name != TO_STRING;

	// `RegExp.prototype.toString` method
	// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
	if (NOT_GENERIC || INCORRECT_NAME) {
	  redefine(RegExp.prototype, TO_STRING, function toString() {
	    var R = anObject(this);
	    var p = toString_1(R.source);
	    var rf = R.flags;
	    var f = toString_1(rf === undefined && objectIsPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);
	    return '/' + p + '/' + f;
	  }, { unsafe: true });
	}

	var SPECIES$3 = wellKnownSymbol('species');

	var arrayMethodHasSpeciesSupport = function (METHOD_NAME) {
	  // We can't use this feature detection in V8 since it causes
	  // deoptimization and serious performance degradation
	  // https://github.com/zloirock/core-js/issues/677
	  return engineV8Version >= 51 || !fails(function () {
	    var array = [];
	    var constructor = array.constructor = {};
	    constructor[SPECIES$3] = function () {
	      return { foo: 1 };
	    };
	    return array[METHOD_NAME](Boolean).foo !== 1;
	  });
	};

	var $map = arrayIteration.map;


	var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport('map');

	// `Array.prototype.map` method
	// https://tc39.es/ecma262/#sec-array.prototype.map
	// with adding support of @@species
	_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$3 }, {
	  map: function map(callbackfn /* , thisArg */) {
	    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	var iteratorClose = function (iterator, kind, value) {
	  var innerResult, innerError;
	  anObject(iterator);
	  try {
	    innerResult = getMethod(iterator, 'return');
	    if (!innerResult) {
	      if (kind === 'throw') throw value;
	      return value;
	    }
	    innerResult = functionCall(innerResult, iterator);
	  } catch (error) {
	    innerError = true;
	    innerResult = error;
	  }
	  if (kind === 'throw') throw value;
	  if (innerError) throw innerResult;
	  anObject(innerResult);
	  return value;
	};

	// call something on iterator step with safe closing on error
	var callWithSafeIterationClosing = function (iterator, fn, value, ENTRIES) {
	  try {
	    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
	  } catch (error) {
	    iteratorClose(iterator, 'throw', error);
	  }
	};

	var ITERATOR$4 = wellKnownSymbol('iterator');
	var ArrayPrototype = Array.prototype;

	// check on default Array iterator
	var isArrayIteratorMethod = function (it) {
	  return it !== undefined && (iterators.Array === it || ArrayPrototype[ITERATOR$4] === it);
	};

	var ITERATOR$3 = wellKnownSymbol('iterator');

	var getIteratorMethod = function (it) {
	  if (it != undefined) return getMethod(it, ITERATOR$3)
	    || getMethod(it, '@@iterator')
	    || iterators[classof(it)];
	};

	var TypeError$c = global_1.TypeError;

	var getIterator = function (argument, usingIterator) {
	  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
	  if (aCallable(iteratorMethod)) return anObject(functionCall(iteratorMethod, argument));
	  throw TypeError$c(tryToString(argument) + ' is not iterable');
	};

	var Array$3 = global_1.Array;

	// `Array.from` method implementation
	// https://tc39.es/ecma262/#sec-array.from
	var arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
	  var O = toObject(arrayLike);
	  var IS_CONSTRUCTOR = isConstructor(this);
	  var argumentsLength = arguments.length;
	  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
	  var mapping = mapfn !== undefined;
	  if (mapping) mapfn = functionBindContext(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
	  var iteratorMethod = getIteratorMethod(O);
	  var index = 0;
	  var length, result, step, iterator, next, value;
	  // if the target is not iterable or it's an array with the default iterator - use a simple case
	  if (iteratorMethod && !(this == Array$3 && isArrayIteratorMethod(iteratorMethod))) {
	    iterator = getIterator(O, iteratorMethod);
	    next = iterator.next;
	    result = IS_CONSTRUCTOR ? new this() : [];
	    for (;!(step = functionCall(next, iterator)).done; index++) {
	      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
	      createProperty(result, index, value);
	    }
	  } else {
	    length = lengthOfArrayLike(O);
	    result = IS_CONSTRUCTOR ? new this(length) : Array$3(length);
	    for (;length > index; index++) {
	      value = mapping ? mapfn(O[index], index) : O[index];
	      createProperty(result, index, value);
	    }
	  }
	  result.length = index;
	  return result;
	};

	var ITERATOR$2 = wellKnownSymbol('iterator');
	var SAFE_CLOSING = false;

	try {
	  var called = 0;
	  var iteratorWithReturn = {
	    next: function () {
	      return { done: !!called++ };
	    },
	    'return': function () {
	      SAFE_CLOSING = true;
	    }
	  };
	  iteratorWithReturn[ITERATOR$2] = function () {
	    return this;
	  };
	  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
	  Array.from(iteratorWithReturn, function () { throw 2; });
	} catch (error) { /* empty */ }

	var checkCorrectnessOfIteration = function (exec, SKIP_CLOSING) {
	  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
	  var ITERATION_SUPPORT = false;
	  try {
	    var object = {};
	    object[ITERATOR$2] = function () {
	      return {
	        next: function () {
	          return { done: ITERATION_SUPPORT = true };
	        }
	      };
	    };
	    exec(object);
	  } catch (error) { /* empty */ }
	  return ITERATION_SUPPORT;
	};

	var INCORRECT_ITERATION$1 = !checkCorrectnessOfIteration(function (iterable) {
	  // eslint-disable-next-line es/no-array-from -- required for testing
	  Array.from(iterable);
	});

	// `Array.from` method
	// https://tc39.es/ecma262/#sec-array.from
	_export({ target: 'Array', stat: true, forced: INCORRECT_ITERATION$1 }, {
	  from: arrayFrom
	});

	// eslint-disable-next-line es/no-object-assign -- safe
	var $assign = Object.assign;
	// eslint-disable-next-line es/no-object-defineproperty -- required for testing
	var defineProperty$3 = Object.defineProperty;
	var concat$1 = functionUncurryThis([].concat);

	// `Object.assign` method
	// https://tc39.es/ecma262/#sec-object.assign
	var objectAssign = !$assign || fails(function () {
	  // should have correct order of operations (Edge bug)
	  if (descriptors && $assign({ b: 1 }, $assign(defineProperty$3({}, 'a', {
	    enumerable: true,
	    get: function () {
	      defineProperty$3(this, 'b', {
	        value: 3,
	        enumerable: false
	      });
	    }
	  }), { b: 2 })).b !== 1) return true;
	  // should work with symbols and should have deterministic property order (V8 bug)
	  var A = {};
	  var B = {};
	  // eslint-disable-next-line es/no-symbol -- safe
	  var symbol = Symbol();
	  var alphabet = 'abcdefghijklmnopqrst';
	  A[symbol] = 7;
	  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
	  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
	}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
	  var T = toObject(target);
	  var argumentsLength = arguments.length;
	  var index = 1;
	  var getOwnPropertySymbols = objectGetOwnPropertySymbols.f;
	  var propertyIsEnumerable = objectPropertyIsEnumerable.f;
	  while (argumentsLength > index) {
	    var S = indexedObject(arguments[index++]);
	    var keys = getOwnPropertySymbols ? concat$1(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
	    var length = keys.length;
	    var j = 0;
	    var key;
	    while (length > j) {
	      key = keys[j++];
	      if (!descriptors || functionCall(propertyIsEnumerable, S, key)) T[key] = S[key];
	    }
	  } return T;
	} : $assign;

	// `Object.assign` method
	// https://tc39.es/ecma262/#sec-object.assign
	// eslint-disable-next-line es/no-object-assign -- required for testing
	_export({ target: 'Object', stat: true, forced: Object.assign !== objectAssign }, {
	  assign: objectAssign
	});

	var TypeError$b = global_1.TypeError;

	// `Assert: IsConstructor(argument) is true`
	var aConstructor = function (argument) {
	  if (isConstructor(argument)) return argument;
	  throw TypeError$b(tryToString(argument) + ' is not a constructor');
	};

	var SPECIES$2 = wellKnownSymbol('species');

	// `SpeciesConstructor` abstract operation
	// https://tc39.es/ecma262/#sec-speciesconstructor
	var speciesConstructor = function (O, defaultConstructor) {
	  var C = anObject(O).constructor;
	  var S;
	  return C === undefined || (S = anObject(C)[SPECIES$2]) == undefined ? defaultConstructor : aConstructor(S);
	};

	var UNSUPPORTED_Y = regexpStickyHelpers.UNSUPPORTED_Y;
	var MAX_UINT32 = 0xFFFFFFFF;
	var min$4 = Math.min;
	var $push = [].push;
	var exec$2 = functionUncurryThis(/./.exec);
	var push$2 = functionUncurryThis($push);
	var stringSlice$2 = functionUncurryThis(''.slice);

	// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
	// Weex JS has frozen built-in prototypes, so use try / catch wrapper
	var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
	  // eslint-disable-next-line regexp/no-empty-group -- required for testing
	  var re = /(?:)/;
	  var originalExec = re.exec;
	  re.exec = function () { return originalExec.apply(this, arguments); };
	  var result = 'ab'.split(re);
	  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
	});

	// @@split logic
	fixRegexpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
	  var internalSplit;
	  if (
	    'abbc'.split(/(b)*/)[1] == 'c' ||
	    // eslint-disable-next-line regexp/no-empty-group -- required for testing
	    'test'.split(/(?:)/, -1).length != 4 ||
	    'ab'.split(/(?:ab)*/).length != 2 ||
	    '.'.split(/(.?)(.?)/).length != 4 ||
	    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
	    '.'.split(/()()/).length > 1 ||
	    ''.split(/.?/).length
	  ) {
	    // based on es5-shim implementation, need to rework it
	    internalSplit = function (separator, limit) {
	      var string = toString_1(requireObjectCoercible(this));
	      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
	      if (lim === 0) return [];
	      if (separator === undefined) return [string];
	      // If `separator` is not a regex, use native split
	      if (!isRegexp(separator)) {
	        return functionCall(nativeSplit, string, separator, lim);
	      }
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var match, lastIndex, lastLength;
	      while (match = functionCall(regexpExec, separatorCopy, string)) {
	        lastIndex = separatorCopy.lastIndex;
	        if (lastIndex > lastLastIndex) {
	          push$2(output, stringSlice$2(string, lastLastIndex, match.index));
	          if (match.length > 1 && match.index < string.length) functionApply($push, output, arraySliceSimple(match, 1));
	          lastLength = match[0].length;
	          lastLastIndex = lastIndex;
	          if (output.length >= lim) break;
	        }
	        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
	      }
	      if (lastLastIndex === string.length) {
	        if (lastLength || !exec$2(separatorCopy, '')) push$2(output, '');
	      } else push$2(output, stringSlice$2(string, lastLastIndex));
	      return output.length > lim ? arraySliceSimple(output, 0, lim) : output;
	    };
	  // Chakra, V8
	  } else if ('0'.split(undefined, 0).length) {
	    internalSplit = function (separator, limit) {
	      return separator === undefined && limit === 0 ? [] : functionCall(nativeSplit, this, separator, limit);
	    };
	  } else internalSplit = nativeSplit;

	  return [
	    // `String.prototype.split` method
	    // https://tc39.es/ecma262/#sec-string.prototype.split
	    function split(separator, limit) {
	      var O = requireObjectCoercible(this);
	      var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);
	      return splitter
	        ? functionCall(splitter, separator, O, limit)
	        : functionCall(internalSplit, toString_1(O), separator, limit);
	    },
	    // `RegExp.prototype[@@split]` method
	    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
	    //
	    // NOTE: This cannot be properly polyfilled in engines that don't support
	    // the 'y' flag.
	    function (string, limit) {
	      var rx = anObject(this);
	      var S = toString_1(string);
	      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);

	      if (res.done) return res.value;

	      var C = speciesConstructor(rx, RegExp);

	      var unicodeMatching = rx.unicode;
	      var flags = (rx.ignoreCase ? 'i' : '') +
	                  (rx.multiline ? 'm' : '') +
	                  (rx.unicode ? 'u' : '') +
	                  (UNSUPPORTED_Y ? 'g' : 'y');

	      // ^(? + rx + ) is needed, in combination with some S slicing, to
	      // simulate the 'y' flag.
	      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
	      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
	      if (lim === 0) return [];
	      if (S.length === 0) return regexpExecAbstract(splitter, S) === null ? [S] : [];
	      var p = 0;
	      var q = 0;
	      var A = [];
	      while (q < S.length) {
	        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
	        var z = regexpExecAbstract(splitter, UNSUPPORTED_Y ? stringSlice$2(S, q) : S);
	        var e;
	        if (
	          z === null ||
	          (e = min$4(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p
	        ) {
	          q = advanceStringIndex(S, q, unicodeMatching);
	        } else {
	          push$2(A, stringSlice$2(S, p, q));
	          if (A.length === lim) return A;
	          for (var i = 1; i <= z.length - 1; i++) {
	            push$2(A, z[i]);
	            if (A.length === lim) return A;
	          }
	          q = p = e;
	        }
	      }
	      push$2(A, stringSlice$2(S, p));
	      return A;
	    }
	  ];
	}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);

	var TypeError$a = global_1.TypeError;

	// `Array.prototype.{ reduce, reduceRight }` methods implementation
	var createMethod$2 = function (IS_RIGHT) {
	  return function (that, callbackfn, argumentsLength, memo) {
	    aCallable(callbackfn);
	    var O = toObject(that);
	    var self = indexedObject(O);
	    var length = lengthOfArrayLike(O);
	    var index = IS_RIGHT ? length - 1 : 0;
	    var i = IS_RIGHT ? -1 : 1;
	    if (argumentsLength < 2) while (true) {
	      if (index in self) {
	        memo = self[index];
	        index += i;
	        break;
	      }
	      index += i;
	      if (IS_RIGHT ? index < 0 : length <= index) {
	        throw TypeError$a('Reduce of empty array with no initial value');
	      }
	    }
	    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
	      memo = callbackfn(memo, self[index], index, O);
	    }
	    return memo;
	  };
	};

	var arrayReduce = {
	  // `Array.prototype.reduce` method
	  // https://tc39.es/ecma262/#sec-array.prototype.reduce
	  left: createMethod$2(false),
	  // `Array.prototype.reduceRight` method
	  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
	  right: createMethod$2(true)
	};

	var arrayMethodIsStrict = function (METHOD_NAME, argument) {
	  var method = [][METHOD_NAME];
	  return !!method && fails(function () {
	    // eslint-disable-next-line no-useless-call -- required for testing
	    method.call(null, argument || function () { return 1; }, 1);
	  });
	};

	var engineIsNode = classofRaw(global_1.process) == 'process';

	var $reduce = arrayReduce.left;




	var STRICT_METHOD$5 = arrayMethodIsStrict('reduce');
	// Chrome 80-82 has a critical bug
	// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
	var CHROME_BUG$1 = !engineIsNode && engineV8Version > 79 && engineV8Version < 83;

	// `Array.prototype.reduce` method
	// https://tc39.es/ecma262/#sec-array.prototype.reduce
	_export({ target: 'Array', proto: true, forced: !STRICT_METHOD$5 || CHROME_BUG$1 }, {
	  reduce: function reduce(callbackfn /* , initialValue */) {
	    var length = arguments.length;
	    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
	  }
	});

	// `thisNumberValue` abstract operation
	// https://tc39.es/ecma262/#sec-thisnumbervalue
	var thisNumberValue = functionUncurryThis(1.0.valueOf);

	// a string of all valid unicode whitespaces
	var whitespaces = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
	  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

	var replace$1 = functionUncurryThis(''.replace);
	var whitespace = '[' + whitespaces + ']';
	var ltrim = RegExp('^' + whitespace + whitespace + '*');
	var rtrim = RegExp(whitespace + whitespace + '*$');

	// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
	var createMethod$1 = function (TYPE) {
	  return function ($this) {
	    var string = toString_1(requireObjectCoercible($this));
	    if (TYPE & 1) string = replace$1(string, ltrim, '');
	    if (TYPE & 2) string = replace$1(string, rtrim, '');
	    return string;
	  };
	};

	var stringTrim = {
	  // `String.prototype.{ trimLeft, trimStart }` methods
	  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
	  start: createMethod$1(1),
	  // `String.prototype.{ trimRight, trimEnd }` methods
	  // https://tc39.es/ecma262/#sec-string.prototype.trimend
	  end: createMethod$1(2),
	  // `String.prototype.trim` method
	  // https://tc39.es/ecma262/#sec-string.prototype.trim
	  trim: createMethod$1(3)
	};

	var getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;
	var getOwnPropertyDescriptor$3 = objectGetOwnPropertyDescriptor.f;
	var defineProperty$2 = objectDefineProperty.f;

	var trim$2 = stringTrim.trim;

	var NUMBER = 'Number';
	var NativeNumber = global_1[NUMBER];
	var NumberPrototype = NativeNumber.prototype;
	var TypeError$9 = global_1.TypeError;
	var arraySlice = functionUncurryThis(''.slice);
	var charCodeAt$1 = functionUncurryThis(''.charCodeAt);

	// `ToNumeric` abstract operation
	// https://tc39.es/ecma262/#sec-tonumeric
	var toNumeric = function (value) {
	  var primValue = toPrimitive(value, 'number');
	  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
	};

	// `ToNumber` abstract operation
	// https://tc39.es/ecma262/#sec-tonumber
	var toNumber = function (argument) {
	  var it = toPrimitive(argument, 'number');
	  var first, third, radix, maxCode, digits, length, index, code;
	  if (isSymbol(it)) throw TypeError$9('Cannot convert a Symbol value to a number');
	  if (typeof it == 'string' && it.length > 2) {
	    it = trim$2(it);
	    first = charCodeAt$1(it, 0);
	    if (first === 43 || first === 45) {
	      third = charCodeAt$1(it, 2);
	      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if (first === 48) {
	      switch (charCodeAt$1(it, 1)) {
	        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
	        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
	        default: return +it;
	      }
	      digits = arraySlice(it, 2);
	      length = digits.length;
	      for (index = 0; index < length; index++) {
	        code = charCodeAt$1(digits, index);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if (code < 48 || code > maxCode) return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};

	// `Number` constructor
	// https://tc39.es/ecma262/#sec-number-constructor
	if (isForced_1(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
	  var NumberWrapper = function Number(value) {
	    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
	    var dummy = this;
	    // check on 1..constructor(foo) case
	    return objectIsPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })
	      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;
	  };
	  for (var keys = descriptors ? getOwnPropertyNames$1(NativeNumber) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES2015 (in case, if modules with ES2015 Number statics required before):
	    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
	    // ESNext
	    'fromString,range'
	  ).split(','), j$1 = 0, key; keys.length > j$1; j$1++) {
	    if (hasOwnProperty_1(NativeNumber, key = keys[j$1]) && !hasOwnProperty_1(NumberWrapper, key)) {
	      defineProperty$2(NumberWrapper, key, getOwnPropertyDescriptor$3(NativeNumber, key));
	    }
	  }
	  NumberWrapper.prototype = NumberPrototype;
	  NumberPrototype.constructor = NumberWrapper;
	  redefine(global_1, NUMBER, NumberWrapper);
	}

	var FAILS_ON_PRIMITIVES$6 = fails(function () { objectKeys(1); });

	// `Object.keys` method
	// https://tc39.es/ecma262/#sec-object.keys
	_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$6 }, {
	  keys: function keys(it) {
	    return objectKeys(toObject(it));
	  }
	});

	var $filter = arrayIteration.filter;


	var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport('filter');

	// `Array.prototype.filter` method
	// https://tc39.es/ecma262/#sec-array.prototype.filter
	// with adding support of @@species
	_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$2 }, {
	  filter: function filter(callbackfn /* , thisArg */) {
	    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;


	var FAILS_ON_PRIMITIVES$5 = fails(function () { nativeGetOwnPropertyDescriptor(1); });
	var FORCED$a = !descriptors || FAILS_ON_PRIMITIVES$5;

	// `Object.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
	_export({ target: 'Object', stat: true, forced: FORCED$a, sham: !descriptors }, {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
	    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
	  }
	});

	var $forEach = arrayIteration.forEach;


	var STRICT_METHOD$4 = arrayMethodIsStrict('forEach');

	// `Array.prototype.forEach` method implementation
	// https://tc39.es/ecma262/#sec-array.prototype.foreach
	var arrayForEach = !STRICT_METHOD$4 ? function forEach(callbackfn /* , thisArg */) {
	  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	// eslint-disable-next-line es/no-array-prototype-foreach -- safe
	} : [].forEach;

	var handlePrototype = function (CollectionPrototype) {
	  // some Chrome versions have non-configurable methods on DOMTokenList
	  if (CollectionPrototype && CollectionPrototype.forEach !== arrayForEach) try {
	    createNonEnumerableProperty(CollectionPrototype, 'forEach', arrayForEach);
	  } catch (error) {
	    CollectionPrototype.forEach = arrayForEach;
	  }
	};

	for (var COLLECTION_NAME in domIterables) {
	  if (domIterables[COLLECTION_NAME]) {
	    handlePrototype(global_1[COLLECTION_NAME] && global_1[COLLECTION_NAME].prototype);
	  }
	}

	handlePrototype(domTokenListPrototype);

	// `Object.getOwnPropertyDescriptors` method
	// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
	_export({ target: 'Object', stat: true, sham: !descriptors }, {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
	    var O = toIndexedObject(object);
	    var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;
	    var keys = ownKeys$8(O);
	    var result = {};
	    var index = 0;
	    var key, descriptor;
	    while (keys.length > index) {
	      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
	      if (descriptor !== undefined) createProperty(result, key, descriptor);
	    }
	    return result;
	  }
	});

	var defineProperties$1 = objectDefineProperties.f;

	// `Object.defineProperties` method
	// https://tc39.es/ecma262/#sec-object.defineproperties
	// eslint-disable-next-line es/no-object-defineproperties -- safe
	_export({ target: 'Object', stat: true, forced: Object.defineProperties !== defineProperties$1, sham: !descriptors }, {
	  defineProperties: defineProperties$1
	});

	var _typeof_1 = createCommonjsModule(function (module) {
	function _typeof(obj) {
	  "@babel/helpers - typeof";

	  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) {
	    return typeof obj;
	  } : function (obj) {
	    return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
	  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(obj);
	}

	module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;
	});

	unwrapExports(_typeof_1);

	var trim$1 = stringTrim.trim;


	var charAt$1 = functionUncurryThis(''.charAt);
	var n$ParseFloat = global_1.parseFloat;
	var Symbol$2 = global_1.Symbol;
	var ITERATOR$1 = Symbol$2 && Symbol$2.iterator;
	var FORCED$9 = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity
	  // MS Edge 18- broken with boxed symbols
	  || (ITERATOR$1 && !fails(function () { n$ParseFloat(Object(ITERATOR$1)); }));

	// `parseFloat` method
	// https://tc39.es/ecma262/#sec-parsefloat-string
	var numberParseFloat = FORCED$9 ? function parseFloat(string) {
	  var trimmedString = trim$1(toString_1(string));
	  var result = n$ParseFloat(trimmedString);
	  return result === 0 && charAt$1(trimmedString, 0) == '-' ? -0 : result;
	} : n$ParseFloat;

	// `parseFloat` method
	// https://tc39.es/ecma262/#sec-parsefloat-string
	_export({ global: true, forced: parseFloat != numberParseFloat }, {
	  parseFloat: numberParseFloat
	});

	var trim = stringTrim.trim;


	var $parseInt = global_1.parseInt;
	var Symbol$1 = global_1.Symbol;
	var ITERATOR = Symbol$1 && Symbol$1.iterator;
	var hex = /^[+-]?0x/i;
	var exec$1 = functionUncurryThis(hex.exec);
	var FORCED$8 = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22
	  // MS Edge 18- broken with boxed symbols
	  || (ITERATOR && !fails(function () { $parseInt(Object(ITERATOR)); }));

	// `parseInt` method
	// https://tc39.es/ecma262/#sec-parseint-string-radix
	var numberParseInt = FORCED$8 ? function parseInt(string, radix) {
	  var S = trim(toString_1(string));
	  return $parseInt(S, (radix >>> 0) || (exec$1(hex, S) ? 16 : 10));
	} : $parseInt;

	// `parseInt` method
	// https://tc39.es/ecma262/#sec-parseint-string-radix
	_export({ global: true, forced: parseInt != numberParseInt }, {
	  parseInt: numberParseInt
	});

	// @@match logic
	fixRegexpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
	  return [
	    // `String.prototype.match` method
	    // https://tc39.es/ecma262/#sec-string.prototype.match
	    function match(regexp) {
	      var O = requireObjectCoercible(this);
	      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);
	      return matcher ? functionCall(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString_1(O));
	    },
	    // `RegExp.prototype[@@match]` method
	    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
	    function (string) {
	      var rx = anObject(this);
	      var S = toString_1(string);
	      var res = maybeCallNative(nativeMatch, rx, S);

	      if (res.done) return res.value;

	      if (!rx.global) return regexpExecAbstract(rx, S);

	      var fullUnicode = rx.unicode;
	      rx.lastIndex = 0;
	      var A = [];
	      var n = 0;
	      var result;
	      while ((result = regexpExecAbstract(rx, S)) !== null) {
	        var matchStr = toString_1(result[0]);
	        A[n] = matchStr;
	        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
	        n++;
	      }
	      return n === 0 ? null : A;
	    }
	  ];
	});

	var floor = Math.floor;

	var mergeSort = function (array, comparefn) {
	  var length = array.length;
	  var middle = floor(length / 2);
	  return length < 8 ? insertionSort(array, comparefn) : merge(
	    array,
	    mergeSort(arraySliceSimple(array, 0, middle), comparefn),
	    mergeSort(arraySliceSimple(array, middle), comparefn),
	    comparefn
	  );
	};

	var insertionSort = function (array, comparefn) {
	  var length = array.length;
	  var i = 1;
	  var element, j;

	  while (i < length) {
	    j = i;
	    element = array[i];
	    while (j && comparefn(array[j - 1], element) > 0) {
	      array[j] = array[--j];
	    }
	    if (j !== i++) array[j] = element;
	  } return array;
	};

	var merge = function (array, left, right, comparefn) {
	  var llength = left.length;
	  var rlength = right.length;
	  var lindex = 0;
	  var rindex = 0;

	  while (lindex < llength || rindex < rlength) {
	    array[lindex + rindex] = (lindex < llength && rindex < rlength)
	      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
	      : lindex < llength ? left[lindex++] : right[rindex++];
	  } return array;
	};

	var arraySort = mergeSort;

	var firefox = engineUserAgent.match(/firefox\/(\d+)/i);

	var engineFfVersion = !!firefox && +firefox[1];

	var engineIsIeOrEdge = /MSIE|Trident/.test(engineUserAgent);

	var webkit = engineUserAgent.match(/AppleWebKit\/(\d+)\./);

	var engineWebkitVersion = !!webkit && +webkit[1];

	var test = [];
	var un$Sort = functionUncurryThis(test.sort);
	var push$1 = functionUncurryThis(test.push);

	// IE8-
	var FAILS_ON_UNDEFINED = fails(function () {
	  test.sort(undefined);
	});
	// V8 bug
	var FAILS_ON_NULL = fails(function () {
	  test.sort(null);
	});
	// Old WebKit
	var STRICT_METHOD$3 = arrayMethodIsStrict('sort');

	var STABLE_SORT = !fails(function () {
	  // feature detection can be too slow, so check engines versions
	  if (engineV8Version) return engineV8Version < 70;
	  if (engineFfVersion && engineFfVersion > 3) return;
	  if (engineIsIeOrEdge) return true;
	  if (engineWebkitVersion) return engineWebkitVersion < 603;

	  var result = '';
	  var code, chr, value, index;

	  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
	  for (code = 65; code < 76; code++) {
	    chr = String.fromCharCode(code);

	    switch (code) {
	      case 66: case 69: case 70: case 72: value = 3; break;
	      case 68: case 71: value = 4; break;
	      default: value = 2;
	    }

	    for (index = 0; index < 47; index++) {
	      test.push({ k: chr + index, v: value });
	    }
	  }

	  test.sort(function (a, b) { return b.v - a.v; });

	  for (index = 0; index < test.length; index++) {
	    chr = test[index].k.charAt(0);
	    if (result.charAt(result.length - 1) !== chr) result += chr;
	  }

	  return result !== 'DGBEFHACIJK';
	});

	var FORCED$7 = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$3 || !STABLE_SORT;

	var getSortCompare = function (comparefn) {
	  return function (x, y) {
	    if (y === undefined) return -1;
	    if (x === undefined) return 1;
	    if (comparefn !== undefined) return +comparefn(x, y) || 0;
	    return toString_1(x) > toString_1(y) ? 1 : -1;
	  };
	};

	// `Array.prototype.sort` method
	// https://tc39.es/ecma262/#sec-array.prototype.sort
	_export({ target: 'Array', proto: true, forced: FORCED$7 }, {
	  sort: function sort(comparefn) {
	    if (comparefn !== undefined) aCallable(comparefn);

	    var array = toObject(this);

	    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);

	    var items = [];
	    var arrayLength = lengthOfArrayLike(array);
	    var itemsLength, index;

	    for (index = 0; index < arrayLength; index++) {
	      if (index in array) push$1(items, array[index]);
	    }

	    arraySort(items, getSortCompare(comparefn));

	    itemsLength = items.length;
	    index = 0;

	    while (index < itemsLength) array[index] = items[index++];
	    while (index < arrayLength) delete array[index++];

	    return array;
	  }
	});

	var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport('slice');

	var SPECIES$1 = wellKnownSymbol('species');
	var Array$2 = global_1.Array;
	var max$1 = Math.max;

	// `Array.prototype.slice` method
	// https://tc39.es/ecma262/#sec-array.prototype.slice
	// fallback for not array-like ES3 strings and DOM objects
	_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {
	  slice: function slice(start, end) {
	    var O = toIndexedObject(this);
	    var length = lengthOfArrayLike(O);
	    var k = toAbsoluteIndex(start, length);
	    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
	    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
	    var Constructor, result, n;
	    if (isArray$3(O)) {
	      Constructor = O.constructor;
	      // cross-realm fallback
	      if (isConstructor(Constructor) && (Constructor === Array$2 || isArray$3(Constructor.prototype))) {
	        Constructor = undefined;
	      } else if (isObject$1(Constructor)) {
	        Constructor = Constructor[SPECIES$1];
	        if (Constructor === null) Constructor = undefined;
	      }
	      if (Constructor === Array$2 || Constructor === undefined) {
	        return arraySlice$1(O, k, fin);
	      }
	    }
	    result = new (Constructor === undefined ? Array$2 : Constructor)(max$1(fin - k, 0));
	    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
	    result.length = n;
	    return result;
	  }
	});

	// TODO: Remove from `core-js@4` since it's moved to entry points








	var DELEGATES_TO_EXEC = function () {
	  var execCalled = false;
	  var re = /[ac]/;
	  re.exec = function () {
	    execCalled = true;
	    return /./.exec.apply(this, arguments);
	  };
	  return re.test('abc') === true && execCalled;
	}();

	var Error$1 = global_1.Error;
	var un$Test = functionUncurryThis(/./.test);

	// `RegExp.prototype.test` method
	// https://tc39.es/ecma262/#sec-regexp.prototype.test
	_export({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {
	  test: function (str) {
	    var exec = this.exec;
	    if (!isCallable(exec)) return un$Test(this, str);
	    var result = functionCall(exec, this, str);
	    if (result !== null && !isObject$1(result)) {
	      throw new Error$1('RegExp exec method returned something other than an Object or null');
	    }
	    return !!result;
	  }
	});

	var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

	var TypeError$8 = global_1.TypeError;
	var max = Math.max;
	var min$3 = Math.min;
	var MAX_SAFE_INTEGER$1 = 0x1FFFFFFFFFFFFF;
	var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

	// `Array.prototype.splice` method
	// https://tc39.es/ecma262/#sec-array.prototype.splice
	// with adding support of @@species
	_export({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
	  splice: function splice(start, deleteCount /* , ...items */) {
	    var O = toObject(this);
	    var len = lengthOfArrayLike(O);
	    var actualStart = toAbsoluteIndex(start, len);
	    var argumentsLength = arguments.length;
	    var insertCount, actualDeleteCount, A, k, from, to;
	    if (argumentsLength === 0) {
	      insertCount = actualDeleteCount = 0;
	    } else if (argumentsLength === 1) {
	      insertCount = 0;
	      actualDeleteCount = len - actualStart;
	    } else {
	      insertCount = argumentsLength - 2;
	      actualDeleteCount = min$3(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
	    }
	    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER$1) {
	      throw TypeError$8(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
	    }
	    A = arraySpeciesCreate(O, actualDeleteCount);
	    for (k = 0; k < actualDeleteCount; k++) {
	      from = actualStart + k;
	      if (from in O) createProperty(A, k, O[from]);
	    }
	    A.length = actualDeleteCount;
	    if (insertCount < actualDeleteCount) {
	      for (k = actualStart; k < len - actualDeleteCount; k++) {
	        from = k + actualDeleteCount;
	        to = k + insertCount;
	        if (from in O) O[to] = O[from];
	        else delete O[to];
	      }
	      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
	    } else if (insertCount > actualDeleteCount) {
	      for (k = len - actualDeleteCount; k > actualStart; k--) {
	        from = k + actualDeleteCount - 1;
	        to = k + insertCount - 1;
	        if (from in O) O[to] = O[from];
	        else delete O[to];
	      }
	    }
	    for (k = 0; k < insertCount; k++) {
	      O[k + actualStart] = arguments[k + 2];
	    }
	    O.length = len - actualDeleteCount + insertCount;
	    return A;
	  }
	});

	/* eslint-disable es/no-array-prototype-indexof -- required for testing */


	var $IndexOf = arrayIncludes.indexOf;


	var un$IndexOf = functionUncurryThis([].indexOf);

	var NEGATIVE_ZERO$1 = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
	var STRICT_METHOD$2 = arrayMethodIsStrict('indexOf');

	// `Array.prototype.indexOf` method
	// https://tc39.es/ecma262/#sec-array.prototype.indexof
	_export({ target: 'Array', proto: true, forced: NEGATIVE_ZERO$1 || !STRICT_METHOD$2 }, {
	  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
	    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
	    return NEGATIVE_ZERO$1
	      // convert -0 to +0
	      ? un$IndexOf(this, searchElement, fromIndex) || 0
	      : $IndexOf(this, searchElement, fromIndex);
	  }
	});

	// `SameValue` abstract operation
	// https://tc39.es/ecma262/#sec-samevalue
	// eslint-disable-next-line es/no-object-is -- safe
	var sameValue = Object.is || function is(x, y) {
	  // eslint-disable-next-line no-self-compare -- NaN check
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

	// @@search logic
	fixRegexpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
	  return [
	    // `String.prototype.search` method
	    // https://tc39.es/ecma262/#sec-string.prototype.search
	    function search(regexp) {
	      var O = requireObjectCoercible(this);
	      var searcher = regexp == undefined ? undefined : getMethod(regexp, SEARCH);
	      return searcher ? functionCall(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString_1(O));
	    },
	    // `RegExp.prototype[@@search]` method
	    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
	    function (string) {
	      var rx = anObject(this);
	      var S = toString_1(string);
	      var res = maybeCallNative(nativeSearch, rx, S);

	      if (res.done) return res.value;

	      var previousLastIndex = rx.lastIndex;
	      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
	      var result = regexpExecAbstract(rx, S);
	      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
	      return result === null ? -1 : result.index;
	    }
	  ];
	});

	/* eslint-disable es/no-array-prototype-lastindexof -- safe */






	var min$2 = Math.min;
	var $lastIndexOf = [].lastIndexOf;
	var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
	var STRICT_METHOD$1 = arrayMethodIsStrict('lastIndexOf');
	var FORCED$6 = NEGATIVE_ZERO || !STRICT_METHOD$1;

	// `Array.prototype.lastIndexOf` method implementation
	// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
	var arrayLastIndexOf = FORCED$6 ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
	  // convert -0 to +0
	  if (NEGATIVE_ZERO) return functionApply($lastIndexOf, this, arguments) || 0;
	  var O = toIndexedObject(this);
	  var length = lengthOfArrayLike(O);
	  var index = length - 1;
	  if (arguments.length > 1) index = min$2(index, toIntegerOrInfinity(arguments[1]));
	  if (index < 0) index = length + index;
	  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
	  return -1;
	} : $lastIndexOf;

	// `Array.prototype.lastIndexOf` method
	// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
	// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing
	_export({ target: 'Array', proto: true, forced: arrayLastIndexOf !== [].lastIndexOf }, {
	  lastIndexOf: arrayLastIndexOf
	});

	var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
	var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
	var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';
	var TypeError$7 = global_1.TypeError;

	// We can't use this feature detection in V8 since it causes
	// deoptimization and serious performance degradation
	// https://github.com/zloirock/core-js/issues/679
	var IS_CONCAT_SPREADABLE_SUPPORT = engineV8Version >= 51 || !fails(function () {
	  var array = [];
	  array[IS_CONCAT_SPREADABLE] = false;
	  return array.concat()[0] !== array;
	});

	var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

	var isConcatSpreadable = function (O) {
	  if (!isObject$1(O)) return false;
	  var spreadable = O[IS_CONCAT_SPREADABLE];
	  return spreadable !== undefined ? !!spreadable : isArray$3(O);
	};

	var FORCED$5 = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

	// `Array.prototype.concat` method
	// https://tc39.es/ecma262/#sec-array.prototype.concat
	// with adding support of @@isConcatSpreadable and @@species
	_export({ target: 'Array', proto: true, forced: FORCED$5 }, {
	  // eslint-disable-next-line no-unused-vars -- required for `.length`
	  concat: function concat(arg) {
	    var O = toObject(this);
	    var A = arraySpeciesCreate(O, 0);
	    var n = 0;
	    var i, k, length, len, E;
	    for (i = -1, length = arguments.length; i < length; i++) {
	      E = i === -1 ? O : arguments[i];
	      if (isConcatSpreadable(E)) {
	        len = lengthOfArrayLike(E);
	        if (n + len > MAX_SAFE_INTEGER) throw TypeError$7(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
	        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
	      } else {
	        if (n >= MAX_SAFE_INTEGER) throw TypeError$7(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
	        createProperty(A, n++, E);
	      }
	    }
	    A.length = n;
	    return A;
	  }
	});

	var nativePromiseConstructor = global_1.Promise;

	var redefineAll = function (target, src, options) {
	  for (var key in src) redefine(target, key, src[key], options);
	  return target;
	};

	var TypeError$6 = global_1.TypeError;

	var anInstance = function (it, Prototype) {
	  if (objectIsPrototypeOf(Prototype, it)) return it;
	  throw TypeError$6('Incorrect invocation');
	};

	var TypeError$5 = global_1.TypeError;

	var Result = function (stopped, result) {
	  this.stopped = stopped;
	  this.result = result;
	};

	var ResultPrototype = Result.prototype;

	var iterate = function (iterable, unboundFunction, options) {
	  var that = options && options.that;
	  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
	  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
	  var INTERRUPTED = !!(options && options.INTERRUPTED);
	  var fn = functionBindContext(unboundFunction, that);
	  var iterator, iterFn, index, length, result, next, step;

	  var stop = function (condition) {
	    if (iterator) iteratorClose(iterator, 'normal', condition);
	    return new Result(true, condition);
	  };

	  var callFn = function (value) {
	    if (AS_ENTRIES) {
	      anObject(value);
	      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
	    } return INTERRUPTED ? fn(value, stop) : fn(value);
	  };

	  if (IS_ITERATOR) {
	    iterator = iterable;
	  } else {
	    iterFn = getIteratorMethod(iterable);
	    if (!iterFn) throw TypeError$5(tryToString(iterable) + ' is not iterable');
	    // optimisation for array iterators
	    if (isArrayIteratorMethod(iterFn)) {
	      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
	        result = callFn(iterable[index]);
	        if (result && objectIsPrototypeOf(ResultPrototype, result)) return result;
	      } return new Result(false);
	    }
	    iterator = getIterator(iterable, iterFn);
	  }

	  next = iterator.next;
	  while (!(step = functionCall(next, iterator)).done) {
	    try {
	      result = callFn(step.value);
	    } catch (error) {
	      iteratorClose(iterator, 'throw', error);
	    }
	    if (typeof result == 'object' && result && objectIsPrototypeOf(ResultPrototype, result)) return result;
	  } return new Result(false);
	};

	var TypeError$4 = global_1.TypeError;

	var validateArgumentsLength = function (passed, required) {
	  if (passed < required) throw TypeError$4('Not enough arguments');
	  return passed;
	};

	var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(engineUserAgent);

	var set = global_1.setImmediate;
	var clear = global_1.clearImmediate;
	var process$3 = global_1.process;
	var Dispatch = global_1.Dispatch;
	var Function$2 = global_1.Function;
	var MessageChannel = global_1.MessageChannel;
	var String$1 = global_1.String;
	var counter = 0;
	var queue$1 = {};
	var ONREADYSTATECHANGE = 'onreadystatechange';
	var location, defer, channel, port;

	try {
	  // Deno throws a ReferenceError on `location` access without `--location` flag
	  location = global_1.location;
	} catch (error) { /* empty */ }

	var run = function (id) {
	  if (hasOwnProperty_1(queue$1, id)) {
	    var fn = queue$1[id];
	    delete queue$1[id];
	    fn();
	  }
	};

	var runner = function (id) {
	  return function () {
	    run(id);
	  };
	};

	var listener = function (event) {
	  run(event.data);
	};

	var post = function (id) {
	  // old engines have not location.origin
	  global_1.postMessage(String$1(id), location.protocol + '//' + location.host);
	};

	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if (!set || !clear) {
	  set = function setImmediate(handler) {
	    validateArgumentsLength(arguments.length, 1);
	    var fn = isCallable(handler) ? handler : Function$2(handler);
	    var args = arraySlice$1(arguments, 1);
	    queue$1[++counter] = function () {
	      functionApply(fn, undefined, args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clear = function clearImmediate(id) {
	    delete queue$1[id];
	  };
	  // Node.js 0.8-
	  if (engineIsNode) {
	    defer = function (id) {
	      process$3.nextTick(runner(id));
	    };
	  // Sphere (JS game engine) Dispatch API
	  } else if (Dispatch && Dispatch.now) {
	    defer = function (id) {
	      Dispatch.now(runner(id));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  // except iOS - https://github.com/zloirock/core-js/issues/624
	  } else if (MessageChannel && !engineIsIos) {
	    channel = new MessageChannel();
	    port = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = functionBindContext(port.postMessage, port);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if (
	    global_1.addEventListener &&
	    isCallable(global_1.postMessage) &&
	    !global_1.importScripts &&
	    location && location.protocol !== 'file:' &&
	    !fails(post)
	  ) {
	    defer = post;
	    global_1.addEventListener('message', listener, false);
	  // IE8-
	  } else if (ONREADYSTATECHANGE in documentCreateElement('script')) {
	    defer = function (id) {
	      html$1.appendChild(documentCreateElement('script'))[ONREADYSTATECHANGE] = function () {
	        html$1.removeChild(this);
	        run(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function (id) {
	      setTimeout(runner(id), 0);
	    };
	  }
	}

	var task$1 = {
	  set: set,
	  clear: clear
	};

	var engineIsIosPebble = /ipad|iphone|ipod/i.test(engineUserAgent) && global_1.Pebble !== undefined;

	var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(engineUserAgent);

	var getOwnPropertyDescriptor$2 = objectGetOwnPropertyDescriptor.f;
	var macrotask = task$1.set;





	var MutationObserver$1 = global_1.MutationObserver || global_1.WebKitMutationObserver;
	var document$2 = global_1.document;
	var process$2 = global_1.process;
	var Promise$1 = global_1.Promise;
	// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
	var queueMicrotaskDescriptor = getOwnPropertyDescriptor$2(global_1, 'queueMicrotask');
	var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

	var flush, head, last, notify$1, toggle, node$1, promise, then;

	// modern engines have queueMicrotask method
	if (!queueMicrotask) {
	  flush = function () {
	    var parent, fn;
	    if (engineIsNode && (parent = process$2.domain)) parent.exit();
	    while (head) {
	      fn = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch (error) {
	        if (head) notify$1();
	        else last = undefined;
	        throw error;
	      }
	    } last = undefined;
	    if (parent) parent.enter();
	  };

	  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
	  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
	  if (!engineIsIos && !engineIsNode && !engineIsWebosWebkit && MutationObserver$1 && document$2) {
	    toggle = true;
	    node$1 = document$2.createTextNode('');
	    new MutationObserver$1(flush).observe(node$1, { characterData: true });
	    notify$1 = function () {
	      node$1.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if (!engineIsIosPebble && Promise$1 && Promise$1.resolve) {
	    // Promise.resolve without an argument throws an error in LG WebOS 2
	    promise = Promise$1.resolve(undefined);
	    // workaround of WebKit ~ iOS Safari 10.1 bug
	    promise.constructor = Promise$1;
	    then = functionBindContext(promise.then, promise);
	    notify$1 = function () {
	      then(flush);
	    };
	  // Node.js without promises
	  } else if (engineIsNode) {
	    notify$1 = function () {
	      process$2.nextTick(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    // strange IE + webpack dev server bug - use .bind(global)
	    macrotask = functionBindContext(macrotask, global_1);
	    notify$1 = function () {
	      macrotask(flush);
	    };
	  }
	}

	var microtask = queueMicrotask || function (fn) {
	  var task = { fn: fn, next: undefined };
	  if (last) last.next = task;
	  if (!head) {
	    head = task;
	    notify$1();
	  } last = task;
	};

	var PromiseCapability = function (C) {
	  var resolve, reject;
	  this.promise = new C(function ($$resolve, $$reject) {
	    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject = $$reject;
	  });
	  this.resolve = aCallable(resolve);
	  this.reject = aCallable(reject);
	};

	// `NewPromiseCapability` abstract operation
	// https://tc39.es/ecma262/#sec-newpromisecapability
	var f$1 = function (C) {
	  return new PromiseCapability(C);
	};

	var newPromiseCapability$1 = {
		f: f$1
	};

	var promiseResolve = function (C, x) {
	  anObject(C);
	  if (isObject$1(x) && x.constructor === C) return x;
	  var promiseCapability = newPromiseCapability$1.f(C);
	  var resolve = promiseCapability.resolve;
	  resolve(x);
	  return promiseCapability.promise;
	};

	var hostReportErrors = function (a, b) {
	  var console = global_1.console;
	  if (console && console.error) {
	    arguments.length == 1 ? console.error(a) : console.error(a, b);
	  }
	};

	var perform = function (exec) {
	  try {
	    return { error: false, value: exec() };
	  } catch (error) {
	    return { error: true, value: error };
	  }
	};

	var Queue = function () {
	  this.head = null;
	  this.tail = null;
	};

	Queue.prototype = {
	  add: function (item) {
	    var entry = { item: item, next: null };
	    if (this.head) this.tail.next = entry;
	    else this.head = entry;
	    this.tail = entry;
	  },
	  get: function () {
	    var entry = this.head;
	    if (entry) {
	      this.head = entry.next;
	      if (this.tail === entry) this.tail = null;
	      return entry.item;
	    }
	  }
	};

	var queue = Queue;

	var engineIsBrowser = typeof window == 'object';

	var task = task$1.set;













	var SPECIES = wellKnownSymbol('species');
	var PROMISE = 'Promise';

	var getInternalState = internalState.getterFor(PROMISE);
	var setInternalState$2 = internalState.set;
	var getInternalPromiseState = internalState.getterFor(PROMISE);
	var NativePromisePrototype = nativePromiseConstructor && nativePromiseConstructor.prototype;
	var PromiseConstructor = nativePromiseConstructor;
	var PromisePrototype = NativePromisePrototype;
	var TypeError$3 = global_1.TypeError;
	var document$1 = global_1.document;
	var process$1 = global_1.process;
	var newPromiseCapability = newPromiseCapability$1.f;
	var newGenericPromiseCapability = newPromiseCapability;

	var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global_1.dispatchEvent);
	var NATIVE_REJECTION_EVENT = isCallable(global_1.PromiseRejectionEvent);
	var UNHANDLED_REJECTION = 'unhandledrejection';
	var REJECTION_HANDLED = 'rejectionhandled';
	var PENDING = 0;
	var FULFILLED = 1;
	var REJECTED = 2;
	var HANDLED = 1;
	var UNHANDLED = 2;
	var SUBCLASSING = false;

	var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

	var FORCED$4 = isForced_1(PROMISE, function () {
	  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
	  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
	  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
	  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
	  // We can't detect it synchronously, so just check versions
	  if (!GLOBAL_CORE_JS_PROMISE && engineV8Version === 66) return true;
	  // We can't use @@species feature detection in V8 since it causes
	  // deoptimization and performance degradation
	  // https://github.com/zloirock/core-js/issues/679
	  if (engineV8Version >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;
	  // Detect correctness of subclassing with @@species support
	  var promise = new PromiseConstructor(function (resolve) { resolve(1); });
	  var FakePromise = function (exec) {
	    exec(function () { /* empty */ }, function () { /* empty */ });
	  };
	  var constructor = promise.constructor = {};
	  constructor[SPECIES] = FakePromise;
	  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
	  if (!SUBCLASSING) return true;
	  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	  return !GLOBAL_CORE_JS_PROMISE && engineIsBrowser && !NATIVE_REJECTION_EVENT;
	});

	var INCORRECT_ITERATION = FORCED$4 || !checkCorrectnessOfIteration(function (iterable) {
	  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
	});

	// helpers
	var isThenable = function (it) {
	  var then;
	  return isObject$1(it) && isCallable(then = it.then) ? then : false;
	};

	var callReaction = function (reaction, state) {
	  var value = state.value;
	  var ok = state.state == FULFILLED;
	  var handler = ok ? reaction.ok : reaction.fail;
	  var resolve = reaction.resolve;
	  var reject = reaction.reject;
	  var domain = reaction.domain;
	  var result, then, exited;
	  try {
	    if (handler) {
	      if (!ok) {
	        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
	        state.rejection = HANDLED;
	      }
	      if (handler === true) result = value;
	      else {
	        if (domain) domain.enter();
	        result = handler(value); // can throw
	        if (domain) {
	          domain.exit();
	          exited = true;
	        }
	      }
	      if (result === reaction.promise) {
	        reject(TypeError$3('Promise-chain cycle'));
	      } else if (then = isThenable(result)) {
	        functionCall(then, result, resolve, reject);
	      } else resolve(result);
	    } else reject(value);
	  } catch (error) {
	    if (domain && !exited) domain.exit();
	    reject(error);
	  }
	};

	var notify = function (state, isReject) {
	  if (state.notified) return;
	  state.notified = true;
	  microtask(function () {
	    var reactions = state.reactions;
	    var reaction;
	    while (reaction = reactions.get()) {
	      callReaction(reaction, state);
	    }
	    state.notified = false;
	    if (isReject && !state.rejection) onUnhandled(state);
	  });
	};

	var dispatchEvent = function (name, promise, reason) {
	  var event, handler;
	  if (DISPATCH_EVENT) {
	    event = document$1.createEvent('Event');
	    event.promise = promise;
	    event.reason = reason;
	    event.initEvent(name, false, true);
	    global_1.dispatchEvent(event);
	  } else event = { promise: promise, reason: reason };
	  if (!NATIVE_REJECTION_EVENT && (handler = global_1['on' + name])) handler(event);
	  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
	};

	var onUnhandled = function (state) {
	  functionCall(task, global_1, function () {
	    var promise = state.facade;
	    var value = state.value;
	    var IS_UNHANDLED = isUnhandled(state);
	    var result;
	    if (IS_UNHANDLED) {
	      result = perform(function () {
	        if (engineIsNode) {
	          process$1.emit('unhandledRejection', value, promise);
	        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      state.rejection = engineIsNode || isUnhandled(state) ? UNHANDLED : HANDLED;
	      if (result.error) throw result.value;
	    }
	  });
	};

	var isUnhandled = function (state) {
	  return state.rejection !== HANDLED && !state.parent;
	};

	var onHandleUnhandled = function (state) {
	  functionCall(task, global_1, function () {
	    var promise = state.facade;
	    if (engineIsNode) {
	      process$1.emit('rejectionHandled', promise);
	    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
	  });
	};

	var bind$1 = function (fn, state, unwrap) {
	  return function (value) {
	    fn(state, value, unwrap);
	  };
	};

	var internalReject = function (state, value, unwrap) {
	  if (state.done) return;
	  state.done = true;
	  if (unwrap) state = unwrap;
	  state.value = value;
	  state.state = REJECTED;
	  notify(state, true);
	};

	var internalResolve = function (state, value, unwrap) {
	  if (state.done) return;
	  state.done = true;
	  if (unwrap) state = unwrap;
	  try {
	    if (state.facade === value) throw TypeError$3("Promise can't be resolved itself");
	    var then = isThenable(value);
	    if (then) {
	      microtask(function () {
	        var wrapper = { done: false };
	        try {
	          functionCall(then, value,
	            bind$1(internalResolve, wrapper, state),
	            bind$1(internalReject, wrapper, state)
	          );
	        } catch (error) {
	          internalReject(wrapper, error, state);
	        }
	      });
	    } else {
	      state.value = value;
	      state.state = FULFILLED;
	      notify(state, false);
	    }
	  } catch (error) {
	    internalReject({ done: false }, error, state);
	  }
	};

	// constructor polyfill
	if (FORCED$4) {
	  // 25.4.3.1 Promise(executor)
	  PromiseConstructor = function Promise(executor) {
	    anInstance(this, PromisePrototype);
	    aCallable(executor);
	    functionCall(Internal, this);
	    var state = getInternalState(this);
	    try {
	      executor(bind$1(internalResolve, state), bind$1(internalReject, state));
	    } catch (error) {
	      internalReject(state, error);
	    }
	  };
	  PromisePrototype = PromiseConstructor.prototype;
	  // eslint-disable-next-line no-unused-vars -- required for `.length`
	  Internal = function Promise(executor) {
	    setInternalState$2(this, {
	      type: PROMISE,
	      done: false,
	      notified: false,
	      parent: false,
	      reactions: new queue(),
	      rejection: false,
	      state: PENDING,
	      value: undefined
	    });
	  };
	  Internal.prototype = redefineAll(PromisePrototype, {
	    // `Promise.prototype.then` method
	    // https://tc39.es/ecma262/#sec-promise.prototype.then
	    // eslint-disable-next-line unicorn/no-thenable -- safe
	    then: function then(onFulfilled, onRejected) {
	      var state = getInternalPromiseState(this);
	      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
	      state.parent = true;
	      reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
	      reaction.fail = isCallable(onRejected) && onRejected;
	      reaction.domain = engineIsNode ? process$1.domain : undefined;
	      if (state.state == PENDING) state.reactions.add(reaction);
	      else microtask(function () {
	        callReaction(reaction, state);
	      });
	      return reaction.promise;
	    },
	    // `Promise.prototype.catch` method
	    // https://tc39.es/ecma262/#sec-promise.prototype.catch
	    'catch': function (onRejected) {
	      return this.then(undefined, onRejected);
	    }
	  });
	  OwnPromiseCapability = function () {
	    var promise = new Internal();
	    var state = getInternalState(promise);
	    this.promise = promise;
	    this.resolve = bind$1(internalResolve, state);
	    this.reject = bind$1(internalReject, state);
	  };
	  newPromiseCapability$1.f = newPromiseCapability = function (C) {
	    return C === PromiseConstructor || C === PromiseWrapper
	      ? new OwnPromiseCapability(C)
	      : newGenericPromiseCapability(C);
	  };

	  if (isCallable(nativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
	    nativeThen = NativePromisePrototype.then;

	    if (!SUBCLASSING) {
	      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
	      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
	        var that = this;
	        return new PromiseConstructor(function (resolve, reject) {
	          functionCall(nativeThen, that, resolve, reject);
	        }).then(onFulfilled, onRejected);
	      // https://github.com/zloirock/core-js/issues/640
	      }, { unsafe: true });

	      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
	      redefine(NativePromisePrototype, 'catch', PromisePrototype['catch'], { unsafe: true });
	    }

	    // make `.constructor === Promise` work for native promise-based APIs
	    try {
	      delete NativePromisePrototype.constructor;
	    } catch (error) { /* empty */ }

	    // make `instanceof Promise` work for native promise-based APIs
	    if (objectSetPrototypeOf) {
	      objectSetPrototypeOf(NativePromisePrototype, PromisePrototype);
	    }
	  }
	}

	_export({ global: true, wrap: true, forced: FORCED$4 }, {
	  Promise: PromiseConstructor
	});

	setToStringTag(PromiseConstructor, PROMISE, false);
	setSpecies(PROMISE);

	PromiseWrapper = getBuiltIn(PROMISE);

	// statics
	_export({ target: PROMISE, stat: true, forced: FORCED$4 }, {
	  // `Promise.reject` method
	  // https://tc39.es/ecma262/#sec-promise.reject
	  reject: function reject(r) {
	    var capability = newPromiseCapability(this);
	    functionCall(capability.reject, undefined, r);
	    return capability.promise;
	  }
	});

	_export({ target: PROMISE, stat: true, forced: FORCED$4 }, {
	  // `Promise.resolve` method
	  // https://tc39.es/ecma262/#sec-promise.resolve
	  resolve: function resolve(x) {
	    return promiseResolve(this, x);
	  }
	});

	_export({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
	  // `Promise.all` method
	  // https://tc39.es/ecma262/#sec-promise.all
	  all: function all(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var resolve = capability.resolve;
	    var reject = capability.reject;
	    var result = perform(function () {
	      var $promiseResolve = aCallable(C.resolve);
	      var values = [];
	      var counter = 0;
	      var remaining = 1;
	      iterate(iterable, function (promise) {
	        var index = counter++;
	        var alreadyCalled = false;
	        remaining++;
	        functionCall($promiseResolve, C, promise).then(function (value) {
	          if (alreadyCalled) return;
	          alreadyCalled = true;
	          values[index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if (result.error) reject(result.value);
	    return capability.promise;
	  },
	  // `Promise.race` method
	  // https://tc39.es/ecma262/#sec-promise.race
	  race: function race(iterable) {
	    var C = this;
	    var capability = newPromiseCapability(C);
	    var reject = capability.reject;
	    var result = perform(function () {
	      var $promiseResolve = aCallable(C.resolve);
	      iterate(iterable, function (promise) {
	        functionCall($promiseResolve, C, promise).then(capability.resolve, reject);
	      });
	    });
	    if (result.error) reject(result.value);
	    return capability.promise;
	  }
	});

	// `Array.prototype.fill` method implementation
	// https://tc39.es/ecma262/#sec-array.prototype.fill
	var arrayFill = function fill(value /* , start = 0, end = @length */) {
	  var O = toObject(this);
	  var length = lengthOfArrayLike(O);
	  var argumentsLength = arguments.length;
	  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
	  var end = argumentsLength > 2 ? arguments[2] : undefined;
	  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
	  while (endPos > index) O[index++] = value;
	  return O;
	};

	// `Array.prototype.fill` method
	// https://tc39.es/ecma262/#sec-array.prototype.fill
	_export({ target: 'Array', proto: true }, {
	  fill: arrayFill
	});

	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables('fill');

	var TypeError$2 = global_1.TypeError;

	// `FlattenIntoArray` abstract operation
	// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
	var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
	  var targetIndex = start;
	  var sourceIndex = 0;
	  var mapFn = mapper ? functionBindContext(mapper, thisArg) : false;
	  var element, elementLen;

	  while (sourceIndex < sourceLen) {
	    if (sourceIndex in source) {
	      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

	      if (depth > 0 && isArray$3(element)) {
	        elementLen = lengthOfArrayLike(element);
	        targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
	      } else {
	        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError$2('Exceed the acceptable array length');
	        target[targetIndex] = element;
	      }

	      targetIndex++;
	    }
	    sourceIndex++;
	  }
	  return targetIndex;
	};

	var flattenIntoArray_1 = flattenIntoArray;

	// `Array.prototype.flatMap` method
	// https://tc39.es/ecma262/#sec-array.prototype.flatmap
	_export({ target: 'Array', proto: true }, {
	  flatMap: function flatMap(callbackfn /* , thisArg */) {
	    var O = toObject(this);
	    var sourceLen = lengthOfArrayLike(O);
	    var A;
	    aCallable(callbackfn);
	    A = arraySpeciesCreate(O, 0);
	    A.length = flattenIntoArray_1(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    return A;
	  }
	});

	// this method was added to unscopables after implementation
	// in popular engines, so it's moved to a separate module


	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables('flatMap');

	var TypeError$1 = global_1.TypeError;

	var notARegexp = function (it) {
	  if (isRegexp(it)) {
	    throw TypeError$1("The method doesn't accept regular expressions");
	  } return it;
	};

	var MATCH = wellKnownSymbol('match');

	var correctIsRegexpLogic = function (METHOD_NAME) {
	  var regexp = /./;
	  try {
	    '/./'[METHOD_NAME](regexp);
	  } catch (error1) {
	    try {
	      regexp[MATCH] = false;
	      return '/./'[METHOD_NAME](regexp);
	    } catch (error2) { /* empty */ }
	  } return false;
	};

	var getOwnPropertyDescriptor$1 = objectGetOwnPropertyDescriptor.f;







	// eslint-disable-next-line es/no-string-prototype-endswith -- safe
	var un$EndsWith = functionUncurryThis(''.endsWith);
	var slice$1 = functionUncurryThis(''.slice);
	var min$1 = Math.min;

	var CORRECT_IS_REGEXP_LOGIC$1 = correctIsRegexpLogic('endsWith');
	// https://github.com/zloirock/core-js/pull/702
	var MDN_POLYFILL_BUG$1 = !CORRECT_IS_REGEXP_LOGIC$1 && !!function () {
	  var descriptor = getOwnPropertyDescriptor$1(String.prototype, 'endsWith');
	  return descriptor && !descriptor.writable;
	}();

	// `String.prototype.endsWith` method
	// https://tc39.es/ecma262/#sec-string.prototype.endswith
	_export({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG$1 && !CORRECT_IS_REGEXP_LOGIC$1 }, {
	  endsWith: function endsWith(searchString /* , endPosition = @length */) {
	    var that = toString_1(requireObjectCoercible(this));
	    notARegexp(searchString);
	    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
	    var len = that.length;
	    var end = endPosition === undefined ? len : min$1(toLength(endPosition), len);
	    var search = toString_1(searchString);
	    return un$EndsWith
	      ? un$EndsWith(that, search, end)
	      : slice$1(that, end - search.length, end) === search;
	  }
	});

	var $find = arrayIteration.find;


	var FIND = 'find';
	var SKIPS_HOLES$1 = true;

	// Shouldn't skip holes
	if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES$1 = false; });

	// `Array.prototype.find` method
	// https://tc39.es/ecma262/#sec-array.prototype.find
	_export({ target: 'Array', proto: true, forced: SKIPS_HOLES$1 }, {
	  find: function find(callbackfn /* , that = undefined */) {
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables(FIND);

	var $findIndex = arrayIteration.findIndex;


	var FIND_INDEX = 'findIndex';
	var SKIPS_HOLES = true;

	// Shouldn't skip holes
	if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

	// `Array.prototype.findIndex` method
	// https://tc39.es/ecma262/#sec-array.prototype.findindex
	_export({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
	  findIndex: function findIndex(callbackfn /* , that = undefined */) {
	    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables(FIND_INDEX);

	var $includes = arrayIncludes.includes;


	// `Array.prototype.includes` method
	// https://tc39.es/ecma262/#sec-array.prototype.includes
	_export({ target: 'Array', proto: true }, {
	  includes: function includes(el /* , fromIndex = 0 */) {
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
	addToUnscopables('includes');

	var stringIndexOf = functionUncurryThis(''.indexOf);

	// `String.prototype.includes` method
	// https://tc39.es/ecma262/#sec-string.prototype.includes
	_export({ target: 'String', proto: true, forced: !correctIsRegexpLogic('includes') }, {
	  includes: function includes(searchString /* , position = 0 */) {
	    return !!~stringIndexOf(
	      toString_1(requireObjectCoercible(this)),
	      toString_1(notARegexp(searchString)),
	      arguments.length > 1 ? arguments[1] : undefined
	    );
	  }
	});

	var RangeError = global_1.RangeError;

	// `String.prototype.repeat` method implementation
	// https://tc39.es/ecma262/#sec-string.prototype.repeat
	var stringRepeat = function repeat(count) {
	  var str = toString_1(requireObjectCoercible(this));
	  var result = '';
	  var n = toIntegerOrInfinity(count);
	  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
	  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
	  return result;
	};

	// https://github.com/tc39/proposal-string-pad-start-end






	var repeat = functionUncurryThis(stringRepeat);
	var stringSlice$1 = functionUncurryThis(''.slice);
	var ceil = Math.ceil;

	// `String.prototype.{ padStart, padEnd }` methods implementation
	var createMethod = function (IS_END) {
	  return function ($this, maxLength, fillString) {
	    var S = toString_1(requireObjectCoercible($this));
	    var intMaxLength = toLength(maxLength);
	    var stringLength = S.length;
	    var fillStr = fillString === undefined ? ' ' : toString_1(fillString);
	    var fillLen, stringFiller;
	    if (intMaxLength <= stringLength || fillStr == '') return S;
	    fillLen = intMaxLength - stringLength;
	    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));
	    if (stringFiller.length > fillLen) stringFiller = stringSlice$1(stringFiller, 0, fillLen);
	    return IS_END ? S + stringFiller : stringFiller + S;
	  };
	};

	var stringPad = {
	  // `String.prototype.padStart` method
	  // https://tc39.es/ecma262/#sec-string.prototype.padstart
	  start: createMethod(false),
	  // `String.prototype.padEnd` method
	  // https://tc39.es/ecma262/#sec-string.prototype.padend
	  end: createMethod(true)
	};

	// https://github.com/zloirock/core-js/issues/280


	var stringPadWebkitBug = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(engineUserAgent);

	var $padEnd = stringPad.end;


	// `String.prototype.padEnd` method
	// https://tc39.es/ecma262/#sec-string.prototype.padend
	_export({ target: 'String', proto: true, forced: stringPadWebkitBug }, {
	  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
	    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	var $padStart = stringPad.start;


	// `String.prototype.padStart` method
	// https://tc39.es/ecma262/#sec-string.prototype.padstart
	_export({ target: 'String', proto: true, forced: stringPadWebkitBug }, {
	  padStart: function padStart(maxLength /* , fillString = ' ' */) {
	    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	var $reduceRight = arrayReduce.right;




	var STRICT_METHOD = arrayMethodIsStrict('reduceRight');
	// Chrome 80-82 has a critical bug
	// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
	var CHROME_BUG = !engineIsNode && engineV8Version > 79 && engineV8Version < 83;

	// `Array.prototype.reduceRight` method
	// https://tc39.es/ecma262/#sec-array.prototype.reduceright
	_export({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
	  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
	    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

	// `String.prototype.repeat` method
	// https://tc39.es/ecma262/#sec-string.prototype.repeat
	_export({ target: 'String', proto: true }, {
	  repeat: stringRepeat
	});

	var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;







	// eslint-disable-next-line es/no-string-prototype-startswith -- safe
	var un$StartsWith = functionUncurryThis(''.startsWith);
	var stringSlice = functionUncurryThis(''.slice);
	var min = Math.min;

	var CORRECT_IS_REGEXP_LOGIC = correctIsRegexpLogic('startsWith');
	// https://github.com/zloirock/core-js/pull/702
	var MDN_POLYFILL_BUG = !CORRECT_IS_REGEXP_LOGIC && !!function () {
	  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
	  return descriptor && !descriptor.writable;
	}();

	// `String.prototype.startsWith` method
	// https://tc39.es/ecma262/#sec-string.prototype.startswith
	_export({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
	  startsWith: function startsWith(searchString /* , position = 0 */) {
	    var that = toString_1(requireObjectCoercible(this));
	    notARegexp(searchString);
	    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
	    var search = toString_1(searchString);
	    return un$StartsWith
	      ? un$StartsWith(that, search, index)
	      : stringSlice(that, index, index + search.length) === search;
	  }
	});

	var PROPER_FUNCTION_NAME = functionName.PROPER;



	var non = '\u200B\u0085\u180E';

	// check that a method works with the correct list
	// of whitespaces and has a correct name
	var stringTrimForced = function (METHOD_NAME) {
	  return fails(function () {
	    return !!whitespaces[METHOD_NAME]()
	      || non[METHOD_NAME]() !== non
	      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);
	  });
	};

	var $trim = stringTrim.trim;


	// `String.prototype.trim` method
	// https://tc39.es/ecma262/#sec-string.prototype.trim
	_export({ target: 'String', proto: true, forced: stringTrimForced('trim') }, {
	  trim: function trim() {
	    return $trim(this);
	  }
	});

	var $trimEnd = stringTrim.end;


	var FORCED$3 = stringTrimForced('trimEnd');

	var trimEnd$1 = FORCED$3 ? function trimEnd() {
	  return $trimEnd(this);
	// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
	} : ''.trimEnd;

	// `String.prototype.{ trimEnd, trimRight }` methods
	// https://tc39.es/ecma262/#sec-string.prototype.trimend
	// https://tc39.es/ecma262/#String.prototype.trimright
	_export({ target: 'String', proto: true, name: 'trimEnd', forced: FORCED$3 }, {
	  trimEnd: trimEnd$1,
	  trimRight: trimEnd$1
	});

	var $trimStart = stringTrim.start;


	var FORCED$2 = stringTrimForced('trimStart');

	var trimStart = FORCED$2 ? function trimStart() {
	  return $trimStart(this);
	// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
	} : ''.trimStart;

	// `String.prototype.{ trimStart, trimLeft }` methods
	// https://tc39.es/ecma262/#sec-string.prototype.trimstart
	// https://tc39.es/ecma262/#String.prototype.trimleft
	_export({ target: 'String', proto: true, name: 'trimStart', forced: FORCED$2 }, {
	  trimStart: trimStart,
	  trimLeft: trimStart
	});

	// `URL.prototype.toJSON` method
	// https://url.spec.whatwg.org/#dom-url-tojson
	_export({ target: 'URL', proto: true, enumerable: true }, {
	  toJSON: function toJSON() {
	    return functionCall(URL.prototype.toString, this);
	  }
	});

	var lodash = createCommonjsModule(function (module, exports) {
	(function(){var undefined$1;var VERSION='4.17.21';var LARGE_ARRAY_SIZE=200;var CORE_ERROR_TEXT='Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',FUNC_ERROR_TEXT='Expected a function',INVALID_TEMPL_VAR_ERROR_TEXT='Invalid `variable` option passed into `_.template`';var HASH_UNDEFINED='__lodash_hash_undefined__';var MAX_MEMOIZE_SIZE=500;var PLACEHOLDER='__lodash_placeholder__';var CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4;var COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;var WRAP_BIND_FLAG=1,WRAP_BIND_KEY_FLAG=2,WRAP_CURRY_BOUND_FLAG=4,WRAP_CURRY_FLAG=8,WRAP_CURRY_RIGHT_FLAG=16,WRAP_PARTIAL_FLAG=32,WRAP_PARTIAL_RIGHT_FLAG=64,WRAP_ARY_FLAG=128,WRAP_REARG_FLAG=256,WRAP_FLIP_FLAG=512;var DEFAULT_TRUNC_LENGTH=30,DEFAULT_TRUNC_OMISSION='...';var HOT_COUNT=800,HOT_SPAN=16;var LAZY_FILTER_FLAG=1,LAZY_MAP_FLAG=2,LAZY_WHILE_FLAG=3;var INFINITY=1/0,MAX_SAFE_INTEGER=9007199254740991,MAX_INTEGER=1.7976931348623157e+308,NAN=0/0;var MAX_ARRAY_LENGTH=4294967295,MAX_ARRAY_INDEX=MAX_ARRAY_LENGTH-1,HALF_MAX_ARRAY_LENGTH=MAX_ARRAY_LENGTH>>>1;var wrapFlags=[['ary',WRAP_ARY_FLAG],['bind',WRAP_BIND_FLAG],['bindKey',WRAP_BIND_KEY_FLAG],['curry',WRAP_CURRY_FLAG],['curryRight',WRAP_CURRY_RIGHT_FLAG],['flip',WRAP_FLIP_FLAG],['partial',WRAP_PARTIAL_FLAG],['partialRight',WRAP_PARTIAL_RIGHT_FLAG],['rearg',WRAP_REARG_FLAG]];var argsTag='[object Arguments]',arrayTag='[object Array]',asyncTag='[object AsyncFunction]',boolTag='[object Boolean]',dateTag='[object Date]',domExcTag='[object DOMException]',errorTag='[object Error]',funcTag='[object Function]',genTag='[object GeneratorFunction]',mapTag='[object Map]',numberTag='[object Number]',nullTag='[object Null]',objectTag='[object Object]',promiseTag='[object Promise]',proxyTag='[object Proxy]',regexpTag='[object RegExp]',setTag='[object Set]',stringTag='[object String]',symbolTag='[object Symbol]',undefinedTag='[object Undefined]',weakMapTag='[object WeakMap]',weakSetTag='[object WeakSet]';var arrayBufferTag='[object ArrayBuffer]',dataViewTag='[object DataView]',float32Tag='[object Float32Array]',float64Tag='[object Float64Array]',int8Tag='[object Int8Array]',int16Tag='[object Int16Array]',int32Tag='[object Int32Array]',uint8Tag='[object Uint8Array]',uint8ClampedTag='[object Uint8ClampedArray]',uint16Tag='[object Uint16Array]',uint32Tag='[object Uint32Array]';var reEmptyStringLeading=/\b__p \+= '';/g,reEmptyStringMiddle=/\b(__p \+=) '' \+/g,reEmptyStringTrailing=/(__e\(.*?\)|\b__t\)) \+\n'';/g;var reEscapedHtml=/&(?:amp|lt|gt|quot|#39);/g,reUnescapedHtml=/[&<>"']/g,reHasEscapedHtml=RegExp(reEscapedHtml.source),reHasUnescapedHtml=RegExp(reUnescapedHtml.source);var reEscape=/<%-([\s\S]+?)%>/g,reEvaluate=/<%([\s\S]+?)%>/g,reInterpolate=/<%=([\s\S]+?)%>/g;var reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;var reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reHasRegExpChar=RegExp(reRegExpChar.source);var reTrimStart=/^\s+/;var reWhitespace=/\s/;var reWrapComment=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,reWrapDetails=/\{\n\/\* \[wrapped with (.+)\] \*/,reSplitDetails=/,? & /;var reAsciiWord=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;var reForbiddenIdentifierChars=/[()=,{}\[\]\/\s]/;var reEscapeChar=/\\(\\)?/g;var reEsTemplate=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;var reFlags=/\w*$/;var reIsBadHex=/^[-+]0x[0-9a-f]+$/i;var reIsBinary=/^0b[01]+$/i;var reIsHostCtor=/^\[object .+?Constructor\]$/;var reIsOctal=/^0o[0-7]+$/i;var reIsUint=/^(?:0|[1-9]\d*)$/;var reLatin=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;var reNoMatch=/($^)/;var reUnescapedString=/['\n\r\u2028\u2029\\]/g;var rsAstralRange="\\ud800-\\udfff",rsComboMarksRange="\\u0300-\\u036f",reComboHalfMarksRange="\\ufe20-\\ufe2f",rsComboSymbolsRange="\\u20d0-\\u20ff",rsComboRange=rsComboMarksRange+reComboHalfMarksRange+rsComboSymbolsRange,rsDingbatRange="\\u2700-\\u27bf",rsLowerRange='a-z\\xdf-\\xf6\\xf8-\\xff',rsMathOpRange='\\xac\\xb1\\xd7\\xf7',rsNonCharRange='\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',rsPunctuationRange="\\u2000-\\u206f",rsSpaceRange=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",rsUpperRange='A-Z\\xc0-\\xd6\\xd8-\\xde',rsVarRange="\\ufe0e\\ufe0f",rsBreakRange=rsMathOpRange+rsNonCharRange+rsPunctuationRange+rsSpaceRange;var rsApos="['\u2019]",rsAstral='['+rsAstralRange+']',rsBreak='['+rsBreakRange+']',rsCombo='['+rsComboRange+']',rsDigits='\\d+',rsDingbat='['+rsDingbatRange+']',rsLower='['+rsLowerRange+']',rsMisc='[^'+rsAstralRange+rsBreakRange+rsDigits+rsDingbatRange+rsLowerRange+rsUpperRange+']',rsFitz="\\ud83c[\\udffb-\\udfff]",rsModifier='(?:'+rsCombo+'|'+rsFitz+')',rsNonAstral='[^'+rsAstralRange+']',rsRegional="(?:\\ud83c[\\udde6-\\uddff]){2}",rsSurrPair="[\\ud800-\\udbff][\\udc00-\\udfff]",rsUpper='['+rsUpperRange+']',rsZWJ="\\u200d";var rsMiscLower='(?:'+rsLower+'|'+rsMisc+')',rsMiscUpper='(?:'+rsUpper+'|'+rsMisc+')',rsOptContrLower='(?:'+rsApos+'(?:d|ll|m|re|s|t|ve))?',rsOptContrUpper='(?:'+rsApos+'(?:D|LL|M|RE|S|T|VE))?',reOptMod=rsModifier+'?',rsOptVar='['+rsVarRange+']?',rsOptJoin='(?:'+rsZWJ+'(?:'+[rsNonAstral,rsRegional,rsSurrPair].join('|')+')'+rsOptVar+reOptMod+')*',rsOrdLower='\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',rsOrdUpper='\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',rsSeq=rsOptVar+reOptMod+rsOptJoin,rsEmoji='(?:'+[rsDingbat,rsRegional,rsSurrPair].join('|')+')'+rsSeq,rsSymbol='(?:'+[rsNonAstral+rsCombo+'?',rsCombo,rsRegional,rsSurrPair,rsAstral].join('|')+')';var reApos=RegExp(rsApos,'g');var reComboMark=RegExp(rsCombo,'g');var reUnicode=RegExp(rsFitz+'(?='+rsFitz+')|'+rsSymbol+rsSeq,'g');var reUnicodeWord=RegExp([rsUpper+'?'+rsLower+'+'+rsOptContrLower+'(?='+[rsBreak,rsUpper,'$'].join('|')+')',rsMiscUpper+'+'+rsOptContrUpper+'(?='+[rsBreak,rsUpper+rsMiscLower,'$'].join('|')+')',rsUpper+'?'+rsMiscLower+'+'+rsOptContrLower,rsUpper+'+'+rsOptContrUpper,rsOrdUpper,rsOrdLower,rsDigits,rsEmoji].join('|'),'g');var reHasUnicode=RegExp('['+rsZWJ+rsAstralRange+rsComboRange+rsVarRange+']');var reHasUnicodeWord=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;var contextProps=['Array','Buffer','DataView','Date','Error','Float32Array','Float64Array','Function','Int8Array','Int16Array','Int32Array','Map','Math','Object','Promise','RegExp','Set','String','Symbol','TypeError','Uint8Array','Uint8ClampedArray','Uint16Array','Uint32Array','WeakMap','_','clearTimeout','isFinite','parseInt','setTimeout'];var templateCounter=-1;var typedArrayTags={};typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=true;typedArrayTags[argsTag]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=false;var cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[dataViewTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=true;cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=false;var deburredLetters={'\xc0':'A','\xc1':'A','\xc2':'A','\xc3':'A','\xc4':'A','\xc5':'A','\xe0':'a','\xe1':'a','\xe2':'a','\xe3':'a','\xe4':'a','\xe5':'a','\xc7':'C','\xe7':'c','\xd0':'D','\xf0':'d','\xc8':'E','\xc9':'E','\xca':'E','\xcb':'E','\xe8':'e','\xe9':'e','\xea':'e','\xeb':'e','\xcc':'I','\xcd':'I','\xce':'I','\xcf':'I','\xec':'i','\xed':'i','\xee':'i','\xef':'i','\xd1':'N','\xf1':'n','\xd2':'O','\xd3':'O','\xd4':'O','\xd5':'O','\xd6':'O','\xd8':'O','\xf2':'o','\xf3':'o','\xf4':'o','\xf5':'o','\xf6':'o','\xf8':'o','\xd9':'U','\xda':'U','\xdb':'U','\xdc':'U','\xf9':'u','\xfa':'u','\xfb':'u','\xfc':'u','\xdd':'Y','\xfd':'y','\xff':'y','\xc6':'Ae','\xe6':'ae','\xde':'Th','\xfe':'th','\xdf':'ss',"\u0100":'A',"\u0102":'A',"\u0104":'A',"\u0101":'a',"\u0103":'a',"\u0105":'a',"\u0106":'C',"\u0108":'C',"\u010A":'C',"\u010C":'C',"\u0107":'c',"\u0109":'c',"\u010B":'c',"\u010D":'c',"\u010E":'D',"\u0110":'D',"\u010F":'d',"\u0111":'d',"\u0112":'E',"\u0114":'E',"\u0116":'E',"\u0118":'E',"\u011A":'E',"\u0113":'e',"\u0115":'e',"\u0117":'e',"\u0119":'e',"\u011B":'e',"\u011C":'G',"\u011E":'G',"\u0120":'G',"\u0122":'G',"\u011D":'g',"\u011F":'g',"\u0121":'g',"\u0123":'g',"\u0124":'H',"\u0126":'H',"\u0125":'h',"\u0127":'h',"\u0128":'I',"\u012A":'I',"\u012C":'I',"\u012E":'I',"\u0130":'I',"\u0129":'i',"\u012B":'i',"\u012D":'i',"\u012F":'i',"\u0131":'i',"\u0134":'J',"\u0135":'j',"\u0136":'K',"\u0137":'k',"\u0138":'k',"\u0139":'L',"\u013B":'L',"\u013D":'L',"\u013F":'L',"\u0141":'L',"\u013A":'l',"\u013C":'l',"\u013E":'l',"\u0140":'l',"\u0142":'l',"\u0143":'N',"\u0145":'N',"\u0147":'N',"\u014A":'N',"\u0144":'n',"\u0146":'n',"\u0148":'n',"\u014B":'n',"\u014C":'O',"\u014E":'O',"\u0150":'O',"\u014D":'o',"\u014F":'o',"\u0151":'o',"\u0154":'R',"\u0156":'R',"\u0158":'R',"\u0155":'r',"\u0157":'r',"\u0159":'r',"\u015A":'S',"\u015C":'S',"\u015E":'S',"\u0160":'S',"\u015B":'s',"\u015D":'s',"\u015F":'s',"\u0161":'s',"\u0162":'T',"\u0164":'T',"\u0166":'T',"\u0163":'t',"\u0165":'t',"\u0167":'t',"\u0168":'U',"\u016A":'U',"\u016C":'U',"\u016E":'U',"\u0170":'U',"\u0172":'U',"\u0169":'u',"\u016B":'u',"\u016D":'u',"\u016F":'u',"\u0171":'u',"\u0173":'u',"\u0174":'W',"\u0175":'w',"\u0176":'Y',"\u0177":'y',"\u0178":'Y',"\u0179":'Z',"\u017B":'Z',"\u017D":'Z',"\u017A":'z',"\u017C":'z',"\u017E":'z',"\u0132":'IJ',"\u0133":'ij',"\u0152":'Oe',"\u0153":'oe',"\u0149":"'n","\u017F":'s'};var htmlEscapes={'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'};var htmlUnescapes={'&amp;':'&','&lt;':'<','&gt;':'>','&quot;':'"','&#39;':"'"};var stringEscapes={'\\':'\\',"'":"'",'\n':'n','\r':'r',"\u2028":'u2028',"\u2029":'u2029'};var freeParseFloat=parseFloat,freeParseInt=parseInt;var freeGlobal=(typeof commonjsGlobal==="undefined"?"undefined":_typeof_1(commonjsGlobal))=='object'&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal;var freeSelf=(typeof self==="undefined"?"undefined":_typeof_1(self))=='object'&&self&&self.Object===Object&&self;var root=freeGlobal||freeSelf||Function('return this')();var freeExports=(_typeof_1(exports))=='object'&&exports&&!exports.nodeType&&exports;var freeModule=freeExports&&(_typeof_1(module))=='object'&&module&&!module.nodeType&&module;var moduleExports=freeModule&&freeModule.exports===freeExports;var freeProcess=moduleExports&&freeGlobal.process;var nodeUtil=function(){try{var types=freeModule&&freeModule.require&&freeModule.require('util').types;if(types){return types;}return freeProcess&&freeProcess.binding&&freeProcess.binding('util');}catch(e){}}();var nodeIsArrayBuffer=nodeUtil&&nodeUtil.isArrayBuffer,nodeIsDate=nodeUtil&&nodeUtil.isDate,nodeIsMap=nodeUtil&&nodeUtil.isMap,nodeIsRegExp=nodeUtil&&nodeUtil.isRegExp,nodeIsSet=nodeUtil&&nodeUtil.isSet,nodeIsTypedArray=nodeUtil&&nodeUtil.isTypedArray;function apply(func,thisArg,args){switch(args.length){case 0:return func.call(thisArg);case 1:return func.call(thisArg,args[0]);case 2:return func.call(thisArg,args[0],args[1]);case 3:return func.call(thisArg,args[0],args[1],args[2]);}return func.apply(thisArg,args);}function arrayAggregator(array,setter,iteratee,accumulator){var index=-1,length=array==null?0:array.length;while(++index<length){var value=array[index];setter(accumulator,value,iteratee(value),array);}return accumulator;}function arrayEach(array,iteratee){var index=-1,length=array==null?0:array.length;while(++index<length){if(iteratee(array[index],index,array)===false){break;}}return array;}function arrayEachRight(array,iteratee){var length=array==null?0:array.length;while(length--){if(iteratee(array[length],length,array)===false){break;}}return array;}function arrayEvery(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(!predicate(array[index],index,array)){return false;}}return true;}function arrayFilter(array,predicate){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(predicate(value,index,array)){result[resIndex++]=value;}}return result;}function arrayIncludes(array,value){var length=array==null?0:array.length;return !!length&&baseIndexOf(array,value,0)>-1;}function arrayIncludesWith(array,value,comparator){var index=-1,length=array==null?0:array.length;while(++index<length){if(comparator(value,array[index])){return true;}}return false;}function arrayMap(array,iteratee){var index=-1,length=array==null?0:array.length,result=Array(length);while(++index<length){result[index]=iteratee(array[index],index,array);}return result;}function arrayPush(array,values){var index=-1,length=values.length,offset=array.length;while(++index<length){array[offset+index]=values[index];}return array;}function arrayReduce(array,iteratee,accumulator,initAccum){var index=-1,length=array==null?0:array.length;if(initAccum&&length){accumulator=array[++index];}while(++index<length){accumulator=iteratee(accumulator,array[index],index,array);}return accumulator;}function arrayReduceRight(array,iteratee,accumulator,initAccum){var length=array==null?0:array.length;if(initAccum&&length){accumulator=array[--length];}while(length--){accumulator=iteratee(accumulator,array[length],length,array);}return accumulator;}function arraySome(array,predicate){var index=-1,length=array==null?0:array.length;while(++index<length){if(predicate(array[index],index,array)){return true;}}return false;}var asciiSize=baseProperty('length');function asciiToArray(string){return string.split('');}function asciiWords(string){return string.match(reAsciiWord)||[];}function baseFindKey(collection,predicate,eachFunc){var result;eachFunc(collection,function(value,key,collection){if(predicate(value,key,collection)){result=key;return false;}});return result;}function baseFindIndex(array,predicate,fromIndex,fromRight){var length=array.length,index=fromIndex+(fromRight?1:-1);while(fromRight?index--:++index<length){if(predicate(array[index],index,array)){return index;}}return -1;}function baseIndexOf(array,value,fromIndex){return value===value?strictIndexOf(array,value,fromIndex):baseFindIndex(array,baseIsNaN,fromIndex);}function baseIndexOfWith(array,value,fromIndex,comparator){var index=fromIndex-1,length=array.length;while(++index<length){if(comparator(array[index],value)){return index;}}return -1;}function baseIsNaN(value){return value!==value;}function baseMean(array,iteratee){var length=array==null?0:array.length;return length?baseSum(array,iteratee)/length:NAN;}function baseProperty(key){return function(object){return object==null?undefined$1:object[key];};}function basePropertyOf(object){return function(key){return object==null?undefined$1:object[key];};}function baseReduce(collection,iteratee,accumulator,initAccum,eachFunc){eachFunc(collection,function(value,index,collection){accumulator=initAccum?(initAccum=false,value):iteratee(accumulator,value,index,collection);});return accumulator;}function baseSortBy(array,comparer){var length=array.length;array.sort(comparer);while(length--){array[length]=array[length].value;}return array;}function baseSum(array,iteratee){var result,index=-1,length=array.length;while(++index<length){var current=iteratee(array[index]);if(current!==undefined$1){result=result===undefined$1?current:result+current;}}return result;}function baseTimes(n,iteratee){var index=-1,result=Array(n);while(++index<n){result[index]=iteratee(index);}return result;}function baseToPairs(object,props){return arrayMap(props,function(key){return [key,object[key]];});}function baseTrim(string){return string?string.slice(0,trimmedEndIndex(string)+1).replace(reTrimStart,''):string;}function baseUnary(func){return function(value){return func(value);};}function baseValues(object,props){return arrayMap(props,function(key){return object[key];});}function cacheHas(cache,key){return cache.has(key);}function charsStartIndex(strSymbols,chrSymbols){var index=-1,length=strSymbols.length;while(++index<length&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}function charsEndIndex(strSymbols,chrSymbols){var index=strSymbols.length;while(index--&&baseIndexOf(chrSymbols,strSymbols[index],0)>-1){}return index;}function countHolders(array,placeholder){var length=array.length,result=0;while(length--){if(array[length]===placeholder){++result;}}return result;}var deburrLetter=basePropertyOf(deburredLetters);var escapeHtmlChar=basePropertyOf(htmlEscapes);function escapeStringChar(chr){return '\\'+stringEscapes[chr];}function getValue(object,key){return object==null?undefined$1:object[key];}function hasUnicode(string){return reHasUnicode.test(string);}function hasUnicodeWord(string){return reHasUnicodeWord.test(string);}function iteratorToArray(iterator){var data,result=[];while(!(data=iterator.next()).done){result.push(data.value);}return result;}function mapToArray(map){var index=-1,result=Array(map.size);map.forEach(function(value,key){result[++index]=[key,value];});return result;}function overArg(func,transform){return function(arg){return func(transform(arg));};}function replaceHolders(array,placeholder){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value===placeholder||value===PLACEHOLDER){array[index]=PLACEHOLDER;result[resIndex++]=index;}}return result;}function setToArray(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=value;});return result;}function setToPairs(set){var index=-1,result=Array(set.size);set.forEach(function(value){result[++index]=[value,value];});return result;}function strictIndexOf(array,value,fromIndex){var index=fromIndex-1,length=array.length;while(++index<length){if(array[index]===value){return index;}}return -1;}function strictLastIndexOf(array,value,fromIndex){var index=fromIndex+1;while(index--){if(array[index]===value){return index;}}return index;}function stringSize(string){return hasUnicode(string)?unicodeSize(string):asciiSize(string);}function stringToArray(string){return hasUnicode(string)?unicodeToArray(string):asciiToArray(string);}function trimmedEndIndex(string){var index=string.length;while(index--&&reWhitespace.test(string.charAt(index))){}return index;}var unescapeHtmlChar=basePropertyOf(htmlUnescapes);function unicodeSize(string){var result=reUnicode.lastIndex=0;while(reUnicode.test(string)){++result;}return result;}function unicodeToArray(string){return string.match(reUnicode)||[];}function unicodeWords(string){return string.match(reUnicodeWord)||[];}var runInContext=function runInContext(context){context=context==null?root:_.defaults(root.Object(),context,_.pick(root,contextProps));var Array=context.Array,Date=context.Date,Error=context.Error,Function=context.Function,Math=context.Math,Object=context.Object,RegExp=context.RegExp,String=context.String,TypeError=context.TypeError;var arrayProto=Array.prototype,funcProto=Function.prototype,objectProto=Object.prototype;var coreJsData=context['__core-js_shared__'];var funcToString=funcProto.toString;var hasOwnProperty=objectProto.hasOwnProperty;var idCounter=0;var maskSrcKey=function(){var uid=/[^.]+$/.exec(coreJsData&&coreJsData.keys&&coreJsData.keys.IE_PROTO||'');return uid?'Symbol(src)_1.'+uid:'';}();var nativeObjectToString=objectProto.toString;var objectCtorString=funcToString.call(Object);var oldDash=root._;var reIsNative=RegExp('^'+funcToString.call(hasOwnProperty).replace(reRegExpChar,'\\$&').replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,'$1.*?')+'$');var Buffer=moduleExports?context.Buffer:undefined$1,_Symbol=context.Symbol,Uint8Array=context.Uint8Array,allocUnsafe=Buffer?Buffer.allocUnsafe:undefined$1,getPrototype=overArg(Object.getPrototypeOf,Object),objectCreate=Object.create,propertyIsEnumerable=objectProto.propertyIsEnumerable,splice=arrayProto.splice,spreadableSymbol=_Symbol?_Symbol.isConcatSpreadable:undefined$1,symIterator=_Symbol?_Symbol.iterator:undefined$1,symToStringTag=_Symbol?_Symbol.toStringTag:undefined$1;var defineProperty=function(){try{var func=getNative(Object,'defineProperty');func({},'',{});return func;}catch(e){}}();var ctxClearTimeout=context.clearTimeout!==root.clearTimeout&&context.clearTimeout,ctxNow=Date&&Date.now!==root.Date.now&&Date.now,ctxSetTimeout=context.setTimeout!==root.setTimeout&&context.setTimeout;var nativeCeil=Math.ceil,nativeFloor=Math.floor,nativeGetSymbols=Object.getOwnPropertySymbols,nativeIsBuffer=Buffer?Buffer.isBuffer:undefined$1,nativeIsFinite=context.isFinite,nativeJoin=arrayProto.join,nativeKeys=overArg(Object.keys,Object),nativeMax=Math.max,nativeMin=Math.min,nativeNow=Date.now,nativeParseInt=context.parseInt,nativeRandom=Math.random,nativeReverse=arrayProto.reverse;var DataView=getNative(context,'DataView'),Map=getNative(context,'Map'),Promise=getNative(context,'Promise'),Set=getNative(context,'Set'),WeakMap=getNative(context,'WeakMap'),nativeCreate=getNative(Object,'create');var metaMap=WeakMap&&new WeakMap();var realNames={};var dataViewCtorString=toSource(DataView),mapCtorString=toSource(Map),promiseCtorString=toSource(Promise),setCtorString=toSource(Set),weakMapCtorString=toSource(WeakMap);var symbolProto=_Symbol?_Symbol.prototype:undefined$1,symbolValueOf=symbolProto?symbolProto.valueOf:undefined$1,symbolToString=symbolProto?symbolProto.toString:undefined$1;function lodash(value){if(isObjectLike(value)&&!isArray(value)&&!(value instanceof LazyWrapper)){if(value instanceof LodashWrapper){return value;}if(hasOwnProperty.call(value,'__wrapped__')){return wrapperClone(value);}}return new LodashWrapper(value);}var baseCreate=function(){function object(){}return function(proto){if(!isObject(proto)){return {};}if(objectCreate){return objectCreate(proto);}object.prototype=proto;var result=new object();object.prototype=undefined$1;return result;};}();function baseLodash(){}function LodashWrapper(value,chainAll){this.__wrapped__=value;this.__actions__=[];this.__chain__=!!chainAll;this.__index__=0;this.__values__=undefined$1;}lodash.templateSettings={'escape':reEscape,'evaluate':reEvaluate,'interpolate':reInterpolate,'variable':'','imports':{'_':lodash}};lodash.prototype=baseLodash.prototype;lodash.prototype.constructor=lodash;LodashWrapper.prototype=baseCreate(baseLodash.prototype);LodashWrapper.prototype.constructor=LodashWrapper;function LazyWrapper(value){this.__wrapped__=value;this.__actions__=[];this.__dir__=1;this.__filtered__=false;this.__iteratees__=[];this.__takeCount__=MAX_ARRAY_LENGTH;this.__views__=[];}function lazyClone(){var result=new LazyWrapper(this.__wrapped__);result.__actions__=copyArray(this.__actions__);result.__dir__=this.__dir__;result.__filtered__=this.__filtered__;result.__iteratees__=copyArray(this.__iteratees__);result.__takeCount__=this.__takeCount__;result.__views__=copyArray(this.__views__);return result;}function lazyReverse(){if(this.__filtered__){var result=new LazyWrapper(this);result.__dir__=-1;result.__filtered__=true;}else {result=this.clone();result.__dir__*=-1;}return result;}function lazyValue(){var array=this.__wrapped__.value(),dir=this.__dir__,isArr=isArray(array),isRight=dir<0,arrLength=isArr?array.length:0,view=getView(0,arrLength,this.__views__),start=view.start,end=view.end,length=end-start,index=isRight?end:start-1,iteratees=this.__iteratees__,iterLength=iteratees.length,resIndex=0,takeCount=nativeMin(length,this.__takeCount__);if(!isArr||!isRight&&arrLength==length&&takeCount==length){return baseWrapperValue(array,this.__actions__);}var result=[];outer:while(length--&&resIndex<takeCount){index+=dir;var iterIndex=-1,value=array[index];while(++iterIndex<iterLength){var data=iteratees[iterIndex],iteratee=data.iteratee,type=data.type,computed=iteratee(value);if(type==LAZY_MAP_FLAG){value=computed;}else if(!computed){if(type==LAZY_FILTER_FLAG){continue outer;}else {break outer;}}}result[resIndex++]=value;}return result;}LazyWrapper.prototype=baseCreate(baseLodash.prototype);LazyWrapper.prototype.constructor=LazyWrapper;function Hash(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}function hashClear(){this.__data__=nativeCreate?nativeCreate(null):{};this.size=0;}function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];this.size-=result?1:0;return result;}function hashGet(key){var data=this.__data__;if(nativeCreate){var result=data[key];return result===HASH_UNDEFINED?undefined$1:result;}return hasOwnProperty.call(data,key)?data[key]:undefined$1;}function hashHas(key){var data=this.__data__;return nativeCreate?data[key]!==undefined$1:hasOwnProperty.call(data,key);}function hashSet(key,value){var data=this.__data__;this.size+=this.has(key)?0:1;data[key]=nativeCreate&&value===undefined$1?HASH_UNDEFINED:value;return this;}Hash.prototype.clear=hashClear;Hash.prototype['delete']=hashDelete;Hash.prototype.get=hashGet;Hash.prototype.has=hashHas;Hash.prototype.set=hashSet;function ListCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}function listCacheClear(){this.__data__=[];this.size=0;}function listCacheDelete(key){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){return false;}var lastIndex=data.length-1;if(index==lastIndex){data.pop();}else {splice.call(data,index,1);}--this.size;return true;}function listCacheGet(key){var data=this.__data__,index=assocIndexOf(data,key);return index<0?undefined$1:data[index][1];}function listCacheHas(key){return assocIndexOf(this.__data__,key)>-1;}function listCacheSet(key,value){var data=this.__data__,index=assocIndexOf(data,key);if(index<0){++this.size;data.push([key,value]);}else {data[index][1]=value;}return this;}ListCache.prototype.clear=listCacheClear;ListCache.prototype['delete']=listCacheDelete;ListCache.prototype.get=listCacheGet;ListCache.prototype.has=listCacheHas;ListCache.prototype.set=listCacheSet;function MapCache(entries){var index=-1,length=entries==null?0:entries.length;this.clear();while(++index<length){var entry=entries[index];this.set(entry[0],entry[1]);}}function mapCacheClear(){this.size=0;this.__data__={'hash':new Hash(),'map':new(Map||ListCache)(),'string':new Hash()};}function mapCacheDelete(key){var result=getMapData(this,key)['delete'](key);this.size-=result?1:0;return result;}function mapCacheGet(key){return getMapData(this,key).get(key);}function mapCacheHas(key){return getMapData(this,key).has(key);}function mapCacheSet(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this;}MapCache.prototype.clear=mapCacheClear;MapCache.prototype['delete']=mapCacheDelete;MapCache.prototype.get=mapCacheGet;MapCache.prototype.has=mapCacheHas;MapCache.prototype.set=mapCacheSet;function SetCache(values){var index=-1,length=values==null?0:values.length;this.__data__=new MapCache();while(++index<length){this.add(values[index]);}}function setCacheAdd(value){this.__data__.set(value,HASH_UNDEFINED);return this;}function setCacheHas(value){return this.__data__.has(value);}SetCache.prototype.add=SetCache.prototype.push=setCacheAdd;SetCache.prototype.has=setCacheHas;function Stack(entries){var data=this.__data__=new ListCache(entries);this.size=data.size;}function stackClear(){this.__data__=new ListCache();this.size=0;}function stackDelete(key){var data=this.__data__,result=data['delete'](key);this.size=data.size;return result;}function stackGet(key){return this.__data__.get(key);}function stackHas(key){return this.__data__.has(key);}function stackSet(key,value){var data=this.__data__;if(data instanceof ListCache){var pairs=data.__data__;if(!Map||pairs.length<LARGE_ARRAY_SIZE-1){pairs.push([key,value]);this.size=++data.size;return this;}data=this.__data__=new MapCache(pairs);}data.set(key,value);this.size=data.size;return this;}Stack.prototype.clear=stackClear;Stack.prototype['delete']=stackDelete;Stack.prototype.get=stackGet;Stack.prototype.has=stackHas;Stack.prototype.set=stackSet;function arrayLikeKeys(value,inherited){var isArr=isArray(value),isArg=!isArr&&isArguments(value),isBuff=!isArr&&!isArg&&isBuffer(value),isType=!isArr&&!isArg&&!isBuff&&isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?baseTimes(value.length,String):[],length=result.length;for(var key in value){if((inherited||hasOwnProperty.call(value,key))&&!(skipIndexes&&(key=='length'||isBuff&&(key=='offset'||key=='parent')||isType&&(key=='buffer'||key=='byteLength'||key=='byteOffset')||isIndex(key,length)))){result.push(key);}}return result;}function arraySample(array){var length=array.length;return length?array[baseRandom(0,length-1)]:undefined$1;}function arraySampleSize(array,n){return shuffleSelf(copyArray(array),baseClamp(n,0,array.length));}function arrayShuffle(array){return shuffleSelf(copyArray(array));}function assignMergeValue(object,key,value){if(value!==undefined$1&&!eq(object[key],value)||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}function assignValue(object,key,value){var objValue=object[key];if(!(hasOwnProperty.call(object,key)&&eq(objValue,value))||value===undefined$1&&!(key in object)){baseAssignValue(object,key,value);}}function assocIndexOf(array,key){var length=array.length;while(length--){if(eq(array[length][0],key)){return length;}}return -1;}function baseAggregator(collection,setter,iteratee,accumulator){baseEach(collection,function(value,key,collection){setter(accumulator,value,iteratee(value),collection);});return accumulator;}function baseAssign(object,source){return object&&copyObject(source,keys(source),object);}function baseAssignIn(object,source){return object&&copyObject(source,keysIn(source),object);}function baseAssignValue(object,key,value){if(key=='__proto__'&&defineProperty){defineProperty(object,key,{'configurable':true,'enumerable':true,'value':value,'writable':true});}else {object[key]=value;}}function baseAt(object,paths){var index=-1,length=paths.length,result=Array(length),skip=object==null;while(++index<length){result[index]=skip?undefined$1:get(object,paths[index]);}return result;}function baseClamp(number,lower,upper){if(number===number){if(upper!==undefined$1){number=number<=upper?number:upper;}if(lower!==undefined$1){number=number>=lower?number:lower;}}return number;}function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=bitmask&CLONE_DEEP_FLAG,isFlat=bitmask&CLONE_FLAT_FLAG,isFull=bitmask&CLONE_SYMBOLS_FLAG;if(customizer){result=object?customizer(value,key,object,stack):customizer(value);}if(result!==undefined$1){return result;}if(!isObject(value)){return value;}var isArr=isArray(value);if(isArr){result=initCloneArray(value);if(!isDeep){return copyArray(value,result);}}else {var tag=getTag(value),isFunc=tag==funcTag||tag==genTag;if(isBuffer(value)){return cloneBuffer(value,isDeep);}if(tag==objectTag||tag==argsTag||isFunc&&!object){result=isFlat||isFunc?{}:initCloneObject(value);if(!isDeep){return isFlat?copySymbolsIn(value,baseAssignIn(result,value)):copySymbols(value,baseAssign(result,value));}}else {if(!cloneableTags[tag]){return object?value:{};}result=initCloneByTag(value,tag,isDeep);}}stack||(stack=new Stack());var stacked=stack.get(value);if(stacked){return stacked;}stack.set(value,result);if(isSet(value)){value.forEach(function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack));});}else if(isMap(value)){value.forEach(function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack));});}var keysFunc=isFull?isFlat?getAllKeysIn:getAllKeys:isFlat?keysIn:keys;var props=isArr?undefined$1:keysFunc(value);arrayEach(props||value,function(subValue,key){if(props){key=subValue;subValue=value[key];}assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack));});return result;}function baseConforms(source){var props=keys(source);return function(object){return baseConformsTo(object,source,props);};}function baseConformsTo(object,source,props){var length=props.length;if(object==null){return !length;}object=Object(object);while(length--){var key=props[length],predicate=source[key],value=object[key];if(value===undefined$1&&!(key in object)||!predicate(value)){return false;}}return true;}function baseDelay(func,wait,args){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return setTimeout(function(){func.apply(undefined$1,args);},wait);}function baseDifference(array,values,iteratee,comparator){var index=-1,includes=arrayIncludes,isCommon=true,length=array.length,result=[],valuesLength=values.length;if(!length){return result;}if(iteratee){values=arrayMap(values,baseUnary(iteratee));}if(comparator){includes=arrayIncludesWith;isCommon=false;}else if(values.length>=LARGE_ARRAY_SIZE){includes=cacheHas;isCommon=false;values=new SetCache(values);}outer:while(++index<length){var value=array[index],computed=iteratee==null?value:iteratee(value);value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var valuesIndex=valuesLength;while(valuesIndex--){if(values[valuesIndex]===computed){continue outer;}}result.push(value);}else if(!includes(values,computed,comparator)){result.push(value);}}return result;}var baseEach=createBaseEach(baseForOwn);var baseEachRight=createBaseEach(baseForOwnRight,true);function baseEvery(collection,predicate){var result=true;baseEach(collection,function(value,index,collection){result=!!predicate(value,index,collection);return result;});return result;}function baseExtremum(array,iteratee,comparator){var index=-1,length=array.length;while(++index<length){var value=array[index],current=iteratee(value);if(current!=null&&(computed===undefined$1?current===current&&!isSymbol(current):comparator(current,computed))){var computed=current,result=value;}}return result;}function baseFill(array,value,start,end){var length=array.length;start=toInteger(start);if(start<0){start=-start>length?0:length+start;}end=end===undefined$1||end>length?length:toInteger(end);if(end<0){end+=length;}end=start>end?0:toLength(end);while(start<end){array[start++]=value;}return array;}function baseFilter(collection,predicate){var result=[];baseEach(collection,function(value,index,collection){if(predicate(value,index,collection)){result.push(value);}});return result;}function baseFlatten(array,depth,predicate,isStrict,result){var index=-1,length=array.length;predicate||(predicate=isFlattenable);result||(result=[]);while(++index<length){var value=array[index];if(depth>0&&predicate(value)){if(depth>1){baseFlatten(value,depth-1,predicate,isStrict,result);}else {arrayPush(result,value);}}else if(!isStrict){result[result.length]=value;}}return result;}var baseFor=createBaseFor();var baseForRight=createBaseFor(true);function baseForOwn(object,iteratee){return object&&baseFor(object,iteratee,keys);}function baseForOwnRight(object,iteratee){return object&&baseForRight(object,iteratee,keys);}function baseFunctions(object,props){return arrayFilter(props,function(key){return isFunction(object[key]);});}function baseGet(object,path){path=castPath(path,object);var index=0,length=path.length;while(object!=null&&index<length){object=object[toKey(path[index++])];}return index&&index==length?object:undefined$1;}function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return isArray(object)?result:arrayPush(result,symbolsFunc(object));}function baseGetTag(value){if(value==null){return value===undefined$1?undefinedTag:nullTag;}return symToStringTag&&symToStringTag in Object(value)?getRawTag(value):objectToString(value);}function baseGt(value,other){return value>other;}function baseHas(object,key){return object!=null&&hasOwnProperty.call(object,key);}function baseHasIn(object,key){return object!=null&&key in Object(object);}function baseInRange(number,start,end){return number>=nativeMin(start,end)&&number<nativeMax(start,end);}function baseIntersection(arrays,iteratee,comparator){var includes=comparator?arrayIncludesWith:arrayIncludes,length=arrays[0].length,othLength=arrays.length,othIndex=othLength,caches=Array(othLength),maxLength=Infinity,result=[];while(othIndex--){var array=arrays[othIndex];if(othIndex&&iteratee){array=arrayMap(array,baseUnary(iteratee));}maxLength=nativeMin(array.length,maxLength);caches[othIndex]=!comparator&&(iteratee||length>=120&&array.length>=120)?new SetCache(othIndex&&array):undefined$1;}array=arrays[0];var index=-1,seen=caches[0];outer:while(++index<length&&result.length<maxLength){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(!(seen?cacheHas(seen,computed):includes(result,computed,comparator))){othIndex=othLength;while(--othIndex){var cache=caches[othIndex];if(!(cache?cacheHas(cache,computed):includes(arrays[othIndex],computed,comparator))){continue outer;}}if(seen){seen.push(computed);}result.push(value);}}return result;}function baseInverter(object,setter,iteratee,accumulator){baseForOwn(object,function(value,key,object){setter(accumulator,iteratee(value),key,object);});return accumulator;}function baseInvoke(object,path,args){path=castPath(path,object);object=parent(object,path);var func=object==null?object:object[toKey(last(path))];return func==null?undefined$1:apply(func,object,args);}function baseIsArguments(value){return isObjectLike(value)&&baseGetTag(value)==argsTag;}function baseIsArrayBuffer(value){return isObjectLike(value)&&baseGetTag(value)==arrayBufferTag;}function baseIsDate(value){return isObjectLike(value)&&baseGetTag(value)==dateTag;}function baseIsEqual(value,other,bitmask,customizer,stack){if(value===other){return true;}if(value==null||other==null||!isObjectLike(value)&&!isObjectLike(other)){return value!==value&&other!==other;}return baseIsEqualDeep(value,other,bitmask,customizer,baseIsEqual,stack);}function baseIsEqualDeep(object,other,bitmask,customizer,equalFunc,stack){var objIsArr=isArray(object),othIsArr=isArray(other),objTag=objIsArr?arrayTag:getTag(object),othTag=othIsArr?arrayTag:getTag(other);objTag=objTag==argsTag?objectTag:objTag;othTag=othTag==argsTag?objectTag:othTag;var objIsObj=objTag==objectTag,othIsObj=othTag==objectTag,isSameTag=objTag==othTag;if(isSameTag&&isBuffer(object)){if(!isBuffer(other)){return false;}objIsArr=true;objIsObj=false;}if(isSameTag&&!objIsObj){stack||(stack=new Stack());return objIsArr||isTypedArray(object)?equalArrays(object,other,bitmask,customizer,equalFunc,stack):equalByTag(object,other,objTag,bitmask,customizer,equalFunc,stack);}if(!(bitmask&COMPARE_PARTIAL_FLAG)){var objIsWrapped=objIsObj&&hasOwnProperty.call(object,'__wrapped__'),othIsWrapped=othIsObj&&hasOwnProperty.call(other,'__wrapped__');if(objIsWrapped||othIsWrapped){var objUnwrapped=objIsWrapped?object.value():object,othUnwrapped=othIsWrapped?other.value():other;stack||(stack=new Stack());return equalFunc(objUnwrapped,othUnwrapped,bitmask,customizer,stack);}}if(!isSameTag){return false;}stack||(stack=new Stack());return equalObjects(object,other,bitmask,customizer,equalFunc,stack);}function baseIsMap(value){return isObjectLike(value)&&getTag(value)==mapTag;}function baseIsMatch(object,source,matchData,customizer){var index=matchData.length,length=index,noCustomizer=!customizer;if(object==null){return !length;}object=Object(object);while(index--){var data=matchData[index];if(noCustomizer&&data[2]?data[1]!==object[data[0]]:!(data[0]in object)){return false;}}while(++index<length){data=matchData[index];var key=data[0],objValue=object[key],srcValue=data[1];if(noCustomizer&&data[2]){if(objValue===undefined$1&&!(key in object)){return false;}}else {var stack=new Stack();if(customizer){var result=customizer(objValue,srcValue,key,object,source,stack);}if(!(result===undefined$1?baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG,customizer,stack):result)){return false;}}}return true;}function baseIsNative(value){if(!isObject(value)||isMasked(value)){return false;}var pattern=isFunction(value)?reIsNative:reIsHostCtor;return pattern.test(toSource(value));}function baseIsRegExp(value){return isObjectLike(value)&&baseGetTag(value)==regexpTag;}function baseIsSet(value){return isObjectLike(value)&&getTag(value)==setTag;}function baseIsTypedArray(value){return isObjectLike(value)&&isLength(value.length)&&!!typedArrayTags[baseGetTag(value)];}function baseIteratee(value){if(typeof value=='function'){return value;}if(value==null){return identity;}if(_typeof_1(value)=='object'){return isArray(value)?baseMatchesProperty(value[0],value[1]):baseMatches(value);}return property(value);}function baseKeys(object){if(!isPrototype(object)){return nativeKeys(object);}var result=[];for(var key in Object(object)){if(hasOwnProperty.call(object,key)&&key!='constructor'){result.push(key);}}return result;}function baseKeysIn(object){if(!isObject(object)){return nativeKeysIn(object);}var isProto=isPrototype(object),result=[];for(var key in object){if(!(key=='constructor'&&(isProto||!hasOwnProperty.call(object,key)))){result.push(key);}}return result;}function baseLt(value,other){return value<other;}function baseMap(collection,iteratee){var index=-1,result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value,key,collection){result[++index]=iteratee(value,key,collection);});return result;}function baseMatches(source){var matchData=getMatchData(source);if(matchData.length==1&&matchData[0][2]){return matchesStrictComparable(matchData[0][0],matchData[0][1]);}return function(object){return object===source||baseIsMatch(object,source,matchData);};}function baseMatchesProperty(path,srcValue){if(isKey(path)&&isStrictComparable(srcValue)){return matchesStrictComparable(toKey(path),srcValue);}return function(object){var objValue=get(object,path);return objValue===undefined$1&&objValue===srcValue?hasIn(object,path):baseIsEqual(srcValue,objValue,COMPARE_PARTIAL_FLAG|COMPARE_UNORDERED_FLAG);};}function baseMerge(object,source,srcIndex,customizer,stack){if(object===source){return;}baseFor(source,function(srcValue,key){stack||(stack=new Stack());if(isObject(srcValue)){baseMergeDeep(object,source,key,srcIndex,baseMerge,customizer,stack);}else {var newValue=customizer?customizer(safeGet(object,key),srcValue,key+'',object,source,stack):undefined$1;if(newValue===undefined$1){newValue=srcValue;}assignMergeValue(object,key,newValue);}},keysIn);}function baseMergeDeep(object,source,key,srcIndex,mergeFunc,customizer,stack){var objValue=safeGet(object,key),srcValue=safeGet(source,key),stacked=stack.get(srcValue);if(stacked){assignMergeValue(object,key,stacked);return;}var newValue=customizer?customizer(objValue,srcValue,key+'',object,source,stack):undefined$1;var isCommon=newValue===undefined$1;if(isCommon){var isArr=isArray(srcValue),isBuff=!isArr&&isBuffer(srcValue),isTyped=!isArr&&!isBuff&&isTypedArray(srcValue);newValue=srcValue;if(isArr||isBuff||isTyped){if(isArray(objValue)){newValue=objValue;}else if(isArrayLikeObject(objValue)){newValue=copyArray(objValue);}else if(isBuff){isCommon=false;newValue=cloneBuffer(srcValue,true);}else if(isTyped){isCommon=false;newValue=cloneTypedArray(srcValue,true);}else {newValue=[];}}else if(isPlainObject(srcValue)||isArguments(srcValue)){newValue=objValue;if(isArguments(objValue)){newValue=toPlainObject(objValue);}else if(!isObject(objValue)||isFunction(objValue)){newValue=initCloneObject(srcValue);}}else {isCommon=false;}}if(isCommon){stack.set(srcValue,newValue);mergeFunc(newValue,srcValue,srcIndex,customizer,stack);stack['delete'](srcValue);}assignMergeValue(object,key,newValue);}function baseNth(array,n){var length=array.length;if(!length){return;}n+=n<0?length:0;return isIndex(n,length)?array[n]:undefined$1;}function baseOrderBy(collection,iteratees,orders){if(iteratees.length){iteratees=arrayMap(iteratees,function(iteratee){if(isArray(iteratee)){return function(value){return baseGet(value,iteratee.length===1?iteratee[0]:iteratee);};}return iteratee;});}else {iteratees=[identity];}var index=-1;iteratees=arrayMap(iteratees,baseUnary(getIteratee()));var result=baseMap(collection,function(value,key,collection){var criteria=arrayMap(iteratees,function(iteratee){return iteratee(value);});return {'criteria':criteria,'index':++index,'value':value};});return baseSortBy(result,function(object,other){return compareMultiple(object,other,orders);});}function basePick(object,paths){return basePickBy(object,paths,function(value,path){return hasIn(object,path);});}function basePickBy(object,paths,predicate){var index=-1,length=paths.length,result={};while(++index<length){var path=paths[index],value=baseGet(object,path);if(predicate(value,path)){baseSet(result,castPath(path,object),value);}}return result;}function basePropertyDeep(path){return function(object){return baseGet(object,path);};}function basePullAll(array,values,iteratee,comparator){var indexOf=comparator?baseIndexOfWith:baseIndexOf,index=-1,length=values.length,seen=array;if(array===values){values=copyArray(values);}if(iteratee){seen=arrayMap(array,baseUnary(iteratee));}while(++index<length){var fromIndex=0,value=values[index],computed=iteratee?iteratee(value):value;while((fromIndex=indexOf(seen,computed,fromIndex,comparator))>-1){if(seen!==array){splice.call(seen,fromIndex,1);}splice.call(array,fromIndex,1);}}return array;}function basePullAt(array,indexes){var length=array?indexes.length:0,lastIndex=length-1;while(length--){var index=indexes[length];if(length==lastIndex||index!==previous){var previous=index;if(isIndex(index)){splice.call(array,index,1);}else {baseUnset(array,index);}}}return array;}function baseRandom(lower,upper){return lower+nativeFloor(nativeRandom()*(upper-lower+1));}function baseRange(start,end,step,fromRight){var index=-1,length=nativeMax(nativeCeil((end-start)/(step||1)),0),result=Array(length);while(length--){result[fromRight?length:++index]=start;start+=step;}return result;}function baseRepeat(string,n){var result='';if(!string||n<1||n>MAX_SAFE_INTEGER){return result;}do{if(n%2){result+=string;}n=nativeFloor(n/2);if(n){string+=string;}}while(n);return result;}function baseRest(func,start){return setToString(overRest(func,start,identity),func+'');}function baseSample(collection){return arraySample(values(collection));}function baseSampleSize(collection,n){var array=values(collection);return shuffleSelf(array,baseClamp(n,0,array.length));}function baseSet(object,path,value,customizer){if(!isObject(object)){return object;}path=castPath(path,object);var index=-1,length=path.length,lastIndex=length-1,nested=object;while(nested!=null&&++index<length){var key=toKey(path[index]),newValue=value;if(key==='__proto__'||key==='constructor'||key==='prototype'){return object;}if(index!=lastIndex){var objValue=nested[key];newValue=customizer?customizer(objValue,key,nested):undefined$1;if(newValue===undefined$1){newValue=isObject(objValue)?objValue:isIndex(path[index+1])?[]:{};}}assignValue(nested,key,newValue);nested=nested[key];}return object;}var baseSetData=!metaMap?identity:function(func,data){metaMap.set(func,data);return func;};var baseSetToString=!defineProperty?identity:function(func,string){return defineProperty(func,'toString',{'configurable':true,'enumerable':false,'value':constant(string),'writable':true});};function baseShuffle(collection){return shuffleSelf(values(collection));}function baseSlice(array,start,end){var index=-1,length=array.length;if(start<0){start=-start>length?0:length+start;}end=end>length?length:end;if(end<0){end+=length;}length=start>end?0:end-start>>>0;start>>>=0;var result=Array(length);while(++index<length){result[index]=array[index+start];}return result;}function baseSome(collection,predicate){var result;baseEach(collection,function(value,index,collection){result=predicate(value,index,collection);return !result;});return !!result;}function baseSortedIndex(array,value,retHighest){var low=0,high=array==null?low:array.length;if(typeof value=='number'&&value===value&&high<=HALF_MAX_ARRAY_LENGTH){while(low<high){var mid=low+high>>>1,computed=array[mid];if(computed!==null&&!isSymbol(computed)&&(retHighest?computed<=value:computed<value)){low=mid+1;}else {high=mid;}}return high;}return baseSortedIndexBy(array,value,identity,retHighest);}function baseSortedIndexBy(array,value,iteratee,retHighest){var low=0,high=array==null?0:array.length;if(high===0){return 0;}value=iteratee(value);var valIsNaN=value!==value,valIsNull=value===null,valIsSymbol=isSymbol(value),valIsUndefined=value===undefined$1;while(low<high){var mid=nativeFloor((low+high)/2),computed=iteratee(array[mid]),othIsDefined=computed!==undefined$1,othIsNull=computed===null,othIsReflexive=computed===computed,othIsSymbol=isSymbol(computed);if(valIsNaN){var setLow=retHighest||othIsReflexive;}else if(valIsUndefined){setLow=othIsReflexive&&(retHighest||othIsDefined);}else if(valIsNull){setLow=othIsReflexive&&othIsDefined&&(retHighest||!othIsNull);}else if(valIsSymbol){setLow=othIsReflexive&&othIsDefined&&!othIsNull&&(retHighest||!othIsSymbol);}else if(othIsNull||othIsSymbol){setLow=false;}else {setLow=retHighest?computed<=value:computed<value;}if(setLow){low=mid+1;}else {high=mid;}}return nativeMin(high,MAX_ARRAY_INDEX);}function baseSortedUniq(array,iteratee){var index=-1,length=array.length,resIndex=0,result=[];while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;if(!index||!eq(computed,seen)){var seen=computed;result[resIndex++]=value===0?0:value;}}return result;}function baseToNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}return +value;}function baseToString(value){if(typeof value=='string'){return value;}if(isArray(value)){return arrayMap(value,baseToString)+'';}if(isSymbol(value)){return symbolToString?symbolToString.call(value):'';}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}function baseUniq(array,iteratee,comparator){var index=-1,includes=arrayIncludes,length=array.length,isCommon=true,result=[],seen=result;if(comparator){isCommon=false;includes=arrayIncludesWith;}else if(length>=LARGE_ARRAY_SIZE){var set=iteratee?null:createSet(array);if(set){return setToArray(set);}isCommon=false;includes=cacheHas;seen=new SetCache();}else {seen=iteratee?[]:result;}outer:while(++index<length){var value=array[index],computed=iteratee?iteratee(value):value;value=comparator||value!==0?value:0;if(isCommon&&computed===computed){var seenIndex=seen.length;while(seenIndex--){if(seen[seenIndex]===computed){continue outer;}}if(iteratee){seen.push(computed);}result.push(value);}else if(!includes(seen,computed,comparator)){if(seen!==result){seen.push(computed);}result.push(value);}}return result;}function baseUnset(object,path){path=castPath(path,object);object=parent(object,path);return object==null||delete object[toKey(last(path))];}function baseUpdate(object,path,updater,customizer){return baseSet(object,path,updater(baseGet(object,path)),customizer);}function baseWhile(array,predicate,isDrop,fromRight){var length=array.length,index=fromRight?length:-1;while((fromRight?index--:++index<length)&&predicate(array[index],index,array)){}return isDrop?baseSlice(array,fromRight?0:index,fromRight?index+1:length):baseSlice(array,fromRight?index+1:0,fromRight?length:index);}function baseWrapperValue(value,actions){var result=value;if(result instanceof LazyWrapper){result=result.value();}return arrayReduce(actions,function(result,action){return action.func.apply(action.thisArg,arrayPush([result],action.args));},result);}function baseXor(arrays,iteratee,comparator){var length=arrays.length;if(length<2){return length?baseUniq(arrays[0]):[];}var index=-1,result=Array(length);while(++index<length){var array=arrays[index],othIndex=-1;while(++othIndex<length){if(othIndex!=index){result[index]=baseDifference(result[index]||array,arrays[othIndex],iteratee,comparator);}}}return baseUniq(baseFlatten(result,1),iteratee,comparator);}function baseZipObject(props,values,assignFunc){var index=-1,length=props.length,valsLength=values.length,result={};while(++index<length){var value=index<valsLength?values[index]:undefined$1;assignFunc(result,props[index],value);}return result;}function castArrayLikeObject(value){return isArrayLikeObject(value)?value:[];}function castFunction(value){return typeof value=='function'?value:identity;}function castPath(value,object){if(isArray(value)){return value;}return isKey(value,object)?[value]:stringToPath(toString(value));}var castRest=baseRest;function castSlice(array,start,end){var length=array.length;end=end===undefined$1?length:end;return !start&&end>=length?array:baseSlice(array,start,end);}var clearTimeout=ctxClearTimeout||function(id){return root.clearTimeout(id);};function cloneBuffer(buffer,isDeep){if(isDeep){return buffer.slice();}var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);buffer.copy(result);return result;}function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);new Uint8Array(result).set(new Uint8Array(arrayBuffer));return result;}function cloneDataView(dataView,isDeep){var buffer=isDeep?cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength);}function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));result.lastIndex=regexp.lastIndex;return result;}function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{};}function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length);}function compareAscending(value,other){if(value!==other){var valIsDefined=value!==undefined$1,valIsNull=value===null,valIsReflexive=value===value,valIsSymbol=isSymbol(value);var othIsDefined=other!==undefined$1,othIsNull=other===null,othIsReflexive=other===other,othIsSymbol=isSymbol(other);if(!othIsNull&&!othIsSymbol&&!valIsSymbol&&value>other||valIsSymbol&&othIsDefined&&othIsReflexive&&!othIsNull&&!othIsSymbol||valIsNull&&othIsDefined&&othIsReflexive||!valIsDefined&&othIsReflexive||!valIsReflexive){return 1;}if(!valIsNull&&!valIsSymbol&&!othIsSymbol&&value<other||othIsSymbol&&valIsDefined&&valIsReflexive&&!valIsNull&&!valIsSymbol||othIsNull&&valIsDefined&&valIsReflexive||!othIsDefined&&valIsReflexive||!othIsReflexive){return -1;}}return 0;}function compareMultiple(object,other,orders){var index=-1,objCriteria=object.criteria,othCriteria=other.criteria,length=objCriteria.length,ordersLength=orders.length;while(++index<length){var result=compareAscending(objCriteria[index],othCriteria[index]);if(result){if(index>=ordersLength){return result;}var order=orders[index];return result*(order=='desc'?-1:1);}}return object.index-other.index;}function composeArgs(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersLength=holders.length,leftIndex=-1,leftLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(leftLength+rangeLength),isUncurried=!isCurried;while(++leftIndex<leftLength){result[leftIndex]=partials[leftIndex];}while(++argsIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[holders[argsIndex]]=args[argsIndex];}}while(rangeLength--){result[leftIndex++]=args[argsIndex++];}return result;}function composeArgsRight(args,partials,holders,isCurried){var argsIndex=-1,argsLength=args.length,holdersIndex=-1,holdersLength=holders.length,rightIndex=-1,rightLength=partials.length,rangeLength=nativeMax(argsLength-holdersLength,0),result=Array(rangeLength+rightLength),isUncurried=!isCurried;while(++argsIndex<rangeLength){result[argsIndex]=args[argsIndex];}var offset=argsIndex;while(++rightIndex<rightLength){result[offset+rightIndex]=partials[rightIndex];}while(++holdersIndex<holdersLength){if(isUncurried||argsIndex<argsLength){result[offset+holders[holdersIndex]]=args[argsIndex++];}}return result;}function copyArray(source,array){var index=-1,length=source.length;array||(array=Array(length));while(++index<length){array[index]=source[index];}return array;}function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});var index=-1,length=props.length;while(++index<length){var key=props[index];var newValue=customizer?customizer(object[key],source[key],key,object,source):undefined$1;if(newValue===undefined$1){newValue=source[key];}if(isNew){baseAssignValue(object,key,newValue);}else {assignValue(object,key,newValue);}}return object;}function copySymbols(source,object){return copyObject(source,getSymbols(source),object);}function copySymbolsIn(source,object){return copyObject(source,getSymbolsIn(source),object);}function createAggregator(setter,initializer){return function(collection,iteratee){var func=isArray(collection)?arrayAggregator:baseAggregator,accumulator=initializer?initializer():{};return func(collection,setter,getIteratee(iteratee,2),accumulator);};}function createAssigner(assigner){return baseRest(function(object,sources){var index=-1,length=sources.length,customizer=length>1?sources[length-1]:undefined$1,guard=length>2?sources[2]:undefined$1;customizer=assigner.length>3&&typeof customizer=='function'?(length--,customizer):undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){customizer=length<3?undefined$1:customizer;length=1;}object=Object(object);while(++index<length){var source=sources[index];if(source){assigner(object,source,index,customizer);}}return object;});}function createBaseEach(eachFunc,fromRight){return function(collection,iteratee){if(collection==null){return collection;}if(!isArrayLike(collection)){return eachFunc(collection,iteratee);}var length=collection.length,index=fromRight?length:-1,iterable=Object(collection);while(fromRight?index--:++index<length){if(iteratee(iterable[index],index,iterable)===false){break;}}return collection;};}function createBaseFor(fromRight){return function(object,iteratee,keysFunc){var index=-1,iterable=Object(object),props=keysFunc(object),length=props.length;while(length--){var key=props[fromRight?length:++index];if(iteratee(iterable[key],key,iterable)===false){break;}}return object;};}function createBind(func,bitmask,thisArg){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return fn.apply(isBind?thisArg:this,arguments);}return wrapper;}function createCaseFirst(methodName){return function(string){string=toString(string);var strSymbols=hasUnicode(string)?stringToArray(string):undefined$1;var chr=strSymbols?strSymbols[0]:string.charAt(0);var trailing=strSymbols?castSlice(strSymbols,1).join(''):string.slice(1);return chr[methodName]()+trailing;};}function createCompounder(callback){return function(string){return arrayReduce(words(deburr(string).replace(reApos,'')),callback,'');};}function createCtor(Ctor){return function(){var args=arguments;switch(args.length){case 0:return new Ctor();case 1:return new Ctor(args[0]);case 2:return new Ctor(args[0],args[1]);case 3:return new Ctor(args[0],args[1],args[2]);case 4:return new Ctor(args[0],args[1],args[2],args[3]);case 5:return new Ctor(args[0],args[1],args[2],args[3],args[4]);case 6:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5]);case 7:return new Ctor(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);}var thisBinding=baseCreate(Ctor.prototype),result=Ctor.apply(thisBinding,args);return isObject(result)?result:thisBinding;};}function createCurry(func,bitmask,arity){var Ctor=createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length,placeholder=getHolder(wrapper);while(index--){args[index]=arguments[index];}var holders=length<3&&args[0]!==placeholder&&args[length-1]!==placeholder?[]:replaceHolders(args,placeholder);length-=holders.length;if(length<arity){return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,undefined$1,args,holders,undefined$1,undefined$1,arity-length);}var fn=this&&this!==root&&this instanceof wrapper?Ctor:func;return apply(fn,this,args);}return wrapper;}function createFind(findIndexFunc){return function(collection,predicate,fromIndex){var iterable=Object(collection);if(!isArrayLike(collection)){var iteratee=getIteratee(predicate,3);collection=keys(collection);predicate=function predicate(key){return iteratee(iterable[key],key,iterable);};}var index=findIndexFunc(collection,predicate,fromIndex);return index>-1?iterable[iteratee?collection[index]:index]:undefined$1;};}function createFlow(fromRight){return flatRest(function(funcs){var length=funcs.length,index=length,prereq=LodashWrapper.prototype.thru;if(fromRight){funcs.reverse();}while(index--){var func=funcs[index];if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(prereq&&!wrapper&&getFuncName(func)=='wrapper'){var wrapper=new LodashWrapper([],true);}}index=wrapper?index:length;while(++index<length){func=funcs[index];var funcName=getFuncName(func),data=funcName=='wrapper'?getData(func):undefined$1;if(data&&isLaziable(data[0])&&data[1]==(WRAP_ARY_FLAG|WRAP_CURRY_FLAG|WRAP_PARTIAL_FLAG|WRAP_REARG_FLAG)&&!data[4].length&&data[9]==1){wrapper=wrapper[getFuncName(data[0])].apply(wrapper,data[3]);}else {wrapper=func.length==1&&isLaziable(func)?wrapper[funcName]():wrapper.thru(func);}}return function(){var args=arguments,value=args[0];if(wrapper&&args.length==1&&isArray(value)){return wrapper.plant(value).value();}var index=0,result=length?funcs[index].apply(this,args):value;while(++index<length){result=funcs[index].call(this,result);}return result;};});}function createHybrid(func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity){var isAry=bitmask&WRAP_ARY_FLAG,isBind=bitmask&WRAP_BIND_FLAG,isBindKey=bitmask&WRAP_BIND_KEY_FLAG,isCurried=bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG),isFlip=bitmask&WRAP_FLIP_FLAG,Ctor=isBindKey?undefined$1:createCtor(func);function wrapper(){var length=arguments.length,args=Array(length),index=length;while(index--){args[index]=arguments[index];}if(isCurried){var placeholder=getHolder(wrapper),holdersCount=countHolders(args,placeholder);}if(partials){args=composeArgs(args,partials,holders,isCurried);}if(partialsRight){args=composeArgsRight(args,partialsRight,holdersRight,isCurried);}length-=holdersCount;if(isCurried&&length<arity){var newHolders=replaceHolders(args,placeholder);return createRecurry(func,bitmask,createHybrid,wrapper.placeholder,thisArg,args,newHolders,argPos,ary,arity-length);}var thisBinding=isBind?thisArg:this,fn=isBindKey?thisBinding[func]:func;length=args.length;if(argPos){args=reorder(args,argPos);}else if(isFlip&&length>1){args.reverse();}if(isAry&&ary<length){args.length=ary;}if(this&&this!==root&&this instanceof wrapper){fn=Ctor||createCtor(fn);}return fn.apply(thisBinding,args);}return wrapper;}function createInverter(setter,toIteratee){return function(object,iteratee){return baseInverter(object,setter,toIteratee(iteratee),{});};}function createMathOperation(operator,defaultValue){return function(value,other){var result;if(value===undefined$1&&other===undefined$1){return defaultValue;}if(value!==undefined$1){result=value;}if(other!==undefined$1){if(result===undefined$1){return other;}if(typeof value=='string'||typeof other=='string'){value=baseToString(value);other=baseToString(other);}else {value=baseToNumber(value);other=baseToNumber(other);}result=operator(value,other);}return result;};}function createOver(arrayFunc){return flatRest(function(iteratees){iteratees=arrayMap(iteratees,baseUnary(getIteratee()));return baseRest(function(args){var thisArg=this;return arrayFunc(iteratees,function(iteratee){return apply(iteratee,thisArg,args);});});});}function createPadding(length,chars){chars=chars===undefined$1?' ':baseToString(chars);var charsLength=chars.length;if(charsLength<2){return charsLength?baseRepeat(chars,length):chars;}var result=baseRepeat(chars,nativeCeil(length/stringSize(chars)));return hasUnicode(chars)?castSlice(stringToArray(result),0,length).join(''):result.slice(0,length);}function createPartial(func,bitmask,thisArg,partials){var isBind=bitmask&WRAP_BIND_FLAG,Ctor=createCtor(func);function wrapper(){var argsIndex=-1,argsLength=arguments.length,leftIndex=-1,leftLength=partials.length,args=Array(leftLength+argsLength),fn=this&&this!==root&&this instanceof wrapper?Ctor:func;while(++leftIndex<leftLength){args[leftIndex]=partials[leftIndex];}while(argsLength--){args[leftIndex++]=arguments[++argsIndex];}return apply(fn,isBind?thisArg:this,args);}return wrapper;}function createRange(fromRight){return function(start,end,step){if(step&&typeof step!='number'&&isIterateeCall(start,end,step)){end=step=undefined$1;}start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}step=step===undefined$1?start<end?1:-1:toFinite(step);return baseRange(start,end,step,fromRight);};}function createRelationalOperation(operator){return function(value,other){if(!(typeof value=='string'&&typeof other=='string')){value=toNumber(value);other=toNumber(other);}return operator(value,other);};}function createRecurry(func,bitmask,wrapFunc,placeholder,thisArg,partials,holders,argPos,ary,arity){var isCurry=bitmask&WRAP_CURRY_FLAG,newHolders=isCurry?holders:undefined$1,newHoldersRight=isCurry?undefined$1:holders,newPartials=isCurry?partials:undefined$1,newPartialsRight=isCurry?undefined$1:partials;bitmask|=isCurry?WRAP_PARTIAL_FLAG:WRAP_PARTIAL_RIGHT_FLAG;bitmask&=~(isCurry?WRAP_PARTIAL_RIGHT_FLAG:WRAP_PARTIAL_FLAG);if(!(bitmask&WRAP_CURRY_BOUND_FLAG)){bitmask&=~(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG);}var newData=[func,bitmask,thisArg,newPartials,newHolders,newPartialsRight,newHoldersRight,argPos,ary,arity];var result=wrapFunc.apply(undefined$1,newData);if(isLaziable(func)){setData(result,newData);}result.placeholder=placeholder;return setWrapToString(result,func,bitmask);}function createRound(methodName){var func=Math[methodName];return function(number,precision){number=toNumber(number);precision=precision==null?0:nativeMin(toInteger(precision),292);if(precision&&nativeIsFinite(number)){var pair=(toString(number)+'e').split('e'),value=func(pair[0]+'e'+(+pair[1]+precision));pair=(toString(value)+'e').split('e');return +(pair[0]+'e'+(+pair[1]-precision));}return func(number);};}var createSet=!(Set&&1/setToArray(new Set([,-0]))[1]==INFINITY)?noop:function(values){return new Set(values);};function createToPairs(keysFunc){return function(object){var tag=getTag(object);if(tag==mapTag){return mapToArray(object);}if(tag==setTag){return setToPairs(object);}return baseToPairs(object,keysFunc(object));};}function createWrap(func,bitmask,thisArg,partials,holders,argPos,ary,arity){var isBindKey=bitmask&WRAP_BIND_KEY_FLAG;if(!isBindKey&&typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var length=partials?partials.length:0;if(!length){bitmask&=~(WRAP_PARTIAL_FLAG|WRAP_PARTIAL_RIGHT_FLAG);partials=holders=undefined$1;}ary=ary===undefined$1?ary:nativeMax(toInteger(ary),0);arity=arity===undefined$1?arity:toInteger(arity);length-=holders?holders.length:0;if(bitmask&WRAP_PARTIAL_RIGHT_FLAG){var partialsRight=partials,holdersRight=holders;partials=holders=undefined$1;}var data=isBindKey?undefined$1:getData(func);var newData=[func,bitmask,thisArg,partials,holders,partialsRight,holdersRight,argPos,ary,arity];if(data){mergeData(newData,data);}func=newData[0];bitmask=newData[1];thisArg=newData[2];partials=newData[3];holders=newData[4];arity=newData[9]=newData[9]===undefined$1?isBindKey?0:func.length:nativeMax(newData[9]-length,0);if(!arity&&bitmask&(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG)){bitmask&=~(WRAP_CURRY_FLAG|WRAP_CURRY_RIGHT_FLAG);}if(!bitmask||bitmask==WRAP_BIND_FLAG){var result=createBind(func,bitmask,thisArg);}else if(bitmask==WRAP_CURRY_FLAG||bitmask==WRAP_CURRY_RIGHT_FLAG){result=createCurry(func,bitmask,arity);}else if((bitmask==WRAP_PARTIAL_FLAG||bitmask==(WRAP_BIND_FLAG|WRAP_PARTIAL_FLAG))&&!holders.length){result=createPartial(func,bitmask,thisArg,partials);}else {result=createHybrid.apply(undefined$1,newData);}var setter=data?baseSetData:setData;return setWrapToString(setter(result,newData),func,bitmask);}function customDefaultsAssignIn(objValue,srcValue,key,object){if(objValue===undefined$1||eq(objValue,objectProto[key])&&!hasOwnProperty.call(object,key)){return srcValue;}return objValue;}function customDefaultsMerge(objValue,srcValue,key,object,source,stack){if(isObject(objValue)&&isObject(srcValue)){stack.set(srcValue,objValue);baseMerge(objValue,srcValue,undefined$1,customDefaultsMerge,stack);stack['delete'](srcValue);}return objValue;}function customOmitClone(value){return isPlainObject(value)?undefined$1:value;}function equalArrays(array,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,arrLength=array.length,othLength=other.length;if(arrLength!=othLength&&!(isPartial&&othLength>arrLength)){return false;}var arrStacked=stack.get(array);var othStacked=stack.get(other);if(arrStacked&&othStacked){return arrStacked==other&&othStacked==array;}var index=-1,result=true,seen=bitmask&COMPARE_UNORDERED_FLAG?new SetCache():undefined$1;stack.set(array,other);stack.set(other,array);while(++index<arrLength){var arrValue=array[index],othValue=other[index];if(customizer){var compared=isPartial?customizer(othValue,arrValue,index,other,array,stack):customizer(arrValue,othValue,index,array,other,stack);}if(compared!==undefined$1){if(compared){continue;}result=false;break;}if(seen){if(!arraySome(other,function(othValue,othIndex){if(!cacheHas(seen,othIndex)&&(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){return seen.push(othIndex);}})){result=false;break;}}else if(!(arrValue===othValue||equalFunc(arrValue,othValue,bitmask,customizer,stack))){result=false;break;}}stack['delete'](array);stack['delete'](other);return result;}function equalByTag(object,other,tag,bitmask,customizer,equalFunc,stack){switch(tag){case dataViewTag:if(object.byteLength!=other.byteLength||object.byteOffset!=other.byteOffset){return false;}object=object.buffer;other=other.buffer;case arrayBufferTag:if(object.byteLength!=other.byteLength||!equalFunc(new Uint8Array(object),new Uint8Array(other))){return false;}return true;case boolTag:case dateTag:case numberTag:return eq(+object,+other);case errorTag:return object.name==other.name&&object.message==other.message;case regexpTag:case stringTag:return object==other+'';case mapTag:var convert=mapToArray;case setTag:var isPartial=bitmask&COMPARE_PARTIAL_FLAG;convert||(convert=setToArray);if(object.size!=other.size&&!isPartial){return false;}var stacked=stack.get(object);if(stacked){return stacked==other;}bitmask|=COMPARE_UNORDERED_FLAG;stack.set(object,other);var result=equalArrays(convert(object),convert(other),bitmask,customizer,equalFunc,stack);stack['delete'](object);return result;case symbolTag:if(symbolValueOf){return symbolValueOf.call(object)==symbolValueOf.call(other);}}return false;}function equalObjects(object,other,bitmask,customizer,equalFunc,stack){var isPartial=bitmask&COMPARE_PARTIAL_FLAG,objProps=getAllKeys(object),objLength=objProps.length,othProps=getAllKeys(other),othLength=othProps.length;if(objLength!=othLength&&!isPartial){return false;}var index=objLength;while(index--){var key=objProps[index];if(!(isPartial?key in other:hasOwnProperty.call(other,key))){return false;}}var objStacked=stack.get(object);var othStacked=stack.get(other);if(objStacked&&othStacked){return objStacked==other&&othStacked==object;}var result=true;stack.set(object,other);stack.set(other,object);var skipCtor=isPartial;while(++index<objLength){key=objProps[index];var objValue=object[key],othValue=other[key];if(customizer){var compared=isPartial?customizer(othValue,objValue,key,other,object,stack):customizer(objValue,othValue,key,object,other,stack);}if(!(compared===undefined$1?objValue===othValue||equalFunc(objValue,othValue,bitmask,customizer,stack):compared)){result=false;break;}skipCtor||(skipCtor=key=='constructor');}if(result&&!skipCtor){var objCtor=object.constructor,othCtor=other.constructor;if(objCtor!=othCtor&&'constructor'in object&&'constructor'in other&&!(typeof objCtor=='function'&&objCtor instanceof objCtor&&typeof othCtor=='function'&&othCtor instanceof othCtor)){result=false;}}stack['delete'](object);stack['delete'](other);return result;}function flatRest(func){return setToString(overRest(func,undefined$1,flatten),func+'');}function getAllKeys(object){return baseGetAllKeys(object,keys,getSymbols);}function getAllKeysIn(object){return baseGetAllKeys(object,keysIn,getSymbolsIn);}var getData=!metaMap?noop:function(func){return metaMap.get(func);};function getFuncName(func){var result=func.name+'',array=realNames[result],length=hasOwnProperty.call(realNames,result)?array.length:0;while(length--){var data=array[length],otherFunc=data.func;if(otherFunc==null||otherFunc==func){return data.name;}}return result;}function getHolder(func){var object=hasOwnProperty.call(lodash,'placeholder')?lodash:func;return object.placeholder;}function getIteratee(){var result=lodash.iteratee||iteratee;result=result===iteratee?baseIteratee:result;return arguments.length?result(arguments[0],arguments[1]):result;}function getMapData(map,key){var data=map.__data__;return isKeyable(key)?data[typeof key=='string'?'string':'hash']:data.map;}function getMatchData(object){var result=keys(object),length=result.length;while(length--){var key=result[length],value=object[key];result[length]=[key,value,isStrictComparable(value)];}return result;}function getNative(object,key){var value=getValue(object,key);return baseIsNative(value)?value:undefined$1;}function getRawTag(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=undefined$1;var unmasked=true;}catch(e){}var result=nativeObjectToString.call(value);if(unmasked){if(isOwn){value[symToStringTag]=tag;}else {delete value[symToStringTag];}}return result;}var getSymbols=!nativeGetSymbols?stubArray:function(object){if(object==null){return [];}object=Object(object);return arrayFilter(nativeGetSymbols(object),function(symbol){return propertyIsEnumerable.call(object,symbol);});};var getSymbolsIn=!nativeGetSymbols?stubArray:function(object){var result=[];while(object){arrayPush(result,getSymbols(object));object=getPrototype(object);}return result;};var getTag=baseGetTag;if(DataView&&getTag(new DataView(new ArrayBuffer(1)))!=dataViewTag||Map&&getTag(new Map())!=mapTag||Promise&&getTag(Promise.resolve())!=promiseTag||Set&&getTag(new Set())!=setTag||WeakMap&&getTag(new WeakMap())!=weakMapTag){getTag=function getTag(value){var result=baseGetTag(value),Ctor=result==objectTag?value.constructor:undefined$1,ctorString=Ctor?toSource(Ctor):'';if(ctorString){switch(ctorString){case dataViewCtorString:return dataViewTag;case mapCtorString:return mapTag;case promiseCtorString:return promiseTag;case setCtorString:return setTag;case weakMapCtorString:return weakMapTag;}}return result;};}function getView(start,end,transforms){var index=-1,length=transforms.length;while(++index<length){var data=transforms[index],size=data.size;switch(data.type){case'drop':start+=size;break;case'dropRight':end-=size;break;case'take':end=nativeMin(end,start+size);break;case'takeRight':start=nativeMax(start,end-size);break;}}return {'start':start,'end':end};}function getWrapDetails(source){var match=source.match(reWrapDetails);return match?match[1].split(reSplitDetails):[];}function hasPath(object,path,hasFunc){path=castPath(path,object);var index=-1,length=path.length,result=false;while(++index<length){var key=toKey(path[index]);if(!(result=object!=null&&hasFunc(object,key))){break;}object=object[key];}if(result||++index!=length){return result;}length=object==null?0:object.length;return !!length&&isLength(length)&&isIndex(key,length)&&(isArray(object)||isArguments(object));}function initCloneArray(array){var length=array.length,result=new array.constructor(length);if(length&&typeof array[0]=='string'&&hasOwnProperty.call(array,'index')){result.index=array.index;result.input=array.input;}return result;}function initCloneObject(object){return typeof object.constructor=='function'&&!isPrototype(object)?baseCreate(getPrototype(object)):{};}function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case arrayBufferTag:return cloneArrayBuffer(object);case boolTag:case dateTag:return new Ctor(+object);case dataViewTag:return cloneDataView(object,isDeep);case float32Tag:case float64Tag:case int8Tag:case int16Tag:case int32Tag:case uint8Tag:case uint8ClampedTag:case uint16Tag:case uint32Tag:return cloneTypedArray(object,isDeep);case mapTag:return new Ctor();case numberTag:case stringTag:return new Ctor(object);case regexpTag:return cloneRegExp(object);case setTag:return new Ctor();case symbolTag:return cloneSymbol(object);}}function insertWrapDetails(source,details){var length=details.length;if(!length){return source;}var lastIndex=length-1;details[lastIndex]=(length>1?'& ':'')+details[lastIndex];details=details.join(length>2?', ':' ');return source.replace(reWrapComment,'{\n/* [wrapped with '+details+'] */\n');}function isFlattenable(value){return isArray(value)||isArguments(value)||!!(spreadableSymbol&&value&&value[spreadableSymbol]);}function isIndex(value,length){var type=_typeof_1(value);length=length==null?MAX_SAFE_INTEGER:length;return !!length&&(type=='number'||type!='symbol'&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length;}function isIterateeCall(value,index,object){if(!isObject(object)){return false;}var type=_typeof_1(index);if(type=='number'?isArrayLike(object)&&isIndex(index,object.length):type=='string'&&index in object){return eq(object[index],value);}return false;}function isKey(value,object){if(isArray(value)){return false;}var type=_typeof_1(value);if(type=='number'||type=='symbol'||type=='boolean'||value==null||isSymbol(value)){return true;}return reIsPlainProp.test(value)||!reIsDeepProp.test(value)||object!=null&&value in Object(object);}function isKeyable(value){var type=_typeof_1(value);return type=='string'||type=='number'||type=='symbol'||type=='boolean'?value!=='__proto__':value===null;}function isLaziable(func){var funcName=getFuncName(func),other=lodash[funcName];if(typeof other!='function'||!(funcName in LazyWrapper.prototype)){return false;}if(func===other){return true;}var data=getData(other);return !!data&&func===data[0];}function isMasked(func){return !!maskSrcKey&&maskSrcKey in func;}var isMaskable=coreJsData?isFunction:stubFalse;function isPrototype(value){var Ctor=value&&value.constructor,proto=typeof Ctor=='function'&&Ctor.prototype||objectProto;return value===proto;}function isStrictComparable(value){return value===value&&!isObject(value);}function matchesStrictComparable(key,srcValue){return function(object){if(object==null){return false;}return object[key]===srcValue&&(srcValue!==undefined$1||key in Object(object));};}function memoizeCapped(func){var result=memoize(func,function(key){if(cache.size===MAX_MEMOIZE_SIZE){cache.clear();}return key;});var cache=result.cache;return result;}function mergeData(data,source){var bitmask=data[1],srcBitmask=source[1],newBitmask=bitmask|srcBitmask,isCommon=newBitmask<(WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG|WRAP_ARY_FLAG);var isCombo=srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_CURRY_FLAG||srcBitmask==WRAP_ARY_FLAG&&bitmask==WRAP_REARG_FLAG&&data[7].length<=source[8]||srcBitmask==(WRAP_ARY_FLAG|WRAP_REARG_FLAG)&&source[7].length<=source[8]&&bitmask==WRAP_CURRY_FLAG;if(!(isCommon||isCombo)){return data;}if(srcBitmask&WRAP_BIND_FLAG){data[2]=source[2];newBitmask|=bitmask&WRAP_BIND_FLAG?0:WRAP_CURRY_BOUND_FLAG;}var value=source[3];if(value){var partials=data[3];data[3]=partials?composeArgs(partials,value,source[4]):value;data[4]=partials?replaceHolders(data[3],PLACEHOLDER):source[4];}value=source[5];if(value){partials=data[5];data[5]=partials?composeArgsRight(partials,value,source[6]):value;data[6]=partials?replaceHolders(data[5],PLACEHOLDER):source[6];}value=source[7];if(value){data[7]=value;}if(srcBitmask&WRAP_ARY_FLAG){data[8]=data[8]==null?source[8]:nativeMin(data[8],source[8]);}if(data[9]==null){data[9]=source[9];}data[0]=source[0];data[1]=newBitmask;return data;}function nativeKeysIn(object){var result=[];if(object!=null){for(var key in Object(object)){result.push(key);}}return result;}function objectToString(value){return nativeObjectToString.call(value);}function overRest(func,start,transform){start=nativeMax(start===undefined$1?func.length-1:start,0);return function(){var args=arguments,index=-1,length=nativeMax(args.length-start,0),array=Array(length);while(++index<length){array[index]=args[start+index];}index=-1;var otherArgs=Array(start+1);while(++index<start){otherArgs[index]=args[index];}otherArgs[start]=transform(array);return apply(func,this,otherArgs);};}function parent(object,path){return path.length<2?object:baseGet(object,baseSlice(path,0,-1));}function reorder(array,indexes){var arrLength=array.length,length=nativeMin(indexes.length,arrLength),oldArray=copyArray(array);while(length--){var index=indexes[length];array[length]=isIndex(index,arrLength)?oldArray[index]:undefined$1;}return array;}function safeGet(object,key){if(key==='constructor'&&typeof object[key]==='function'){return;}if(key=='__proto__'){return;}return object[key];}var setData=shortOut(baseSetData);var setTimeout=ctxSetTimeout||function(func,wait){return root.setTimeout(func,wait);};var setToString=shortOut(baseSetToString);function setWrapToString(wrapper,reference,bitmask){var source=reference+'';return setToString(wrapper,insertWrapDetails(source,updateWrapDetails(getWrapDetails(source),bitmask)));}function shortOut(func){var count=0,lastCalled=0;return function(){var stamp=nativeNow(),remaining=HOT_SPAN-(stamp-lastCalled);lastCalled=stamp;if(remaining>0){if(++count>=HOT_COUNT){return arguments[0];}}else {count=0;}return func.apply(undefined$1,arguments);};}function shuffleSelf(array,size){var index=-1,length=array.length,lastIndex=length-1;size=size===undefined$1?length:size;while(++index<size){var rand=baseRandom(index,lastIndex),value=array[rand];array[rand]=array[index];array[index]=value;}array.length=size;return array;}var stringToPath=memoizeCapped(function(string){var result=[];if(string.charCodeAt(0)===46){result.push('');}string.replace(rePropName,function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,'$1'):number||match);});return result;});function toKey(value){if(typeof value=='string'||isSymbol(value)){return value;}var result=value+'';return result=='0'&&1/value==-INFINITY?'-0':result;}function toSource(func){if(func!=null){try{return funcToString.call(func);}catch(e){}try{return func+'';}catch(e){}}return '';}function updateWrapDetails(details,bitmask){arrayEach(wrapFlags,function(pair){var value='_.'+pair[0];if(bitmask&pair[1]&&!arrayIncludes(details,value)){details.push(value);}});return details.sort();}function wrapperClone(wrapper){if(wrapper instanceof LazyWrapper){return wrapper.clone();}var result=new LodashWrapper(wrapper.__wrapped__,wrapper.__chain__);result.__actions__=copyArray(wrapper.__actions__);result.__index__=wrapper.__index__;result.__values__=wrapper.__values__;return result;}function chunk(array,size,guard){if(guard?isIterateeCall(array,size,guard):size===undefined$1){size=1;}else {size=nativeMax(toInteger(size),0);}var length=array==null?0:array.length;if(!length||size<1){return [];}var index=0,resIndex=0,result=Array(nativeCeil(length/size));while(index<length){result[resIndex++]=baseSlice(array,index,index+=size);}return result;}function compact(array){var index=-1,length=array==null?0:array.length,resIndex=0,result=[];while(++index<length){var value=array[index];if(value){result[resIndex++]=value;}}return result;}function concat(){var length=arguments.length;if(!length){return [];}var args=Array(length-1),array=arguments[0],index=length;while(index--){args[index-1]=arguments[index];}return arrayPush(isArray(array)?copyArray(array):[array],baseFlatten(args,1));}var difference=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true)):[];});var differenceBy=baseRest(function(array,values){var iteratee=last(values);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),getIteratee(iteratee,2)):[];});var differenceWith=baseRest(function(array,values){var comparator=last(values);if(isArrayLikeObject(comparator)){comparator=undefined$1;}return isArrayLikeObject(array)?baseDifference(array,baseFlatten(values,1,isArrayLikeObject,true),undefined$1,comparator):[];});function drop(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,n<0?0:n,length);}function dropRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,0,n<0?0:n);}function dropRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true,true):[];}function dropWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),true):[];}function fill(array,value,start,end){var length=array==null?0:array.length;if(!length){return [];}if(start&&typeof start!='number'&&isIterateeCall(array,value,start)){start=0;end=length;}return baseFill(array,value,start,end);}function findIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseFindIndex(array,getIteratee(predicate,3),index);}function findLastIndex(array,predicate,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length-1;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=fromIndex<0?nativeMax(length+index,0):nativeMin(index,length-1);}return baseFindIndex(array,getIteratee(predicate,3),index,true);}function flatten(array){var length=array==null?0:array.length;return length?baseFlatten(array,1):[];}function flattenDeep(array){var length=array==null?0:array.length;return length?baseFlatten(array,INFINITY):[];}function flattenDepth(array,depth){var length=array==null?0:array.length;if(!length){return [];}depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(array,depth);}function fromPairs(pairs){var index=-1,length=pairs==null?0:pairs.length,result={};while(++index<length){var pair=pairs[index];result[pair[0]]=pair[1];}return result;}function head(array){return array&&array.length?array[0]:undefined$1;}function indexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=fromIndex==null?0:toInteger(fromIndex);if(index<0){index=nativeMax(length+index,0);}return baseIndexOf(array,value,index);}function initial(array){var length=array==null?0:array.length;return length?baseSlice(array,0,-1):[];}var intersection=baseRest(function(arrays){var mapped=arrayMap(arrays,castArrayLikeObject);return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped):[];});var intersectionBy=baseRest(function(arrays){var iteratee=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);if(iteratee===last(mapped)){iteratee=undefined$1;}else {mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,getIteratee(iteratee,2)):[];});var intersectionWith=baseRest(function(arrays){var comparator=last(arrays),mapped=arrayMap(arrays,castArrayLikeObject);comparator=typeof comparator=='function'?comparator:undefined$1;if(comparator){mapped.pop();}return mapped.length&&mapped[0]===arrays[0]?baseIntersection(mapped,undefined$1,comparator):[];});function join(array,separator){return array==null?'':nativeJoin.call(array,separator);}function last(array){var length=array==null?0:array.length;return length?array[length-1]:undefined$1;}function lastIndexOf(array,value,fromIndex){var length=array==null?0:array.length;if(!length){return -1;}var index=length;if(fromIndex!==undefined$1){index=toInteger(fromIndex);index=index<0?nativeMax(length+index,0):nativeMin(index,length-1);}return value===value?strictLastIndexOf(array,value,index):baseFindIndex(array,baseIsNaN,index,true);}function nth(array,n){return array&&array.length?baseNth(array,toInteger(n)):undefined$1;}var pull=baseRest(pullAll);function pullAll(array,values){return array&&array.length&&values&&values.length?basePullAll(array,values):array;}function pullAllBy(array,values,iteratee){return array&&array.length&&values&&values.length?basePullAll(array,values,getIteratee(iteratee,2)):array;}function pullAllWith(array,values,comparator){return array&&array.length&&values&&values.length?basePullAll(array,values,undefined$1,comparator):array;}var pullAt=flatRest(function(array,indexes){var length=array==null?0:array.length,result=baseAt(array,indexes);basePullAt(array,arrayMap(indexes,function(index){return isIndex(index,length)?+index:index;}).sort(compareAscending));return result;});function remove(array,predicate){var result=[];if(!(array&&array.length)){return result;}var index=-1,indexes=[],length=array.length;predicate=getIteratee(predicate,3);while(++index<length){var value=array[index];if(predicate(value,index,array)){result.push(value);indexes.push(index);}}basePullAt(array,indexes);return result;}function reverse(array){return array==null?array:nativeReverse.call(array);}function slice(array,start,end){var length=array==null?0:array.length;if(!length){return [];}if(end&&typeof end!='number'&&isIterateeCall(array,start,end)){start=0;end=length;}else {start=start==null?0:toInteger(start);end=end===undefined$1?length:toInteger(end);}return baseSlice(array,start,end);}function sortedIndex(array,value){return baseSortedIndex(array,value);}function sortedIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2));}function sortedIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value);if(index<length&&eq(array[index],value)){return index;}}return -1;}function sortedLastIndex(array,value){return baseSortedIndex(array,value,true);}function sortedLastIndexBy(array,value,iteratee){return baseSortedIndexBy(array,value,getIteratee(iteratee,2),true);}function sortedLastIndexOf(array,value){var length=array==null?0:array.length;if(length){var index=baseSortedIndex(array,value,true)-1;if(eq(array[index],value)){return index;}}return -1;}function sortedUniq(array){return array&&array.length?baseSortedUniq(array):[];}function sortedUniqBy(array,iteratee){return array&&array.length?baseSortedUniq(array,getIteratee(iteratee,2)):[];}function tail(array){var length=array==null?0:array.length;return length?baseSlice(array,1,length):[];}function take(array,n,guard){if(!(array&&array.length)){return [];}n=guard||n===undefined$1?1:toInteger(n);return baseSlice(array,0,n<0?0:n);}function takeRight(array,n,guard){var length=array==null?0:array.length;if(!length){return [];}n=guard||n===undefined$1?1:toInteger(n);n=length-n;return baseSlice(array,n<0?0:n,length);}function takeRightWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3),false,true):[];}function takeWhile(array,predicate){return array&&array.length?baseWhile(array,getIteratee(predicate,3)):[];}var union=baseRest(function(arrays){return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true));});var unionBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),getIteratee(iteratee,2));});var unionWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseUniq(baseFlatten(arrays,1,isArrayLikeObject,true),undefined$1,comparator);});function uniq(array){return array&&array.length?baseUniq(array):[];}function uniqBy(array,iteratee){return array&&array.length?baseUniq(array,getIteratee(iteratee,2)):[];}function uniqWith(array,comparator){comparator=typeof comparator=='function'?comparator:undefined$1;return array&&array.length?baseUniq(array,undefined$1,comparator):[];}function unzip(array){if(!(array&&array.length)){return [];}var length=0;array=arrayFilter(array,function(group){if(isArrayLikeObject(group)){length=nativeMax(group.length,length);return true;}});return baseTimes(length,function(index){return arrayMap(array,baseProperty(index));});}function unzipWith(array,iteratee){if(!(array&&array.length)){return [];}var result=unzip(array);if(iteratee==null){return result;}return arrayMap(result,function(group){return apply(iteratee,undefined$1,group);});}var without=baseRest(function(array,values){return isArrayLikeObject(array)?baseDifference(array,values):[];});var xor=baseRest(function(arrays){return baseXor(arrayFilter(arrays,isArrayLikeObject));});var xorBy=baseRest(function(arrays){var iteratee=last(arrays);if(isArrayLikeObject(iteratee)){iteratee=undefined$1;}return baseXor(arrayFilter(arrays,isArrayLikeObject),getIteratee(iteratee,2));});var xorWith=baseRest(function(arrays){var comparator=last(arrays);comparator=typeof comparator=='function'?comparator:undefined$1;return baseXor(arrayFilter(arrays,isArrayLikeObject),undefined$1,comparator);});var zip=baseRest(unzip);function zipObject(props,values){return baseZipObject(props||[],values||[],assignValue);}function zipObjectDeep(props,values){return baseZipObject(props||[],values||[],baseSet);}var zipWith=baseRest(function(arrays){var length=arrays.length,iteratee=length>1?arrays[length-1]:undefined$1;iteratee=typeof iteratee=='function'?(arrays.pop(),iteratee):undefined$1;return unzipWith(arrays,iteratee);});function chain(value){var result=lodash(value);result.__chain__=true;return result;}function tap(value,interceptor){interceptor(value);return value;}function thru(value,interceptor){return interceptor(value);}var wrapperAt=flatRest(function(paths){var length=paths.length,start=length?paths[0]:0,value=this.__wrapped__,interceptor=function interceptor(object){return baseAt(object,paths);};if(length>1||this.__actions__.length||!(value instanceof LazyWrapper)||!isIndex(start)){return this.thru(interceptor);}value=value.slice(start,+start+(length?1:0));value.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(value,this.__chain__).thru(function(array){if(length&&!array.length){array.push(undefined$1);}return array;});});function wrapperChain(){return chain(this);}function wrapperCommit(){return new LodashWrapper(this.value(),this.__chain__);}function wrapperNext(){if(this.__values__===undefined$1){this.__values__=toArray(this.value());}var done=this.__index__>=this.__values__.length,value=done?undefined$1:this.__values__[this.__index__++];return {'done':done,'value':value};}function wrapperToIterator(){return this;}function wrapperPlant(value){var result,parent=this;while(parent instanceof baseLodash){var clone=wrapperClone(parent);clone.__index__=0;clone.__values__=undefined$1;if(result){previous.__wrapped__=clone;}else {result=clone;}var previous=clone;parent=parent.__wrapped__;}previous.__wrapped__=value;return result;}function wrapperReverse(){var value=this.__wrapped__;if(value instanceof LazyWrapper){var wrapped=value;if(this.__actions__.length){wrapped=new LazyWrapper(this);}wrapped=wrapped.reverse();wrapped.__actions__.push({'func':thru,'args':[reverse],'thisArg':undefined$1});return new LodashWrapper(wrapped,this.__chain__);}return this.thru(reverse);}function wrapperValue(){return baseWrapperValue(this.__wrapped__,this.__actions__);}var countBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){++result[key];}else {baseAssignValue(result,key,1);}});function every(collection,predicate,guard){var func=isArray(collection)?arrayEvery:baseEvery;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}function filter(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,getIteratee(predicate,3));}var find=createFind(findIndex);var findLast=createFind(findLastIndex);function flatMap(collection,iteratee){return baseFlatten(map(collection,iteratee),1);}function flatMapDeep(collection,iteratee){return baseFlatten(map(collection,iteratee),INFINITY);}function flatMapDepth(collection,iteratee,depth){depth=depth===undefined$1?1:toInteger(depth);return baseFlatten(map(collection,iteratee),depth);}function forEach(collection,iteratee){var func=isArray(collection)?arrayEach:baseEach;return func(collection,getIteratee(iteratee,3));}function forEachRight(collection,iteratee){var func=isArray(collection)?arrayEachRight:baseEachRight;return func(collection,getIteratee(iteratee,3));}var groupBy=createAggregator(function(result,value,key){if(hasOwnProperty.call(result,key)){result[key].push(value);}else {baseAssignValue(result,key,[value]);}});function includes(collection,value,fromIndex,guard){collection=isArrayLike(collection)?collection:values(collection);fromIndex=fromIndex&&!guard?toInteger(fromIndex):0;var length=collection.length;if(fromIndex<0){fromIndex=nativeMax(length+fromIndex,0);}return isString(collection)?fromIndex<=length&&collection.indexOf(value,fromIndex)>-1:!!length&&baseIndexOf(collection,value,fromIndex)>-1;}var invokeMap=baseRest(function(collection,path,args){var index=-1,isFunc=typeof path=='function',result=isArrayLike(collection)?Array(collection.length):[];baseEach(collection,function(value){result[++index]=isFunc?apply(path,value,args):baseInvoke(value,path,args);});return result;});var keyBy=createAggregator(function(result,value,key){baseAssignValue(result,key,value);});function map(collection,iteratee){var func=isArray(collection)?arrayMap:baseMap;return func(collection,getIteratee(iteratee,3));}function orderBy(collection,iteratees,orders,guard){if(collection==null){return [];}if(!isArray(iteratees)){iteratees=iteratees==null?[]:[iteratees];}orders=guard?undefined$1:orders;if(!isArray(orders)){orders=orders==null?[]:[orders];}return baseOrderBy(collection,iteratees,orders);}var partition=createAggregator(function(result,value,key){result[key?0:1].push(value);},function(){return [[],[]];});function reduce(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduce:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEach);}function reduceRight(collection,iteratee,accumulator){var func=isArray(collection)?arrayReduceRight:baseReduce,initAccum=arguments.length<3;return func(collection,getIteratee(iteratee,4),accumulator,initAccum,baseEachRight);}function reject(collection,predicate){var func=isArray(collection)?arrayFilter:baseFilter;return func(collection,negate(getIteratee(predicate,3)));}function sample(collection){var func=isArray(collection)?arraySample:baseSample;return func(collection);}function sampleSize(collection,n,guard){if(guard?isIterateeCall(collection,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}var func=isArray(collection)?arraySampleSize:baseSampleSize;return func(collection,n);}function shuffle(collection){var func=isArray(collection)?arrayShuffle:baseShuffle;return func(collection);}function size(collection){if(collection==null){return 0;}if(isArrayLike(collection)){return isString(collection)?stringSize(collection):collection.length;}var tag=getTag(collection);if(tag==mapTag||tag==setTag){return collection.size;}return baseKeys(collection).length;}function some(collection,predicate,guard){var func=isArray(collection)?arraySome:baseSome;if(guard&&isIterateeCall(collection,predicate,guard)){predicate=undefined$1;}return func(collection,getIteratee(predicate,3));}var sortBy=baseRest(function(collection,iteratees){if(collection==null){return [];}var length=iteratees.length;if(length>1&&isIterateeCall(collection,iteratees[0],iteratees[1])){iteratees=[];}else if(length>2&&isIterateeCall(iteratees[0],iteratees[1],iteratees[2])){iteratees=[iteratees[0]];}return baseOrderBy(collection,baseFlatten(iteratees,1),[]);});var now=ctxNow||function(){return root.Date.now();};function after(n,func){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n<1){return func.apply(this,arguments);}};}function ary(func,n,guard){n=guard?undefined$1:n;n=func&&n==null?func.length:n;return createWrap(func,WRAP_ARY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,n);}function before(n,func){var result;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}n=toInteger(n);return function(){if(--n>0){result=func.apply(this,arguments);}if(n<=1){func=undefined$1;}return result;};}var bind=baseRest(function(func,thisArg,partials){var bitmask=WRAP_BIND_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bind));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(func,bitmask,thisArg,partials,holders);});var bindKey=baseRest(function(object,key,partials){var bitmask=WRAP_BIND_FLAG|WRAP_BIND_KEY_FLAG;if(partials.length){var holders=replaceHolders(partials,getHolder(bindKey));bitmask|=WRAP_PARTIAL_FLAG;}return createWrap(key,bitmask,object,partials,holders);});function curry(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curry.placeholder;return result;}function curryRight(func,arity,guard){arity=guard?undefined$1:arity;var result=createWrap(func,WRAP_CURRY_RIGHT_FLAG,undefined$1,undefined$1,undefined$1,undefined$1,undefined$1,arity);result.placeholder=curryRight.placeholder;return result;}function debounce(func,wait,options){var lastArgs,lastThis,maxWait,result,timerId,lastCallTime,lastInvokeTime=0,leading=false,maxing=false,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}wait=toNumber(wait)||0;if(isObject(options)){leading=!!options.leading;maxing='maxWait'in options;maxWait=maxing?nativeMax(toNumber(options.maxWait)||0,wait):maxWait;trailing='trailing'in options?!!options.trailing:trailing;}function invokeFunc(time){var args=lastArgs,thisArg=lastThis;lastArgs=lastThis=undefined$1;lastInvokeTime=time;result=func.apply(thisArg,args);return result;}function leadingEdge(time){lastInvokeTime=time;timerId=setTimeout(timerExpired,wait);return leading?invokeFunc(time):result;}function remainingWait(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime,timeWaiting=wait-timeSinceLastCall;return maxing?nativeMin(timeWaiting,maxWait-timeSinceLastInvoke):timeWaiting;}function shouldInvoke(time){var timeSinceLastCall=time-lastCallTime,timeSinceLastInvoke=time-lastInvokeTime;return lastCallTime===undefined$1||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait;}function timerExpired(){var time=now();if(shouldInvoke(time)){return trailingEdge(time);}timerId=setTimeout(timerExpired,remainingWait(time));}function trailingEdge(time){timerId=undefined$1;if(trailing&&lastArgs){return invokeFunc(time);}lastArgs=lastThis=undefined$1;return result;}function cancel(){if(timerId!==undefined$1){clearTimeout(timerId);}lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined$1;}function flush(){return timerId===undefined$1?result:trailingEdge(now());}function debounced(){var time=now(),isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined$1){return leadingEdge(lastCallTime);}if(maxing){clearTimeout(timerId);timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime);}}if(timerId===undefined$1){timerId=setTimeout(timerExpired,wait);}return result;}debounced.cancel=cancel;debounced.flush=flush;return debounced;}var defer=baseRest(function(func,args){return baseDelay(func,1,args);});var delay=baseRest(function(func,wait,args){return baseDelay(func,toNumber(wait)||0,args);});function flip(func){return createWrap(func,WRAP_FLIP_FLAG);}function memoize(func,resolver){if(typeof func!='function'||resolver!=null&&typeof resolver!='function'){throw new TypeError(FUNC_ERROR_TEXT);}var memoized=function memoized(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key)){return cache.get(key);}var result=func.apply(this,args);memoized.cache=cache.set(key,result)||cache;return result;};memoized.cache=new(memoize.Cache||MapCache)();return memoized;}memoize.Cache=MapCache;function negate(predicate){if(typeof predicate!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return function(){var args=arguments;switch(args.length){case 0:return !predicate.call(this);case 1:return !predicate.call(this,args[0]);case 2:return !predicate.call(this,args[0],args[1]);case 3:return !predicate.call(this,args[0],args[1],args[2]);}return !predicate.apply(this,args);};}function once(func){return before(2,func);}var overArgs=castRest(function(func,transforms){transforms=transforms.length==1&&isArray(transforms[0])?arrayMap(transforms[0],baseUnary(getIteratee())):arrayMap(baseFlatten(transforms,1),baseUnary(getIteratee()));var funcsLength=transforms.length;return baseRest(function(args){var index=-1,length=nativeMin(args.length,funcsLength);while(++index<length){args[index]=transforms[index].call(this,args[index]);}return apply(func,this,args);});});var partial=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partial));return createWrap(func,WRAP_PARTIAL_FLAG,undefined$1,partials,holders);});var partialRight=baseRest(function(func,partials){var holders=replaceHolders(partials,getHolder(partialRight));return createWrap(func,WRAP_PARTIAL_RIGHT_FLAG,undefined$1,partials,holders);});var rearg=flatRest(function(func,indexes){return createWrap(func,WRAP_REARG_FLAG,undefined$1,undefined$1,undefined$1,indexes);});function rest(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start===undefined$1?start:toInteger(start);return baseRest(func,start);}function spread(func,start){if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}start=start==null?0:nativeMax(toInteger(start),0);return baseRest(function(args){var array=args[start],otherArgs=castSlice(args,0,start);if(array){arrayPush(otherArgs,array);}return apply(func,this,otherArgs);});}function throttle(func,wait,options){var leading=true,trailing=true;if(typeof func!='function'){throw new TypeError(FUNC_ERROR_TEXT);}if(isObject(options)){leading='leading'in options?!!options.leading:leading;trailing='trailing'in options?!!options.trailing:trailing;}return debounce(func,wait,{'leading':leading,'maxWait':wait,'trailing':trailing});}function unary(func){return ary(func,1);}function wrap(value,wrapper){return partial(castFunction(wrapper),value);}function castArray(){if(!arguments.length){return [];}var value=arguments[0];return isArray(value)?value:[value];}function clone(value){return baseClone(value,CLONE_SYMBOLS_FLAG);}function cloneWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_SYMBOLS_FLAG,customizer);}function cloneDeep(value){return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG);}function cloneDeepWith(value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseClone(value,CLONE_DEEP_FLAG|CLONE_SYMBOLS_FLAG,customizer);}function conformsTo(object,source){return source==null||baseConformsTo(object,source,keys(source));}function eq(value,other){return value===other||value!==value&&other!==other;}var gt=createRelationalOperation(baseGt);var gte=createRelationalOperation(function(value,other){return value>=other;});var isArguments=baseIsArguments(function(){return arguments;}())?baseIsArguments:function(value){return isObjectLike(value)&&hasOwnProperty.call(value,'callee')&&!propertyIsEnumerable.call(value,'callee');};var isArray=Array.isArray;var isArrayBuffer=nodeIsArrayBuffer?baseUnary(nodeIsArrayBuffer):baseIsArrayBuffer;function isArrayLike(value){return value!=null&&isLength(value.length)&&!isFunction(value);}function isArrayLikeObject(value){return isObjectLike(value)&&isArrayLike(value);}function isBoolean(value){return value===true||value===false||isObjectLike(value)&&baseGetTag(value)==boolTag;}var isBuffer=nativeIsBuffer||stubFalse;var isDate=nodeIsDate?baseUnary(nodeIsDate):baseIsDate;function isElement(value){return isObjectLike(value)&&value.nodeType===1&&!isPlainObject(value);}function isEmpty(value){if(value==null){return true;}if(isArrayLike(value)&&(isArray(value)||typeof value=='string'||typeof value.splice=='function'||isBuffer(value)||isTypedArray(value)||isArguments(value))){return !value.length;}var tag=getTag(value);if(tag==mapTag||tag==setTag){return !value.size;}if(isPrototype(value)){return !baseKeys(value).length;}for(var key in value){if(hasOwnProperty.call(value,key)){return false;}}return true;}function isEqual(value,other){return baseIsEqual(value,other);}function isEqualWith(value,other,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;var result=customizer?customizer(value,other):undefined$1;return result===undefined$1?baseIsEqual(value,other,undefined$1,customizer):!!result;}function isError(value){if(!isObjectLike(value)){return false;}var tag=baseGetTag(value);return tag==errorTag||tag==domExcTag||typeof value.message=='string'&&typeof value.name=='string'&&!isPlainObject(value);}function isFinite(value){return typeof value=='number'&&nativeIsFinite(value);}function isFunction(value){if(!isObject(value)){return false;}var tag=baseGetTag(value);return tag==funcTag||tag==genTag||tag==asyncTag||tag==proxyTag;}function isInteger(value){return typeof value=='number'&&value==toInteger(value);}function isLength(value){return typeof value=='number'&&value>-1&&value%1==0&&value<=MAX_SAFE_INTEGER;}function isObject(value){var type=_typeof_1(value);return value!=null&&(type=='object'||type=='function');}function isObjectLike(value){return value!=null&&_typeof_1(value)=='object';}var isMap=nodeIsMap?baseUnary(nodeIsMap):baseIsMap;function isMatch(object,source){return object===source||baseIsMatch(object,source,getMatchData(source));}function isMatchWith(object,source,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return baseIsMatch(object,source,getMatchData(source),customizer);}function isNaN(value){return isNumber(value)&&value!=+value;}function isNative(value){if(isMaskable(value)){throw new Error(CORE_ERROR_TEXT);}return baseIsNative(value);}function isNull(value){return value===null;}function isNil(value){return value==null;}function isNumber(value){return typeof value=='number'||isObjectLike(value)&&baseGetTag(value)==numberTag;}function isPlainObject(value){if(!isObjectLike(value)||baseGetTag(value)!=objectTag){return false;}var proto=getPrototype(value);if(proto===null){return true;}var Ctor=hasOwnProperty.call(proto,'constructor')&&proto.constructor;return typeof Ctor=='function'&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString;}var isRegExp=nodeIsRegExp?baseUnary(nodeIsRegExp):baseIsRegExp;function isSafeInteger(value){return isInteger(value)&&value>=-MAX_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER;}var isSet=nodeIsSet?baseUnary(nodeIsSet):baseIsSet;function isString(value){return typeof value=='string'||!isArray(value)&&isObjectLike(value)&&baseGetTag(value)==stringTag;}function isSymbol(value){return _typeof_1(value)=='symbol'||isObjectLike(value)&&baseGetTag(value)==symbolTag;}var isTypedArray=nodeIsTypedArray?baseUnary(nodeIsTypedArray):baseIsTypedArray;function isUndefined(value){return value===undefined$1;}function isWeakMap(value){return isObjectLike(value)&&getTag(value)==weakMapTag;}function isWeakSet(value){return isObjectLike(value)&&baseGetTag(value)==weakSetTag;}var lt=createRelationalOperation(baseLt);var lte=createRelationalOperation(function(value,other){return value<=other;});function toArray(value){if(!value){return [];}if(isArrayLike(value)){return isString(value)?stringToArray(value):copyArray(value);}if(symIterator&&value[symIterator]){return iteratorToArray(value[symIterator]());}var tag=getTag(value),func=tag==mapTag?mapToArray:tag==setTag?setToArray:values;return func(value);}function toFinite(value){if(!value){return value===0?value:0;}value=toNumber(value);if(value===INFINITY||value===-INFINITY){var sign=value<0?-1:1;return sign*MAX_INTEGER;}return value===value?value:0;}function toInteger(value){var result=toFinite(value),remainder=result%1;return result===result?remainder?result-remainder:result:0;}function toLength(value){return value?baseClamp(toInteger(value),0,MAX_ARRAY_LENGTH):0;}function toNumber(value){if(typeof value=='number'){return value;}if(isSymbol(value)){return NAN;}if(isObject(value)){var other=typeof value.valueOf=='function'?value.valueOf():value;value=isObject(other)?other+'':other;}if(typeof value!='string'){return value===0?value:+value;}value=baseTrim(value);var isBinary=reIsBinary.test(value);return isBinary||reIsOctal.test(value)?freeParseInt(value.slice(2),isBinary?2:8):reIsBadHex.test(value)?NAN:+value;}function toPlainObject(value){return copyObject(value,keysIn(value));}function toSafeInteger(value){return value?baseClamp(toInteger(value),-MAX_SAFE_INTEGER,MAX_SAFE_INTEGER):value===0?value:0;}function toString(value){return value==null?'':baseToString(value);}var assign=createAssigner(function(object,source){if(isPrototype(source)||isArrayLike(source)){copyObject(source,keys(source),object);return;}for(var key in source){if(hasOwnProperty.call(source,key)){assignValue(object,key,source[key]);}}});var assignIn=createAssigner(function(object,source){copyObject(source,keysIn(source),object);});var assignInWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keysIn(source),object,customizer);});var assignWith=createAssigner(function(object,source,srcIndex,customizer){copyObject(source,keys(source),object,customizer);});var at=flatRest(baseAt);function create(prototype,properties){var result=baseCreate(prototype);return properties==null?result:baseAssign(result,properties);}var defaults=baseRest(function(object,sources){object=Object(object);var index=-1;var length=sources.length;var guard=length>2?sources[2]:undefined$1;if(guard&&isIterateeCall(sources[0],sources[1],guard)){length=1;}while(++index<length){var source=sources[index];var props=keysIn(source);var propsIndex=-1;var propsLength=props.length;while(++propsIndex<propsLength){var key=props[propsIndex];var value=object[key];if(value===undefined$1||eq(value,objectProto[key])&&!hasOwnProperty.call(object,key)){object[key]=source[key];}}}return object;});var defaultsDeep=baseRest(function(args){args.push(undefined$1,customDefaultsMerge);return apply(mergeWith,undefined$1,args);});function findKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwn);}function findLastKey(object,predicate){return baseFindKey(object,getIteratee(predicate,3),baseForOwnRight);}function forIn(object,iteratee){return object==null?object:baseFor(object,getIteratee(iteratee,3),keysIn);}function forInRight(object,iteratee){return object==null?object:baseForRight(object,getIteratee(iteratee,3),keysIn);}function forOwn(object,iteratee){return object&&baseForOwn(object,getIteratee(iteratee,3));}function forOwnRight(object,iteratee){return object&&baseForOwnRight(object,getIteratee(iteratee,3));}function functions(object){return object==null?[]:baseFunctions(object,keys(object));}function functionsIn(object){return object==null?[]:baseFunctions(object,keysIn(object));}function get(object,path,defaultValue){var result=object==null?undefined$1:baseGet(object,path);return result===undefined$1?defaultValue:result;}function has(object,path){return object!=null&&hasPath(object,path,baseHas);}function hasIn(object,path){return object!=null&&hasPath(object,path,baseHasIn);}var invert=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}result[value]=key;},constant(identity));var invertBy=createInverter(function(result,value,key){if(value!=null&&typeof value.toString!='function'){value=nativeObjectToString.call(value);}if(hasOwnProperty.call(result,value)){result[value].push(key);}else {result[value]=[key];}},getIteratee);var invoke=baseRest(baseInvoke);function keys(object){return isArrayLike(object)?arrayLikeKeys(object):baseKeys(object);}function keysIn(object){return isArrayLike(object)?arrayLikeKeys(object,true):baseKeysIn(object);}function mapKeys(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,iteratee(value,key,object),value);});return result;}function mapValues(object,iteratee){var result={};iteratee=getIteratee(iteratee,3);baseForOwn(object,function(value,key,object){baseAssignValue(result,key,iteratee(value,key,object));});return result;}var merge=createAssigner(function(object,source,srcIndex){baseMerge(object,source,srcIndex);});var mergeWith=createAssigner(function(object,source,srcIndex,customizer){baseMerge(object,source,srcIndex,customizer);});var omit=flatRest(function(object,paths){var result={};if(object==null){return result;}var isDeep=false;paths=arrayMap(paths,function(path){path=castPath(path,object);isDeep||(isDeep=path.length>1);return path;});copyObject(object,getAllKeysIn(object),result);if(isDeep){result=baseClone(result,CLONE_DEEP_FLAG|CLONE_FLAT_FLAG|CLONE_SYMBOLS_FLAG,customOmitClone);}var length=paths.length;while(length--){baseUnset(result,paths[length]);}return result;});function omitBy(object,predicate){return pickBy(object,negate(getIteratee(predicate)));}var pick=flatRest(function(object,paths){return object==null?{}:basePick(object,paths);});function pickBy(object,predicate){if(object==null){return {};}var props=arrayMap(getAllKeysIn(object),function(prop){return [prop];});predicate=getIteratee(predicate);return basePickBy(object,props,function(value,path){return predicate(value,path[0]);});}function result(object,path,defaultValue){path=castPath(path,object);var index=-1,length=path.length;if(!length){length=1;object=undefined$1;}while(++index<length){var value=object==null?undefined$1:object[toKey(path[index])];if(value===undefined$1){index=length;value=defaultValue;}object=isFunction(value)?value.call(object):value;}return object;}function set(object,path,value){return object==null?object:baseSet(object,path,value);}function setWith(object,path,value,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseSet(object,path,value,customizer);}var toPairs=createToPairs(keys);var toPairsIn=createToPairs(keysIn);function transform(object,iteratee,accumulator){var isArr=isArray(object),isArrLike=isArr||isBuffer(object)||isTypedArray(object);iteratee=getIteratee(iteratee,4);if(accumulator==null){var Ctor=object&&object.constructor;if(isArrLike){accumulator=isArr?new Ctor():[];}else if(isObject(object)){accumulator=isFunction(Ctor)?baseCreate(getPrototype(object)):{};}else {accumulator={};}}(isArrLike?arrayEach:baseForOwn)(object,function(value,index,object){return iteratee(accumulator,value,index,object);});return accumulator;}function unset(object,path){return object==null?true:baseUnset(object,path);}function update(object,path,updater){return object==null?object:baseUpdate(object,path,castFunction(updater));}function updateWith(object,path,updater,customizer){customizer=typeof customizer=='function'?customizer:undefined$1;return object==null?object:baseUpdate(object,path,castFunction(updater),customizer);}function values(object){return object==null?[]:baseValues(object,keys(object));}function valuesIn(object){return object==null?[]:baseValues(object,keysIn(object));}function clamp(number,lower,upper){if(upper===undefined$1){upper=lower;lower=undefined$1;}if(upper!==undefined$1){upper=toNumber(upper);upper=upper===upper?upper:0;}if(lower!==undefined$1){lower=toNumber(lower);lower=lower===lower?lower:0;}return baseClamp(toNumber(number),lower,upper);}function inRange(number,start,end){start=toFinite(start);if(end===undefined$1){end=start;start=0;}else {end=toFinite(end);}number=toNumber(number);return baseInRange(number,start,end);}function random(lower,upper,floating){if(floating&&typeof floating!='boolean'&&isIterateeCall(lower,upper,floating)){upper=floating=undefined$1;}if(floating===undefined$1){if(typeof upper=='boolean'){floating=upper;upper=undefined$1;}else if(typeof lower=='boolean'){floating=lower;lower=undefined$1;}}if(lower===undefined$1&&upper===undefined$1){lower=0;upper=1;}else {lower=toFinite(lower);if(upper===undefined$1){upper=lower;lower=0;}else {upper=toFinite(upper);}}if(lower>upper){var temp=lower;lower=upper;upper=temp;}if(floating||lower%1||upper%1){var rand=nativeRandom();return nativeMin(lower+rand*(upper-lower+freeParseFloat('1e-'+((rand+'').length-1))),upper);}return baseRandom(lower,upper);}var camelCase=createCompounder(function(result,word,index){word=word.toLowerCase();return result+(index?capitalize(word):word);});function capitalize(string){return upperFirst(toString(string).toLowerCase());}function deburr(string){string=toString(string);return string&&string.replace(reLatin,deburrLetter).replace(reComboMark,'');}function endsWith(string,target,position){string=toString(string);target=baseToString(target);var length=string.length;position=position===undefined$1?length:baseClamp(toInteger(position),0,length);var end=position;position-=target.length;return position>=0&&string.slice(position,end)==target;}function escape(string){string=toString(string);return string&&reHasUnescapedHtml.test(string)?string.replace(reUnescapedHtml,escapeHtmlChar):string;}function escapeRegExp(string){string=toString(string);return string&&reHasRegExpChar.test(string)?string.replace(reRegExpChar,'\\$&'):string;}var kebabCase=createCompounder(function(result,word,index){return result+(index?'-':'')+word.toLowerCase();});var lowerCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toLowerCase();});var lowerFirst=createCaseFirst('toLowerCase');function pad(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;if(!length||strLength>=length){return string;}var mid=(length-strLength)/2;return createPadding(nativeFloor(mid),chars)+string+createPadding(nativeCeil(mid),chars);}function padEnd(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?string+createPadding(length-strLength,chars):string;}function padStart(string,length,chars){string=toString(string);length=toInteger(length);var strLength=length?stringSize(string):0;return length&&strLength<length?createPadding(length-strLength,chars)+string:string;}function parseInt(string,radix,guard){if(guard||radix==null){radix=0;}else if(radix){radix=+radix;}return nativeParseInt(toString(string).replace(reTrimStart,''),radix||0);}function repeat(string,n,guard){if(guard?isIterateeCall(string,n,guard):n===undefined$1){n=1;}else {n=toInteger(n);}return baseRepeat(toString(string),n);}function replace(){var args=arguments,string=toString(args[0]);return args.length<3?string:string.replace(args[1],args[2]);}var snakeCase=createCompounder(function(result,word,index){return result+(index?'_':'')+word.toLowerCase();});function split(string,separator,limit){if(limit&&typeof limit!='number'&&isIterateeCall(string,separator,limit)){separator=limit=undefined$1;}limit=limit===undefined$1?MAX_ARRAY_LENGTH:limit>>>0;if(!limit){return [];}string=toString(string);if(string&&(typeof separator=='string'||separator!=null&&!isRegExp(separator))){separator=baseToString(separator);if(!separator&&hasUnicode(string)){return castSlice(stringToArray(string),0,limit);}}return string.split(separator,limit);}var startCase=createCompounder(function(result,word,index){return result+(index?' ':'')+upperFirst(word);});function startsWith(string,target,position){string=toString(string);position=position==null?0:baseClamp(toInteger(position),0,string.length);target=baseToString(target);return string.slice(position,position+target.length)==target;}function template(string,options,guard){var settings=lodash.templateSettings;if(guard&&isIterateeCall(string,options,guard)){options=undefined$1;}string=toString(string);options=assignInWith({},options,settings,customDefaultsAssignIn);var imports=assignInWith({},options.imports,settings.imports,customDefaultsAssignIn),importsKeys=keys(imports),importsValues=baseValues(imports,importsKeys);var isEscaping,isEvaluating,index=0,interpolate=options.interpolate||reNoMatch,source="__p += '";var reDelimiters=RegExp((options.escape||reNoMatch).source+'|'+interpolate.source+'|'+(interpolate===reInterpolate?reEsTemplate:reNoMatch).source+'|'+(options.evaluate||reNoMatch).source+'|$','g');var sourceURL='//# sourceURL='+(hasOwnProperty.call(options,'sourceURL')?(options.sourceURL+'').replace(/\s/g,' '):'lodash.templateSources['+ ++templateCounter+']')+'\n';string.replace(reDelimiters,function(match,escapeValue,interpolateValue,esTemplateValue,evaluateValue,offset){interpolateValue||(interpolateValue=esTemplateValue);source+=string.slice(index,offset).replace(reUnescapedString,escapeStringChar);if(escapeValue){isEscaping=true;source+="' +\n__e("+escapeValue+") +\n'";}if(evaluateValue){isEvaluating=true;source+="';\n"+evaluateValue+";\n__p += '";}if(interpolateValue){source+="' +\n((__t = ("+interpolateValue+")) == null ? '' : __t) +\n'";}index=offset+match.length;return match;});source+="';\n";var variable=hasOwnProperty.call(options,'variable')&&options.variable;if(!variable){source='with (obj) {\n'+source+'\n}\n';}else if(reForbiddenIdentifierChars.test(variable)){throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);}source=(isEvaluating?source.replace(reEmptyStringLeading,''):source).replace(reEmptyStringMiddle,'$1').replace(reEmptyStringTrailing,'$1;');source='function('+(variable||'obj')+') {\n'+(variable?'':'obj || (obj = {});\n')+"var __t, __p = ''"+(isEscaping?', __e = _.escape':'')+(isEvaluating?', __j = Array.prototype.join;\n'+"function print() { __p += __j.call(arguments, '') }\n":';\n')+source+'return __p\n}';var result=attempt(function(){return Function(importsKeys,sourceURL+'return '+source).apply(undefined$1,importsValues);});result.source=source;if(isError(result)){throw result;}return result;}function toLower(value){return toString(value).toLowerCase();}function toUpper(value){return toString(value).toUpperCase();}function trim(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return baseTrim(string);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),chrSymbols=stringToArray(chars),start=charsStartIndex(strSymbols,chrSymbols),end=charsEndIndex(strSymbols,chrSymbols)+1;return castSlice(strSymbols,start,end).join('');}function trimEnd(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.slice(0,trimmedEndIndex(string)+1);}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),end=charsEndIndex(strSymbols,stringToArray(chars))+1;return castSlice(strSymbols,0,end).join('');}function trimStart(string,chars,guard){string=toString(string);if(string&&(guard||chars===undefined$1)){return string.replace(reTrimStart,'');}if(!string||!(chars=baseToString(chars))){return string;}var strSymbols=stringToArray(string),start=charsStartIndex(strSymbols,stringToArray(chars));return castSlice(strSymbols,start).join('');}function truncate(string,options){var length=DEFAULT_TRUNC_LENGTH,omission=DEFAULT_TRUNC_OMISSION;if(isObject(options)){var separator='separator'in options?options.separator:separator;length='length'in options?toInteger(options.length):length;omission='omission'in options?baseToString(options.omission):omission;}string=toString(string);var strLength=string.length;if(hasUnicode(string)){var strSymbols=stringToArray(string);strLength=strSymbols.length;}if(length>=strLength){return string;}var end=length-stringSize(omission);if(end<1){return omission;}var result=strSymbols?castSlice(strSymbols,0,end).join(''):string.slice(0,end);if(separator===undefined$1){return result+omission;}if(strSymbols){end+=result.length-end;}if(isRegExp(separator)){if(string.slice(end).search(separator)){var match,substring=result;if(!separator.global){separator=RegExp(separator.source,toString(reFlags.exec(separator))+'g');}separator.lastIndex=0;while(match=separator.exec(substring)){var newEnd=match.index;}result=result.slice(0,newEnd===undefined$1?end:newEnd);}}else if(string.indexOf(baseToString(separator),end)!=end){var index=result.lastIndexOf(separator);if(index>-1){result=result.slice(0,index);}}return result+omission;}function unescape(string){string=toString(string);return string&&reHasEscapedHtml.test(string)?string.replace(reEscapedHtml,unescapeHtmlChar):string;}var upperCase=createCompounder(function(result,word,index){return result+(index?' ':'')+word.toUpperCase();});var upperFirst=createCaseFirst('toUpperCase');function words(string,pattern,guard){string=toString(string);pattern=guard?undefined$1:pattern;if(pattern===undefined$1){return hasUnicodeWord(string)?unicodeWords(string):asciiWords(string);}return string.match(pattern)||[];}var attempt=baseRest(function(func,args){try{return apply(func,undefined$1,args);}catch(e){return isError(e)?e:new Error(e);}});var bindAll=flatRest(function(object,methodNames){arrayEach(methodNames,function(key){key=toKey(key);baseAssignValue(object,key,bind(object[key],object));});return object;});function cond(pairs){var length=pairs==null?0:pairs.length,toIteratee=getIteratee();pairs=!length?[]:arrayMap(pairs,function(pair){if(typeof pair[1]!='function'){throw new TypeError(FUNC_ERROR_TEXT);}return [toIteratee(pair[0]),pair[1]];});return baseRest(function(args){var index=-1;while(++index<length){var pair=pairs[index];if(apply(pair[0],this,args)){return apply(pair[1],this,args);}}});}function conforms(source){return baseConforms(baseClone(source,CLONE_DEEP_FLAG));}function constant(value){return function(){return value;};}function defaultTo(value,defaultValue){return value==null||value!==value?defaultValue:value;}var flow=createFlow();var flowRight=createFlow(true);function identity(value){return value;}function iteratee(func){return baseIteratee(typeof func=='function'?func:baseClone(func,CLONE_DEEP_FLAG));}function matches(source){return baseMatches(baseClone(source,CLONE_DEEP_FLAG));}function matchesProperty(path,srcValue){return baseMatchesProperty(path,baseClone(srcValue,CLONE_DEEP_FLAG));}var method=baseRest(function(path,args){return function(object){return baseInvoke(object,path,args);};});var methodOf=baseRest(function(object,args){return function(path){return baseInvoke(object,path,args);};});function mixin(object,source,options){var props=keys(source),methodNames=baseFunctions(source,props);if(options==null&&!(isObject(source)&&(methodNames.length||!props.length))){options=source;source=object;object=this;methodNames=baseFunctions(source,keys(source));}var chain=!(isObject(options)&&'chain'in options)||!!options.chain,isFunc=isFunction(object);arrayEach(methodNames,function(methodName){var func=source[methodName];object[methodName]=func;if(isFunc){object.prototype[methodName]=function(){var chainAll=this.__chain__;if(chain||chainAll){var result=object(this.__wrapped__),actions=result.__actions__=copyArray(this.__actions__);actions.push({'func':func,'args':arguments,'thisArg':object});result.__chain__=chainAll;return result;}return func.apply(object,arrayPush([this.value()],arguments));};}});return object;}function noConflict(){if(root._===this){root._=oldDash;}return this;}function noop(){}function nthArg(n){n=toInteger(n);return baseRest(function(args){return baseNth(args,n);});}var over=createOver(arrayMap);var overEvery=createOver(arrayEvery);var overSome=createOver(arraySome);function property(path){return isKey(path)?baseProperty(toKey(path)):basePropertyDeep(path);}function propertyOf(object){return function(path){return object==null?undefined$1:baseGet(object,path);};}var range=createRange();var rangeRight=createRange(true);function stubArray(){return [];}function stubFalse(){return false;}function stubObject(){return {};}function stubString(){return '';}function stubTrue(){return true;}function times(n,iteratee){n=toInteger(n);if(n<1||n>MAX_SAFE_INTEGER){return [];}var index=MAX_ARRAY_LENGTH,length=nativeMin(n,MAX_ARRAY_LENGTH);iteratee=getIteratee(iteratee);n-=MAX_ARRAY_LENGTH;var result=baseTimes(length,iteratee);while(++index<n){iteratee(index);}return result;}function toPath(value){if(isArray(value)){return arrayMap(value,toKey);}return isSymbol(value)?[value]:copyArray(stringToPath(toString(value)));}function uniqueId(prefix){var id=++idCounter;return toString(prefix)+id;}var add=createMathOperation(function(augend,addend){return augend+addend;},0);var ceil=createRound('ceil');var divide=createMathOperation(function(dividend,divisor){return dividend/divisor;},1);var floor=createRound('floor');function max(array){return array&&array.length?baseExtremum(array,identity,baseGt):undefined$1;}function maxBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseGt):undefined$1;}function mean(array){return baseMean(array,identity);}function meanBy(array,iteratee){return baseMean(array,getIteratee(iteratee,2));}function min(array){return array&&array.length?baseExtremum(array,identity,baseLt):undefined$1;}function minBy(array,iteratee){return array&&array.length?baseExtremum(array,getIteratee(iteratee,2),baseLt):undefined$1;}var multiply=createMathOperation(function(multiplier,multiplicand){return multiplier*multiplicand;},1);var round=createRound('round');var subtract=createMathOperation(function(minuend,subtrahend){return minuend-subtrahend;},0);function sum(array){return array&&array.length?baseSum(array,identity):0;}function sumBy(array,iteratee){return array&&array.length?baseSum(array,getIteratee(iteratee,2)):0;}lodash.after=after;lodash.ary=ary;lodash.assign=assign;lodash.assignIn=assignIn;lodash.assignInWith=assignInWith;lodash.assignWith=assignWith;lodash.at=at;lodash.before=before;lodash.bind=bind;lodash.bindAll=bindAll;lodash.bindKey=bindKey;lodash.castArray=castArray;lodash.chain=chain;lodash.chunk=chunk;lodash.compact=compact;lodash.concat=concat;lodash.cond=cond;lodash.conforms=conforms;lodash.constant=constant;lodash.countBy=countBy;lodash.create=create;lodash.curry=curry;lodash.curryRight=curryRight;lodash.debounce=debounce;lodash.defaults=defaults;lodash.defaultsDeep=defaultsDeep;lodash.defer=defer;lodash.delay=delay;lodash.difference=difference;lodash.differenceBy=differenceBy;lodash.differenceWith=differenceWith;lodash.drop=drop;lodash.dropRight=dropRight;lodash.dropRightWhile=dropRightWhile;lodash.dropWhile=dropWhile;lodash.fill=fill;lodash.filter=filter;lodash.flatMap=flatMap;lodash.flatMapDeep=flatMapDeep;lodash.flatMapDepth=flatMapDepth;lodash.flatten=flatten;lodash.flattenDeep=flattenDeep;lodash.flattenDepth=flattenDepth;lodash.flip=flip;lodash.flow=flow;lodash.flowRight=flowRight;lodash.fromPairs=fromPairs;lodash.functions=functions;lodash.functionsIn=functionsIn;lodash.groupBy=groupBy;lodash.initial=initial;lodash.intersection=intersection;lodash.intersectionBy=intersectionBy;lodash.intersectionWith=intersectionWith;lodash.invert=invert;lodash.invertBy=invertBy;lodash.invokeMap=invokeMap;lodash.iteratee=iteratee;lodash.keyBy=keyBy;lodash.keys=keys;lodash.keysIn=keysIn;lodash.map=map;lodash.mapKeys=mapKeys;lodash.mapValues=mapValues;lodash.matches=matches;lodash.matchesProperty=matchesProperty;lodash.memoize=memoize;lodash.merge=merge;lodash.mergeWith=mergeWith;lodash.method=method;lodash.methodOf=methodOf;lodash.mixin=mixin;lodash.negate=negate;lodash.nthArg=nthArg;lodash.omit=omit;lodash.omitBy=omitBy;lodash.once=once;lodash.orderBy=orderBy;lodash.over=over;lodash.overArgs=overArgs;lodash.overEvery=overEvery;lodash.overSome=overSome;lodash.partial=partial;lodash.partialRight=partialRight;lodash.partition=partition;lodash.pick=pick;lodash.pickBy=pickBy;lodash.property=property;lodash.propertyOf=propertyOf;lodash.pull=pull;lodash.pullAll=pullAll;lodash.pullAllBy=pullAllBy;lodash.pullAllWith=pullAllWith;lodash.pullAt=pullAt;lodash.range=range;lodash.rangeRight=rangeRight;lodash.rearg=rearg;lodash.reject=reject;lodash.remove=remove;lodash.rest=rest;lodash.reverse=reverse;lodash.sampleSize=sampleSize;lodash.set=set;lodash.setWith=setWith;lodash.shuffle=shuffle;lodash.slice=slice;lodash.sortBy=sortBy;lodash.sortedUniq=sortedUniq;lodash.sortedUniqBy=sortedUniqBy;lodash.split=split;lodash.spread=spread;lodash.tail=tail;lodash.take=take;lodash.takeRight=takeRight;lodash.takeRightWhile=takeRightWhile;lodash.takeWhile=takeWhile;lodash.tap=tap;lodash.throttle=throttle;lodash.thru=thru;lodash.toArray=toArray;lodash.toPairs=toPairs;lodash.toPairsIn=toPairsIn;lodash.toPath=toPath;lodash.toPlainObject=toPlainObject;lodash.transform=transform;lodash.unary=unary;lodash.union=union;lodash.unionBy=unionBy;lodash.unionWith=unionWith;lodash.uniq=uniq;lodash.uniqBy=uniqBy;lodash.uniqWith=uniqWith;lodash.unset=unset;lodash.unzip=unzip;lodash.unzipWith=unzipWith;lodash.update=update;lodash.updateWith=updateWith;lodash.values=values;lodash.valuesIn=valuesIn;lodash.without=without;lodash.words=words;lodash.wrap=wrap;lodash.xor=xor;lodash.xorBy=xorBy;lodash.xorWith=xorWith;lodash.zip=zip;lodash.zipObject=zipObject;lodash.zipObjectDeep=zipObjectDeep;lodash.zipWith=zipWith;lodash.entries=toPairs;lodash.entriesIn=toPairsIn;lodash.extend=assignIn;lodash.extendWith=assignInWith;mixin(lodash,lodash);lodash.add=add;lodash.attempt=attempt;lodash.camelCase=camelCase;lodash.capitalize=capitalize;lodash.ceil=ceil;lodash.clamp=clamp;lodash.clone=clone;lodash.cloneDeep=cloneDeep;lodash.cloneDeepWith=cloneDeepWith;lodash.cloneWith=cloneWith;lodash.conformsTo=conformsTo;lodash.deburr=deburr;lodash.defaultTo=defaultTo;lodash.divide=divide;lodash.endsWith=endsWith;lodash.eq=eq;lodash.escape=escape;lodash.escapeRegExp=escapeRegExp;lodash.every=every;lodash.find=find;lodash.findIndex=findIndex;lodash.findKey=findKey;lodash.findLast=findLast;lodash.findLastIndex=findLastIndex;lodash.findLastKey=findLastKey;lodash.floor=floor;lodash.forEach=forEach;lodash.forEachRight=forEachRight;lodash.forIn=forIn;lodash.forInRight=forInRight;lodash.forOwn=forOwn;lodash.forOwnRight=forOwnRight;lodash.get=get;lodash.gt=gt;lodash.gte=gte;lodash.has=has;lodash.hasIn=hasIn;lodash.head=head;lodash.identity=identity;lodash.includes=includes;lodash.indexOf=indexOf;lodash.inRange=inRange;lodash.invoke=invoke;lodash.isArguments=isArguments;lodash.isArray=isArray;lodash.isArrayBuffer=isArrayBuffer;lodash.isArrayLike=isArrayLike;lodash.isArrayLikeObject=isArrayLikeObject;lodash.isBoolean=isBoolean;lodash.isBuffer=isBuffer;lodash.isDate=isDate;lodash.isElement=isElement;lodash.isEmpty=isEmpty;lodash.isEqual=isEqual;lodash.isEqualWith=isEqualWith;lodash.isError=isError;lodash.isFinite=isFinite;lodash.isFunction=isFunction;lodash.isInteger=isInteger;lodash.isLength=isLength;lodash.isMap=isMap;lodash.isMatch=isMatch;lodash.isMatchWith=isMatchWith;lodash.isNaN=isNaN;lodash.isNative=isNative;lodash.isNil=isNil;lodash.isNull=isNull;lodash.isNumber=isNumber;lodash.isObject=isObject;lodash.isObjectLike=isObjectLike;lodash.isPlainObject=isPlainObject;lodash.isRegExp=isRegExp;lodash.isSafeInteger=isSafeInteger;lodash.isSet=isSet;lodash.isString=isString;lodash.isSymbol=isSymbol;lodash.isTypedArray=isTypedArray;lodash.isUndefined=isUndefined;lodash.isWeakMap=isWeakMap;lodash.isWeakSet=isWeakSet;lodash.join=join;lodash.kebabCase=kebabCase;lodash.last=last;lodash.lastIndexOf=lastIndexOf;lodash.lowerCase=lowerCase;lodash.lowerFirst=lowerFirst;lodash.lt=lt;lodash.lte=lte;lodash.max=max;lodash.maxBy=maxBy;lodash.mean=mean;lodash.meanBy=meanBy;lodash.min=min;lodash.minBy=minBy;lodash.stubArray=stubArray;lodash.stubFalse=stubFalse;lodash.stubObject=stubObject;lodash.stubString=stubString;lodash.stubTrue=stubTrue;lodash.multiply=multiply;lodash.nth=nth;lodash.noConflict=noConflict;lodash.noop=noop;lodash.now=now;lodash.pad=pad;lodash.padEnd=padEnd;lodash.padStart=padStart;lodash.parseInt=parseInt;lodash.random=random;lodash.reduce=reduce;lodash.reduceRight=reduceRight;lodash.repeat=repeat;lodash.replace=replace;lodash.result=result;lodash.round=round;lodash.runInContext=runInContext;lodash.sample=sample;lodash.size=size;lodash.snakeCase=snakeCase;lodash.some=some;lodash.sortedIndex=sortedIndex;lodash.sortedIndexBy=sortedIndexBy;lodash.sortedIndexOf=sortedIndexOf;lodash.sortedLastIndex=sortedLastIndex;lodash.sortedLastIndexBy=sortedLastIndexBy;lodash.sortedLastIndexOf=sortedLastIndexOf;lodash.startCase=startCase;lodash.startsWith=startsWith;lodash.subtract=subtract;lodash.sum=sum;lodash.sumBy=sumBy;lodash.template=template;lodash.times=times;lodash.toFinite=toFinite;lodash.toInteger=toInteger;lodash.toLength=toLength;lodash.toLower=toLower;lodash.toNumber=toNumber;lodash.toSafeInteger=toSafeInteger;lodash.toString=toString;lodash.toUpper=toUpper;lodash.trim=trim;lodash.trimEnd=trimEnd;lodash.trimStart=trimStart;lodash.truncate=truncate;lodash.unescape=unescape;lodash.uniqueId=uniqueId;lodash.upperCase=upperCase;lodash.upperFirst=upperFirst;lodash.each=forEach;lodash.eachRight=forEachRight;lodash.first=head;mixin(lodash,function(){var source={};baseForOwn(lodash,function(func,methodName){if(!hasOwnProperty.call(lodash.prototype,methodName)){source[methodName]=func;}});return source;}(),{'chain':false});lodash.VERSION=VERSION;arrayEach(['bind','bindKey','curry','curryRight','partial','partialRight'],function(methodName){lodash[methodName].placeholder=lodash;});arrayEach(['drop','take'],function(methodName,index){LazyWrapper.prototype[methodName]=function(n){n=n===undefined$1?1:nativeMax(toInteger(n),0);var result=this.__filtered__&&!index?new LazyWrapper(this):this.clone();if(result.__filtered__){result.__takeCount__=nativeMin(n,result.__takeCount__);}else {result.__views__.push({'size':nativeMin(n,MAX_ARRAY_LENGTH),'type':methodName+(result.__dir__<0?'Right':'')});}return result;};LazyWrapper.prototype[methodName+'Right']=function(n){return this.reverse()[methodName](n).reverse();};});arrayEach(['filter','map','takeWhile'],function(methodName,index){var type=index+1,isFilter=type==LAZY_FILTER_FLAG||type==LAZY_WHILE_FLAG;LazyWrapper.prototype[methodName]=function(iteratee){var result=this.clone();result.__iteratees__.push({'iteratee':getIteratee(iteratee,3),'type':type});result.__filtered__=result.__filtered__||isFilter;return result;};});arrayEach(['head','last'],function(methodName,index){var takeName='take'+(index?'Right':'');LazyWrapper.prototype[methodName]=function(){return this[takeName](1).value()[0];};});arrayEach(['initial','tail'],function(methodName,index){var dropName='drop'+(index?'':'Right');LazyWrapper.prototype[methodName]=function(){return this.__filtered__?new LazyWrapper(this):this[dropName](1);};});LazyWrapper.prototype.compact=function(){return this.filter(identity);};LazyWrapper.prototype.find=function(predicate){return this.filter(predicate).head();};LazyWrapper.prototype.findLast=function(predicate){return this.reverse().find(predicate);};LazyWrapper.prototype.invokeMap=baseRest(function(path,args){if(typeof path=='function'){return new LazyWrapper(this);}return this.map(function(value){return baseInvoke(value,path,args);});});LazyWrapper.prototype.reject=function(predicate){return this.filter(negate(getIteratee(predicate)));};LazyWrapper.prototype.slice=function(start,end){start=toInteger(start);var result=this;if(result.__filtered__&&(start>0||end<0)){return new LazyWrapper(result);}if(start<0){result=result.takeRight(-start);}else if(start){result=result.drop(start);}if(end!==undefined$1){end=toInteger(end);result=end<0?result.dropRight(-end):result.take(end-start);}return result;};LazyWrapper.prototype.takeRightWhile=function(predicate){return this.reverse().takeWhile(predicate).reverse();};LazyWrapper.prototype.toArray=function(){return this.take(MAX_ARRAY_LENGTH);};baseForOwn(LazyWrapper.prototype,function(func,methodName){var checkIteratee=/^(?:filter|find|map|reject)|While$/.test(methodName),isTaker=/^(?:head|last)$/.test(methodName),lodashFunc=lodash[isTaker?'take'+(methodName=='last'?'Right':''):methodName],retUnwrapped=isTaker||/^find/.test(methodName);if(!lodashFunc){return;}lodash.prototype[methodName]=function(){var value=this.__wrapped__,args=isTaker?[1]:arguments,isLazy=value instanceof LazyWrapper,iteratee=args[0],useLazy=isLazy||isArray(value);var interceptor=function interceptor(value){var result=lodashFunc.apply(lodash,arrayPush([value],args));return isTaker&&chainAll?result[0]:result;};if(useLazy&&checkIteratee&&typeof iteratee=='function'&&iteratee.length!=1){isLazy=useLazy=false;}var chainAll=this.__chain__,isHybrid=!!this.__actions__.length,isUnwrapped=retUnwrapped&&!chainAll,onlyLazy=isLazy&&!isHybrid;if(!retUnwrapped&&useLazy){value=onlyLazy?value:new LazyWrapper(this);var result=func.apply(value,args);result.__actions__.push({'func':thru,'args':[interceptor],'thisArg':undefined$1});return new LodashWrapper(result,chainAll);}if(isUnwrapped&&onlyLazy){return func.apply(this,args);}result=this.thru(interceptor);return isUnwrapped?isTaker?result.value()[0]:result.value():result;};});arrayEach(['pop','push','shift','sort','splice','unshift'],function(methodName){var func=arrayProto[methodName],chainName=/^(?:push|sort|unshift)$/.test(methodName)?'tap':'thru',retUnwrapped=/^(?:pop|shift)$/.test(methodName);lodash.prototype[methodName]=function(){var args=arguments;if(retUnwrapped&&!this.__chain__){var value=this.value();return func.apply(isArray(value)?value:[],args);}return this[chainName](function(value){return func.apply(isArray(value)?value:[],args);});};});baseForOwn(LazyWrapper.prototype,function(func,methodName){var lodashFunc=lodash[methodName];if(lodashFunc){var key=lodashFunc.name+'';if(!hasOwnProperty.call(realNames,key)){realNames[key]=[];}realNames[key].push({'name':methodName,'func':lodashFunc});}});realNames[createHybrid(undefined$1,WRAP_BIND_KEY_FLAG).name]=[{'name':'wrapper','func':undefined$1}];LazyWrapper.prototype.clone=lazyClone;LazyWrapper.prototype.reverse=lazyReverse;LazyWrapper.prototype.value=lazyValue;lodash.prototype.at=wrapperAt;lodash.prototype.chain=wrapperChain;lodash.prototype.commit=wrapperCommit;lodash.prototype.next=wrapperNext;lodash.prototype.plant=wrapperPlant;lodash.prototype.reverse=wrapperReverse;lodash.prototype.toJSON=lodash.prototype.valueOf=lodash.prototype.value=wrapperValue;lodash.prototype.first=lodash.prototype.head;if(symIterator){lodash.prototype[symIterator]=wrapperToIterator;}return lodash;};var _=runInContext();if(freeModule){(freeModule.exports=_)._=_;freeExports._=_;}else {root._=_;}}).call(commonjsGlobal);
	});

	function debounce$1(func, delay) {
	  var debounceTimer;
	  return function () {
	    var context = this;
	    var args = arguments;
	    clearTimeout(debounceTimer);
	    debounceTimer = setTimeout(function () {
	      return func.apply(context, args);
	    }, delay);
	  };
	}

	function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$7(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
	function getParameterByName(name, url) {
	  if (!url) {
	    url = window.location.href;
	  }

	  if (!name) return;
	  name = name.replace(/[[\]]/g, "\\$&");
	  var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
	      results = regex.exec(url);
	  if (!results) return null;
	  if (!results[2]) return "";
	  return decodeURIComponent(results[2].replace(/\+/g, " "));
	}
	function selectorHelper(_ref, callback) {
	  var selector = _ref.selector,
	      defaultSelector = _ref.defaultSelector;

	  if (selector instanceof Element) {
	    return callback(selector);
	  } else if (selector instanceof NodeList) {
	    return Array.from(selector).map(function (element) {
	      return callback(element);
	    });
	  } else {
	    var modifiedSelector = lodash.isPlainObject(selector) ? defaultSelector : selector || defaultSelector;
	    var listOfDropdowns = Array.from(document.querySelectorAll(modifiedSelector));
	    return listOfDropdowns.length === 1 ? callback(listOfDropdowns[0]) : listOfDropdowns.map(function (dropdown) {
	      return callback(dropdown);
	    });
	  }
	}
	function flattenObject(ob, prefix) {
	  var toReturn = {};
	  prefix = prefix ? prefix + "." : "";

	  for (var i in ob) {
	    if (!ob.hasOwnProperty(i)) continue;

	    if (_typeof(ob[i]) === "object" && ob[i] !== null) {
	      Object.assign(toReturn, flattenObject(ob[i], prefix + i));
	    } else {
	      toReturn[prefix + i] = ob[i];
	    }
	  }

	  return toReturn;
	}
	function unflattenObject(ob) {
	  var result = {};

	  var _loop = function _loop(i) {
	    if (ob.hasOwnProperty(i)) {
	      var keys = i.split(".");
	      keys.reduce(function (r, e, j) {
	        return r[e] || (r[e] = isNaN(Number(keys[j + 1])) ? keys.length - 1 === j ? ob[i] : {} : []);
	      }, result);
	    }
	  };

	  for (var i in ob) {
	    _loop(i);
	  }

	  return result;
	}
	function deepSpread() {
	  for (var _len = arguments.length, objs = new Array(_len), _key = 0; _key < _len; _key++) {
	    objs[_key] = arguments[_key];
	  }

	  var flatenedObjs = objs.map(function (object) {
	    return flattenObject(object);
	  });
	  var mergedFlatObjs = flatenedObjs.reduce(function (prev, cur) {
	    return _objectSpread$7(_objectSpread$7({}, prev), cur);
	  }, {});
	  return unflattenObject(mergedFlatObjs);
	}

	var Function$1 = global_1.Function;
	var concat = functionUncurryThis([].concat);
	var join = functionUncurryThis([].join);
	var factories = {};

	var construct = function (C, argsLength, args) {
	  if (!hasOwnProperty_1(factories, argsLength)) {
	    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
	    factories[argsLength] = Function$1('C,a', 'return new C(' + join(list, ',') + ')');
	  } return factories[argsLength](C, args);
	};

	// `Function.prototype.bind` method implementation
	// https://tc39.es/ecma262/#sec-function.prototype.bind
	var functionBind = functionBindNative ? Function$1.bind : function bind(that /* , ...args */) {
	  var F = aCallable(this);
	  var Prototype = F.prototype;
	  var partArgs = arraySlice$1(arguments, 1);
	  var boundFunction = function bound(/* args... */) {
	    var args = concat(partArgs, arraySlice$1(arguments));
	    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
	  };
	  if (isObject$1(Prototype)) boundFunction.prototype = Prototype;
	  return boundFunction;
	};

	var nativeConstruct = getBuiltIn('Reflect', 'construct');
	var ObjectPrototype = Object.prototype;
	var push = [].push;

	// `Reflect.construct` method
	// https://tc39.es/ecma262/#sec-reflect.construct
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function () {
	  function F() { /* empty */ }
	  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
	});

	var ARGS_BUG = !fails(function () {
	  nativeConstruct(function () { /* empty */ });
	});

	var FORCED$1 = NEW_TARGET_BUG || ARGS_BUG;

	_export({ target: 'Reflect', stat: true, forced: FORCED$1, sham: FORCED$1 }, {
	  construct: function construct(Target, args /* , newTarget */) {
	    aConstructor(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
	    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
	    if (Target == newTarget) {
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch (args.length) {
	        case 0: return new Target();
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      functionApply(push, $args, args);
	      return new (functionApply(functionBind, Target, $args))();
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto = newTarget.prototype;
	    var instance = objectCreate(isObject$1(proto) ? proto : ObjectPrototype);
	    var result = functionApply(Target, instance, args);
	    return isObject$1(result) ? result : instance;
	  }
	});

	function _classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	}

	function _defineProperties(target, props) {
	  for (var i = 0; i < props.length; i++) {
	    var descriptor = props[i];
	    descriptor.enumerable = descriptor.enumerable || false;
	    descriptor.configurable = true;
	    if ("value" in descriptor) descriptor.writable = true;
	    Object.defineProperty(target, descriptor.key, descriptor);
	  }
	}

	function _createClass(Constructor, protoProps, staticProps) {
	  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
	  if (staticProps) _defineProperties(Constructor, staticProps);
	  Object.defineProperty(Constructor, "prototype", {
	    writable: false
	  });
	  return Constructor;
	}

	// `Object.setPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.setprototypeof
	_export({ target: 'Object', stat: true }, {
	  setPrototypeOf: objectSetPrototypeOf
	});

	function _setPrototypeOf(o, p) {
	  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
	    o.__proto__ = p;
	    return o;
	  };
	  return _setPrototypeOf(o, p);
	}

	function _inherits(subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function");
	  }

	  subClass.prototype = Object.create(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      writable: true,
	      configurable: true
	    }
	  });
	  Object.defineProperty(subClass, "prototype", {
	    writable: false
	  });
	  if (superClass) _setPrototypeOf(subClass, superClass);
	}

	function _assertThisInitialized(self) {
	  if (self === void 0) {
	    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
	  }

	  return self;
	}

	function _possibleConstructorReturn(self, call) {
	  if (call && (_typeof(call) === "object" || typeof call === "function")) {
	    return call;
	  } else if (call !== void 0) {
	    throw new TypeError("Derived constructors may only return object or undefined");
	  }

	  return _assertThisInitialized(self);
	}

	var FAILS_ON_PRIMITIVES$4 = fails(function () { objectGetPrototypeOf(1); });

	// `Object.getPrototypeOf` method
	// https://tc39.es/ecma262/#sec-object.getprototypeof
	_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$4, sham: !correctPrototypeGetter }, {
	  getPrototypeOf: function getPrototypeOf(it) {
	    return objectGetPrototypeOf(toObject(it));
	  }
	});

	function _getPrototypeOf(o) {
	  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {
	    return o.__proto__ || Object.getPrototypeOf(o);
	  };
	  return _getPrototypeOf(o);
	}

	/**!
	 * @fileOverview Kickass library to create and place poppers near their reference elements.
	 * @version 1.16.1
	 * @license
	 * Copyright (c) 2016 Federico Zivolo and contributors
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining a copy
	 * of this software and associated documentation files (the "Software"), to deal
	 * in the Software without restriction, including without limitation the rights
	 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	 * copies of the Software, and to permit persons to whom the Software is
	 * furnished to do so, subject to the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be included in all
	 * copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	 * SOFTWARE.
	 */
	var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

	var timeoutDuration = function () {
	  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];

	  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
	    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
	      return 1;
	    }
	  }

	  return 0;
	}();

	function microtaskDebounce(fn) {
	  var called = false;
	  return function () {
	    if (called) {
	      return;
	    }

	    called = true;
	    window.Promise.resolve().then(function () {
	      called = false;
	      fn();
	    });
	  };
	}

	function taskDebounce(fn) {
	  var scheduled = false;
	  return function () {
	    if (!scheduled) {
	      scheduled = true;
	      setTimeout(function () {
	        scheduled = false;
	        fn();
	      }, timeoutDuration);
	    }
	  };
	}

	var supportsMicroTasks = isBrowser && window.Promise;
	var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

	function isFunction$1(functionToCheck) {
	  var getType = {};
	  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
	}

	function getStyleComputedProperty(element, property) {
	  if (element.nodeType !== 1) {
	    return [];
	  }

	  var window = element.ownerDocument.defaultView;
	  var css = window.getComputedStyle(element, null);
	  return property ? css[property] : css;
	}

	function getParentNode(element) {
	  if (element.nodeName === 'HTML') {
	    return element;
	  }

	  return element.parentNode || element.host;
	}

	function getScrollParent(element) {
	  if (!element) {
	    return document.body;
	  }

	  switch (element.nodeName) {
	    case 'HTML':
	    case 'BODY':
	      return element.ownerDocument.body;

	    case '#document':
	      return element.body;
	  }

	  var _getStyleComputedProp = getStyleComputedProperty(element),
	      overflow = _getStyleComputedProp.overflow,
	      overflowX = _getStyleComputedProp.overflowX,
	      overflowY = _getStyleComputedProp.overflowY;

	  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
	    return element;
	  }

	  return getScrollParent(getParentNode(element));
	}

	function getReferenceNode(reference) {
	  return reference && reference.referenceNode ? reference.referenceNode : reference;
	}

	var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
	var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

	function isIE(version) {
	  if (version === 11) {
	    return isIE11;
	  }

	  if (version === 10) {
	    return isIE10;
	  }

	  return isIE11 || isIE10;
	}

	function getOffsetParent(element) {
	  if (!element) {
	    return document.documentElement;
	  }

	  var noOffsetParent = isIE(10) ? document.body : null;
	  var offsetParent = element.offsetParent || null;

	  while (offsetParent === noOffsetParent && element.nextElementSibling) {
	    offsetParent = (element = element.nextElementSibling).offsetParent;
	  }

	  var nodeName = offsetParent && offsetParent.nodeName;

	  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
	    return element ? element.ownerDocument.documentElement : document.documentElement;
	  }

	  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
	    return getOffsetParent(offsetParent);
	  }

	  return offsetParent;
	}

	function isOffsetContainer(element) {
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY') {
	    return false;
	  }

	  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
	}

	function getRoot(node) {
	  if (node.parentNode !== null) {
	    return getRoot(node.parentNode);
	  }

	  return node;
	}

	function findCommonOffsetParent(element1, element2) {
	  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
	    return document.documentElement;
	  }

	  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
	  var start = order ? element1 : element2;
	  var end = order ? element2 : element1;
	  var range = document.createRange();
	  range.setStart(start, 0);
	  range.setEnd(end, 0);
	  var commonAncestorContainer = range.commonAncestorContainer;

	  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
	    if (isOffsetContainer(commonAncestorContainer)) {
	      return commonAncestorContainer;
	    }

	    return getOffsetParent(commonAncestorContainer);
	  }

	  var element1root = getRoot(element1);

	  if (element1root.host) {
	    return findCommonOffsetParent(element1root.host, element2);
	  } else {
	    return findCommonOffsetParent(element1, getRoot(element2).host);
	  }
	}

	function getScroll(element) {
	  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
	  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    var html = element.ownerDocument.documentElement;
	    var scrollingElement = element.ownerDocument.scrollingElement || html;
	    return scrollingElement[upperSide];
	  }

	  return element[upperSide];
	}

	function includeScroll(rect, element) {
	  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	  var scrollTop = getScroll(element, 'top');
	  var scrollLeft = getScroll(element, 'left');
	  var modifier = subtract ? -1 : 1;
	  rect.top += scrollTop * modifier;
	  rect.bottom += scrollTop * modifier;
	  rect.left += scrollLeft * modifier;
	  rect.right += scrollLeft * modifier;
	  return rect;
	}

	function getBordersSize(styles, axis) {
	  var sideA = axis === 'x' ? 'Left' : 'Top';
	  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
	  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
	}

	function getSize(axis, body, html, computedStyle) {
	  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
	}

	function getWindowSizes(document) {
	  var body = document.body;
	  var html = document.documentElement;
	  var computedStyle = isIE(10) && getComputedStyle(html);
	  return {
	    height: getSize('Height', body, html, computedStyle),
	    width: getSize('Width', body, html, computedStyle)
	  };
	}

	var classCallCheck = function classCallCheck(instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

	var createClass = function () {
	  function defineProperties(target, props) {
	    for (var i = 0; i < props.length; i++) {
	      var descriptor = props[i];
	      descriptor.enumerable = descriptor.enumerable || false;
	      descriptor.configurable = true;
	      if ("value" in descriptor) descriptor.writable = true;
	      Object.defineProperty(target, descriptor.key, descriptor);
	    }
	  }

	  return function (Constructor, protoProps, staticProps) {
	    if (protoProps) defineProperties(Constructor.prototype, protoProps);
	    if (staticProps) defineProperties(Constructor, staticProps);
	    return Constructor;
	  };
	}();

	var defineProperty$1 = function defineProperty(obj, key, value) {
	  if (key in obj) {
	    Object.defineProperty(obj, key, {
	      value: value,
	      enumerable: true,
	      configurable: true,
	      writable: true
	    });
	  } else {
	    obj[key] = value;
	  }

	  return obj;
	};

	var _extends = Object.assign || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

	function getClientRect(offsets) {
	  return _extends({}, offsets, {
	    right: offsets.left + offsets.width,
	    bottom: offsets.top + offsets.height
	  });
	}

	function getBoundingClientRect(element) {
	  var rect = {};

	  try {
	    if (isIE(10)) {
	      rect = element.getBoundingClientRect();
	      var scrollTop = getScroll(element, 'top');
	      var scrollLeft = getScroll(element, 'left');
	      rect.top += scrollTop;
	      rect.left += scrollLeft;
	      rect.bottom += scrollTop;
	      rect.right += scrollLeft;
	    } else {
	      rect = element.getBoundingClientRect();
	    }
	  } catch (e) {}

	  var result = {
	    left: rect.left,
	    top: rect.top,
	    width: rect.right - rect.left,
	    height: rect.bottom - rect.top
	  };
	  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
	  var width = sizes.width || element.clientWidth || result.width;
	  var height = sizes.height || element.clientHeight || result.height;
	  var horizScrollbar = element.offsetWidth - width;
	  var vertScrollbar = element.offsetHeight - height;

	  if (horizScrollbar || vertScrollbar) {
	    var styles = getStyleComputedProperty(element);
	    horizScrollbar -= getBordersSize(styles, 'x');
	    vertScrollbar -= getBordersSize(styles, 'y');
	    result.width -= horizScrollbar;
	    result.height -= vertScrollbar;
	  }

	  return getClientRect(result);
	}

	function getOffsetRectRelativeToArbitraryNode(children, parent) {
	  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
	  var isIE10 = isIE(10);
	  var isHTML = parent.nodeName === 'HTML';
	  var childrenRect = getBoundingClientRect(children);
	  var parentRect = getBoundingClientRect(parent);
	  var scrollParent = getScrollParent(children);
	  var styles = getStyleComputedProperty(parent);
	  var borderTopWidth = parseFloat(styles.borderTopWidth);
	  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

	  if (fixedPosition && isHTML) {
	    parentRect.top = Math.max(parentRect.top, 0);
	    parentRect.left = Math.max(parentRect.left, 0);
	  }

	  var offsets = getClientRect({
	    top: childrenRect.top - parentRect.top - borderTopWidth,
	    left: childrenRect.left - parentRect.left - borderLeftWidth,
	    width: childrenRect.width,
	    height: childrenRect.height
	  });
	  offsets.marginTop = 0;
	  offsets.marginLeft = 0;

	  if (!isIE10 && isHTML) {
	    var marginTop = parseFloat(styles.marginTop);
	    var marginLeft = parseFloat(styles.marginLeft);
	    offsets.top -= borderTopWidth - marginTop;
	    offsets.bottom -= borderTopWidth - marginTop;
	    offsets.left -= borderLeftWidth - marginLeft;
	    offsets.right -= borderLeftWidth - marginLeft;
	    offsets.marginTop = marginTop;
	    offsets.marginLeft = marginLeft;
	  }

	  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
	    offsets = includeScroll(offsets, parent);
	  }

	  return offsets;
	}

	function getViewportOffsetRectRelativeToArtbitraryNode(element) {
	  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  var html = element.ownerDocument.documentElement;
	  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
	  var width = Math.max(html.clientWidth, window.innerWidth || 0);
	  var height = Math.max(html.clientHeight, window.innerHeight || 0);
	  var scrollTop = !excludeScroll ? getScroll(html) : 0;
	  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
	  var offset = {
	    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
	    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
	    width: width,
	    height: height
	  };
	  return getClientRect(offset);
	}

	function isFixed(element) {
	  var nodeName = element.nodeName;

	  if (nodeName === 'BODY' || nodeName === 'HTML') {
	    return false;
	  }

	  if (getStyleComputedProperty(element, 'position') === 'fixed') {
	    return true;
	  }

	  var parentNode = getParentNode(element);

	  if (!parentNode) {
	    return false;
	  }

	  return isFixed(parentNode);
	}

	function getFixedPositionOffsetParent(element) {
	  if (!element || !element.parentElement || isIE()) {
	    return document.documentElement;
	  }

	  var el = element.parentElement;

	  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
	    el = el.parentElement;
	  }

	  return el || document.documentElement;
	}

	function getBoundaries(popper, reference, padding, boundariesElement) {
	  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
	  var boundaries = {
	    top: 0,
	    left: 0
	  };
	  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

	  if (boundariesElement === 'viewport') {
	    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
	  } else {
	    var boundariesNode = void 0;

	    if (boundariesElement === 'scrollParent') {
	      boundariesNode = getScrollParent(getParentNode(reference));

	      if (boundariesNode.nodeName === 'BODY') {
	        boundariesNode = popper.ownerDocument.documentElement;
	      }
	    } else if (boundariesElement === 'window') {
	      boundariesNode = popper.ownerDocument.documentElement;
	    } else {
	      boundariesNode = boundariesElement;
	    }

	    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

	    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
	      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
	          height = _getWindowSizes.height,
	          width = _getWindowSizes.width;

	      boundaries.top += offsets.top - offsets.marginTop;
	      boundaries.bottom = height + offsets.top;
	      boundaries.left += offsets.left - offsets.marginLeft;
	      boundaries.right = width + offsets.left;
	    } else {
	      boundaries = offsets;
	    }
	  }

	  padding = padding || 0;
	  var isPaddingNumber = typeof padding === 'number';
	  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
	  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
	  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
	  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
	  return boundaries;
	}

	function getArea(_ref) {
	  var width = _ref.width,
	      height = _ref.height;
	  return width * height;
	}

	function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
	  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

	  if (placement.indexOf('auto') === -1) {
	    return placement;
	  }

	  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
	  var rects = {
	    top: {
	      width: boundaries.width,
	      height: refRect.top - boundaries.top
	    },
	    right: {
	      width: boundaries.right - refRect.right,
	      height: boundaries.height
	    },
	    bottom: {
	      width: boundaries.width,
	      height: boundaries.bottom - refRect.bottom
	    },
	    left: {
	      width: refRect.left - boundaries.left,
	      height: boundaries.height
	    }
	  };
	  var sortedAreas = Object.keys(rects).map(function (key) {
	    return _extends({
	      key: key
	    }, rects[key], {
	      area: getArea(rects[key])
	    });
	  }).sort(function (a, b) {
	    return b.area - a.area;
	  });
	  var filteredAreas = sortedAreas.filter(function (_ref2) {
	    var width = _ref2.width,
	        height = _ref2.height;
	    return width >= popper.clientWidth && height >= popper.clientHeight;
	  });
	  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
	  var variation = placement.split('-')[1];
	  return computedPlacement + (variation ? '-' + variation : '');
	}

	function getReferenceOffsets(state, popper, reference) {
	  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
	  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
	  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
	}

	function getOuterSizes(element) {
	  var window = element.ownerDocument.defaultView;
	  var styles = window.getComputedStyle(element);
	  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
	  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
	  var result = {
	    width: element.offsetWidth + y,
	    height: element.offsetHeight + x
	  };
	  return result;
	}

	function getOppositePlacement(placement) {
	  var hash = {
	    left: 'right',
	    right: 'left',
	    bottom: 'top',
	    top: 'bottom'
	  };
	  return placement.replace(/left|right|bottom|top/g, function (matched) {
	    return hash[matched];
	  });
	}

	function getPopperOffsets(popper, referenceOffsets, placement) {
	  placement = placement.split('-')[0];
	  var popperRect = getOuterSizes(popper);
	  var popperOffsets = {
	    width: popperRect.width,
	    height: popperRect.height
	  };
	  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
	  var mainSide = isHoriz ? 'top' : 'left';
	  var secondarySide = isHoriz ? 'left' : 'top';
	  var measurement = isHoriz ? 'height' : 'width';
	  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
	  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

	  if (placement === secondarySide) {
	    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
	  } else {
	    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
	  }

	  return popperOffsets;
	}

	function find$1(arr, check) {
	  if (Array.prototype.find) {
	    return arr.find(check);
	  }

	  return arr.filter(check)[0];
	}

	function findIndex$1(arr, prop, value) {
	  if (Array.prototype.findIndex) {
	    return arr.findIndex(function (cur) {
	      return cur[prop] === value;
	    });
	  }

	  var match = find$1(arr, function (obj) {
	    return obj[prop] === value;
	  });
	  return arr.indexOf(match);
	}

	function runModifiers(modifiers, data, ends) {
	  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex$1(modifiers, 'name', ends));
	  modifiersToRun.forEach(function (modifier) {
	    if (modifier['function']) {
	      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
	    }

	    var fn = modifier['function'] || modifier.fn;

	    if (modifier.enabled && isFunction$1(fn)) {
	      data.offsets.popper = getClientRect(data.offsets.popper);
	      data.offsets.reference = getClientRect(data.offsets.reference);
	      data = fn(data, modifier);
	    }
	  });
	  return data;
	}

	function update() {
	  if (this.state.isDestroyed) {
	    return;
	  }

	  var data = {
	    instance: this,
	    styles: {},
	    arrowStyles: {},
	    attributes: {},
	    flipped: false,
	    offsets: {}
	  };
	  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
	  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
	  data.originalPlacement = data.placement;
	  data.positionFixed = this.options.positionFixed;
	  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
	  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';
	  data = runModifiers(this.modifiers, data);

	  if (!this.state.isCreated) {
	    this.state.isCreated = true;
	    this.options.onCreate(data);
	  } else {
	    this.options.onUpdate(data);
	  }
	}

	function isModifierEnabled(modifiers, modifierName) {
	  return modifiers.some(function (_ref) {
	    var name = _ref.name,
	        enabled = _ref.enabled;
	    return enabled && name === modifierName;
	  });
	}

	function getSupportedPropertyName(property) {
	  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
	  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

	  for (var i = 0; i < prefixes.length; i++) {
	    var prefix = prefixes[i];
	    var toCheck = prefix ? '' + prefix + upperProp : property;

	    if (typeof document.body.style[toCheck] !== 'undefined') {
	      return toCheck;
	    }
	  }

	  return null;
	}

	function destroy() {
	  this.state.isDestroyed = true;

	  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
	    this.popper.removeAttribute('x-placement');
	    this.popper.style.position = '';
	    this.popper.style.top = '';
	    this.popper.style.left = '';
	    this.popper.style.right = '';
	    this.popper.style.bottom = '';
	    this.popper.style.willChange = '';
	    this.popper.style[getSupportedPropertyName('transform')] = '';
	  }

	  this.disableEventListeners();

	  if (this.options.removeOnDestroy) {
	    this.popper.parentNode.removeChild(this.popper);
	  }

	  return this;
	}

	function getWindow(element) {
	  var ownerDocument = element.ownerDocument;
	  return ownerDocument ? ownerDocument.defaultView : window;
	}

	function attachToScrollParents(scrollParent, event, callback, scrollParents) {
	  var isBody = scrollParent.nodeName === 'BODY';
	  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
	  target.addEventListener(event, callback, {
	    passive: true
	  });

	  if (!isBody) {
	    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
	  }

	  scrollParents.push(target);
	}

	function setupEventListeners(reference, options, state, updateBound) {
	  state.updateBound = updateBound;
	  getWindow(reference).addEventListener('resize', state.updateBound, {
	    passive: true
	  });
	  var scrollElement = getScrollParent(reference);
	  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
	  state.scrollElement = scrollElement;
	  state.eventsEnabled = true;
	  return state;
	}

	function enableEventListeners() {
	  if (!this.state.eventsEnabled) {
	    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
	  }
	}

	function removeEventListeners(reference, state) {
	  getWindow(reference).removeEventListener('resize', state.updateBound);
	  state.scrollParents.forEach(function (target) {
	    target.removeEventListener('scroll', state.updateBound);
	  });
	  state.updateBound = null;
	  state.scrollParents = [];
	  state.scrollElement = null;
	  state.eventsEnabled = false;
	  return state;
	}

	function disableEventListeners() {
	  if (this.state.eventsEnabled) {
	    cancelAnimationFrame(this.scheduleUpdate);
	    this.state = removeEventListeners(this.reference, this.state);
	  }
	}

	function isNumeric(n) {
	  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
	}

	function setStyles(element, styles) {
	  Object.keys(styles).forEach(function (prop) {
	    var unit = '';

	    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
	      unit = 'px';
	    }

	    element.style[prop] = styles[prop] + unit;
	  });
	}

	function setAttributes(element, attributes) {
	  Object.keys(attributes).forEach(function (prop) {
	    var value = attributes[prop];

	    if (value !== false) {
	      element.setAttribute(prop, attributes[prop]);
	    } else {
	      element.removeAttribute(prop);
	    }
	  });
	}

	function applyStyle(data) {
	  setStyles(data.instance.popper, data.styles);
	  setAttributes(data.instance.popper, data.attributes);

	  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
	    setStyles(data.arrowElement, data.arrowStyles);
	  }

	  return data;
	}

	function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
	  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
	  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
	  popper.setAttribute('x-placement', placement);
	  setStyles(popper, {
	    position: options.positionFixed ? 'fixed' : 'absolute'
	  });
	  return options;
	}

	function getRoundedOffsets(data, shouldRound) {
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	  var round = Math.round,
	      floor = Math.floor;

	  var noRound = function noRound(v) {
	    return v;
	  };

	  var referenceWidth = round(reference.width);
	  var popperWidth = round(popper.width);
	  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
	  var isVariation = data.placement.indexOf('-') !== -1;
	  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
	  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
	  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
	  var verticalToInteger = !shouldRound ? noRound : round;
	  return {
	    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
	    top: verticalToInteger(popper.top),
	    bottom: verticalToInteger(popper.bottom),
	    right: horizontalToInteger(popper.right)
	  };
	}

	var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

	function computeStyle(data, options) {
	  var x = options.x,
	      y = options.y;
	  var popper = data.offsets.popper;
	  var legacyGpuAccelerationOption = find$1(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'applyStyle';
	  }).gpuAcceleration;

	  if (legacyGpuAccelerationOption !== undefined) {
	    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
	  }

	  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
	  var offsetParent = getOffsetParent(data.instance.popper);
	  var offsetParentRect = getBoundingClientRect(offsetParent);
	  var styles = {
	    position: popper.position
	  };
	  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
	  var sideA = x === 'bottom' ? 'top' : 'bottom';
	  var sideB = y === 'right' ? 'left' : 'right';
	  var prefixedProperty = getSupportedPropertyName('transform');
	  var left = void 0,
	      top = void 0;

	  if (sideA === 'bottom') {
	    if (offsetParent.nodeName === 'HTML') {
	      top = -offsetParent.clientHeight + offsets.bottom;
	    } else {
	      top = -offsetParentRect.height + offsets.bottom;
	    }
	  } else {
	    top = offsets.top;
	  }

	  if (sideB === 'right') {
	    if (offsetParent.nodeName === 'HTML') {
	      left = -offsetParent.clientWidth + offsets.right;
	    } else {
	      left = -offsetParentRect.width + offsets.right;
	    }
	  } else {
	    left = offsets.left;
	  }

	  if (gpuAcceleration && prefixedProperty) {
	    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
	    styles[sideA] = 0;
	    styles[sideB] = 0;
	    styles.willChange = 'transform';
	  } else {
	    var invertTop = sideA === 'bottom' ? -1 : 1;
	    var invertLeft = sideB === 'right' ? -1 : 1;
	    styles[sideA] = top * invertTop;
	    styles[sideB] = left * invertLeft;
	    styles.willChange = sideA + ', ' + sideB;
	  }

	  var attributes = {
	    'x-placement': data.placement
	  };
	  data.attributes = _extends({}, attributes, data.attributes);
	  data.styles = _extends({}, styles, data.styles);
	  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
	  return data;
	}

	function isModifierRequired(modifiers, requestingName, requestedName) {
	  var requesting = find$1(modifiers, function (_ref) {
	    var name = _ref.name;
	    return name === requestingName;
	  });
	  var isRequired = !!requesting && modifiers.some(function (modifier) {
	    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
	  });

	  if (!isRequired) {
	    var _requesting = '`' + requestingName + '`';

	    var requested = '`' + requestedName + '`';
	    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
	  }

	  return isRequired;
	}

	function arrow(data, options) {
	  var _data$offsets$arrow;

	  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
	    return data;
	  }

	  var arrowElement = options.element;

	  if (typeof arrowElement === 'string') {
	    arrowElement = data.instance.popper.querySelector(arrowElement);

	    if (!arrowElement) {
	      return data;
	    }
	  } else {
	    if (!data.instance.popper.contains(arrowElement)) {
	      console.warn('WARNING: `arrow.element` must be child of its popper element!');
	      return data;
	    }
	  }

	  var placement = data.placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
	  var len = isVertical ? 'height' : 'width';
	  var sideCapitalized = isVertical ? 'Top' : 'Left';
	  var side = sideCapitalized.toLowerCase();
	  var altSide = isVertical ? 'left' : 'top';
	  var opSide = isVertical ? 'bottom' : 'right';
	  var arrowElementSize = getOuterSizes(arrowElement)[len];

	  if (reference[opSide] - arrowElementSize < popper[side]) {
	    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
	  }

	  if (reference[side] + arrowElementSize > popper[opSide]) {
	    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
	  }

	  data.offsets.popper = getClientRect(data.offsets.popper);
	  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
	  var css = getStyleComputedProperty(data.instance.popper);
	  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
	  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
	  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
	  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
	  data.arrowElement = arrowElement;
	  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty$1(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty$1(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
	  return data;
	}

	function getOppositeVariation(variation) {
	  if (variation === 'end') {
	    return 'start';
	  } else if (variation === 'start') {
	    return 'end';
	  }

	  return variation;
	}

	var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];
	var validPlacements = placements.slice(3);

	function clockwise(placement) {
	  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
	  var index = validPlacements.indexOf(placement);
	  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
	  return counter ? arr.reverse() : arr;
	}

	var BEHAVIORS = {
	  FLIP: 'flip',
	  CLOCKWISE: 'clockwise',
	  COUNTERCLOCKWISE: 'counterclockwise'
	};

	function flip(data, options) {
	  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
	    return data;
	  }

	  if (data.flipped && data.placement === data.originalPlacement) {
	    return data;
	  }

	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
	  var placement = data.placement.split('-')[0];
	  var placementOpposite = getOppositePlacement(placement);
	  var variation = data.placement.split('-')[1] || '';
	  var flipOrder = [];

	  switch (options.behavior) {
	    case BEHAVIORS.FLIP:
	      flipOrder = [placement, placementOpposite];
	      break;

	    case BEHAVIORS.CLOCKWISE:
	      flipOrder = clockwise(placement);
	      break;

	    case BEHAVIORS.COUNTERCLOCKWISE:
	      flipOrder = clockwise(placement, true);
	      break;

	    default:
	      flipOrder = options.behavior;
	  }

	  flipOrder.forEach(function (step, index) {
	    if (placement !== step || flipOrder.length === index + 1) {
	      return data;
	    }

	    placement = data.placement.split('-')[0];
	    placementOpposite = getOppositePlacement(placement);
	    var popperOffsets = data.offsets.popper;
	    var refOffsets = data.offsets.reference;
	    var floor = Math.floor;
	    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
	    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
	    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
	    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
	    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
	    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;
	    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);
	    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
	    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

	    if (overlapsRef || overflowsBoundaries || flippedVariation) {
	      data.flipped = true;

	      if (overlapsRef || overflowsBoundaries) {
	        placement = flipOrder[index + 1];
	      }

	      if (flippedVariation) {
	        variation = getOppositeVariation(variation);
	      }

	      data.placement = placement + (variation ? '-' + variation : '');
	      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
	      data = runModifiers(data.instance.modifiers, data, 'flip');
	    }
	  });
	  return data;
	}

	function keepTogether(data) {
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	  var placement = data.placement.split('-')[0];
	  var floor = Math.floor;
	  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
	  var side = isVertical ? 'right' : 'bottom';
	  var opSide = isVertical ? 'left' : 'top';
	  var measurement = isVertical ? 'width' : 'height';

	  if (popper[side] < floor(reference[opSide])) {
	    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
	  }

	  if (popper[opSide] > floor(reference[side])) {
	    data.offsets.popper[opSide] = floor(reference[side]);
	  }

	  return data;
	}

	function toValue(str, measurement, popperOffsets, referenceOffsets) {
	  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
	  var value = +split[1];
	  var unit = split[2];

	  if (!value) {
	    return str;
	  }

	  if (unit.indexOf('%') === 0) {
	    var element = void 0;

	    switch (unit) {
	      case '%p':
	        element = popperOffsets;
	        break;

	      case '%':
	      case '%r':
	      default:
	        element = referenceOffsets;
	    }

	    var rect = getClientRect(element);
	    return rect[measurement] / 100 * value;
	  } else if (unit === 'vh' || unit === 'vw') {
	    var size = void 0;

	    if (unit === 'vh') {
	      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
	    } else {
	      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
	    }

	    return size / 100 * value;
	  } else {
	    return value;
	  }
	}

	function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
	  var offsets = [0, 0];
	  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;
	  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
	    return frag.trim();
	  });
	  var divider = fragments.indexOf(find$1(fragments, function (frag) {
	    return frag.search(/,|\s/) !== -1;
	  }));

	  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
	    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
	  }

	  var splitRegex = /\s*,\s*|\s+/;
	  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
	  ops = ops.map(function (op, index) {
	    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
	    var mergeWithPrevious = false;
	    return op.reduce(function (a, b) {
	      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
	        a[a.length - 1] = b;
	        mergeWithPrevious = true;
	        return a;
	      } else if (mergeWithPrevious) {
	        a[a.length - 1] += b;
	        mergeWithPrevious = false;
	        return a;
	      } else {
	        return a.concat(b);
	      }
	    }, []).map(function (str) {
	      return toValue(str, measurement, popperOffsets, referenceOffsets);
	    });
	  });
	  ops.forEach(function (op, index) {
	    op.forEach(function (frag, index2) {
	      if (isNumeric(frag)) {
	        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
	      }
	    });
	  });
	  return offsets;
	}

	function offset(data, _ref) {
	  var offset = _ref.offset;
	  var placement = data.placement,
	      _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	  var basePlacement = placement.split('-')[0];
	  var offsets = void 0;

	  if (isNumeric(+offset)) {
	    offsets = [+offset, 0];
	  } else {
	    offsets = parseOffset(offset, popper, reference, basePlacement);
	  }

	  if (basePlacement === 'left') {
	    popper.top += offsets[0];
	    popper.left -= offsets[1];
	  } else if (basePlacement === 'right') {
	    popper.top += offsets[0];
	    popper.left += offsets[1];
	  } else if (basePlacement === 'top') {
	    popper.left += offsets[0];
	    popper.top -= offsets[1];
	  } else if (basePlacement === 'bottom') {
	    popper.left += offsets[0];
	    popper.top += offsets[1];
	  }

	  data.popper = popper;
	  return data;
	}

	function preventOverflow(data, options) {
	  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

	  if (data.instance.reference === boundariesElement) {
	    boundariesElement = getOffsetParent(boundariesElement);
	  }

	  var transformProp = getSupportedPropertyName('transform');
	  var popperStyles = data.instance.popper.style;
	  var top = popperStyles.top,
	      left = popperStyles.left,
	      transform = popperStyles[transformProp];
	  popperStyles.top = '';
	  popperStyles.left = '';
	  popperStyles[transformProp] = '';
	  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
	  popperStyles.top = top;
	  popperStyles.left = left;
	  popperStyles[transformProp] = transform;
	  options.boundaries = boundaries;
	  var order = options.priority;
	  var popper = data.offsets.popper;
	  var check = {
	    primary: function primary(placement) {
	      var value = popper[placement];

	      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
	        value = Math.max(popper[placement], boundaries[placement]);
	      }

	      return defineProperty$1({}, placement, value);
	    },
	    secondary: function secondary(placement) {
	      var mainSide = placement === 'right' ? 'left' : 'top';
	      var value = popper[mainSide];

	      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
	        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
	      }

	      return defineProperty$1({}, mainSide, value);
	    }
	  };
	  order.forEach(function (placement) {
	    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
	    popper = _extends({}, popper, check[side](placement));
	  });
	  data.offsets.popper = popper;
	  return data;
	}

	function shift(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var shiftvariation = placement.split('-')[1];

	  if (shiftvariation) {
	    var _data$offsets = data.offsets,
	        reference = _data$offsets.reference,
	        popper = _data$offsets.popper;
	    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
	    var side = isVertical ? 'left' : 'top';
	    var measurement = isVertical ? 'width' : 'height';
	    var shiftOffsets = {
	      start: defineProperty$1({}, side, reference[side]),
	      end: defineProperty$1({}, side, reference[side] + reference[measurement] - popper[measurement])
	    };
	    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
	  }

	  return data;
	}

	function hide(data) {
	  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
	    return data;
	  }

	  var refRect = data.offsets.reference;
	  var bound = find$1(data.instance.modifiers, function (modifier) {
	    return modifier.name === 'preventOverflow';
	  }).boundaries;

	  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
	    if (data.hide === true) {
	      return data;
	    }

	    data.hide = true;
	    data.attributes['x-out-of-boundaries'] = '';
	  } else {
	    if (data.hide === false) {
	      return data;
	    }

	    data.hide = false;
	    data.attributes['x-out-of-boundaries'] = false;
	  }

	  return data;
	}

	function inner(data) {
	  var placement = data.placement;
	  var basePlacement = placement.split('-')[0];
	  var _data$offsets = data.offsets,
	      popper = _data$offsets.popper,
	      reference = _data$offsets.reference;
	  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
	  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
	  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
	  data.placement = getOppositePlacement(placement);
	  data.offsets.popper = getClientRect(popper);
	  return data;
	}

	var modifiers = {
	  shift: {
	    order: 100,
	    enabled: true,
	    fn: shift
	  },
	  offset: {
	    order: 200,
	    enabled: true,
	    fn: offset,
	    offset: 0
	  },
	  preventOverflow: {
	    order: 300,
	    enabled: true,
	    fn: preventOverflow,
	    priority: ['left', 'right', 'top', 'bottom'],
	    padding: 5,
	    boundariesElement: 'scrollParent'
	  },
	  keepTogether: {
	    order: 400,
	    enabled: true,
	    fn: keepTogether
	  },
	  arrow: {
	    order: 500,
	    enabled: true,
	    fn: arrow,
	    element: '[x-arrow]'
	  },
	  flip: {
	    order: 600,
	    enabled: true,
	    fn: flip,
	    behavior: 'flip',
	    padding: 5,
	    boundariesElement: 'viewport',
	    flipVariations: false,
	    flipVariationsByContent: false
	  },
	  inner: {
	    order: 700,
	    enabled: false,
	    fn: inner
	  },
	  hide: {
	    order: 800,
	    enabled: true,
	    fn: hide
	  },
	  computeStyle: {
	    order: 850,
	    enabled: true,
	    fn: computeStyle,
	    gpuAcceleration: true,
	    x: 'bottom',
	    y: 'right'
	  },
	  applyStyle: {
	    order: 900,
	    enabled: true,
	    fn: applyStyle,
	    onLoad: applyStyleOnLoad,
	    gpuAcceleration: undefined
	  }
	};
	var Defaults = {
	  placement: 'bottom',
	  positionFixed: false,
	  eventsEnabled: true,
	  removeOnDestroy: false,
	  onCreate: function onCreate() {},
	  onUpdate: function onUpdate() {},
	  modifiers: modifiers
	};

	var Popper = function () {
	  function Popper(reference, popper) {
	    var _this = this;

	    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	    classCallCheck(this, Popper);

	    this.scheduleUpdate = function () {
	      return requestAnimationFrame(_this.update);
	    };

	    this.update = debounce(this.update.bind(this));
	    this.options = _extends({}, Popper.Defaults, options);
	    this.state = {
	      isDestroyed: false,
	      isCreated: false,
	      scrollParents: []
	    };
	    this.reference = reference && reference.jquery ? reference[0] : reference;
	    this.popper = popper && popper.jquery ? popper[0] : popper;
	    this.options.modifiers = {};
	    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
	      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
	    });
	    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
	      return _extends({
	        name: name
	      }, _this.options.modifiers[name]);
	    }).sort(function (a, b) {
	      return a.order - b.order;
	    });
	    this.modifiers.forEach(function (modifierOptions) {
	      if (modifierOptions.enabled && isFunction$1(modifierOptions.onLoad)) {
	        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
	      }
	    });
	    this.update();
	    var eventsEnabled = this.options.eventsEnabled;

	    if (eventsEnabled) {
	      this.enableEventListeners();
	    }

	    this.state.eventsEnabled = eventsEnabled;
	  }

	  createClass(Popper, [{
	    key: 'update',
	    value: function update$$1() {
	      return update.call(this);
	    }
	  }, {
	    key: 'destroy',
	    value: function destroy$$1() {
	      return destroy.call(this);
	    }
	  }, {
	    key: 'enableEventListeners',
	    value: function enableEventListeners$$1() {
	      return enableEventListeners.call(this);
	    }
	  }, {
	    key: 'disableEventListeners',
	    value: function disableEventListeners$$1() {
	      return disableEventListeners.call(this);
	    }
	  }]);
	  return Popper;
	}();

	Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
	Popper.placements = placements;
	Popper.Defaults = Defaults;
	var Popper$1 = Popper;

	// `Symbol.asyncIterator` well-known symbol
	// https://tc39.es/ecma262/#sec-symbol.asynciterator
	defineWellKnownSymbol('asyncIterator');

	var _extendStatics = function extendStatics(d, b) {
	  _extendStatics = Object.setPrototypeOf || {
	    __proto__: []
	  } instanceof Array && function (d, b) {
	    d.__proto__ = b;
	  } || function (d, b) {
	    for (var p in b) {
	      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
	    }
	  };

	  return _extendStatics(d, b);
	};

	function __extends(d, b) {
	  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");

	  _extendStatics(d, b);

	  function __() {
	    this.constructor = d;
	  }

	  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	}
	function __awaiter(thisArg, _arguments, P, generator) {
	  function adopt(value) {
	    return value instanceof P ? value : new P(function (resolve) {
	      resolve(value);
	    });
	  }

	  return new (P || (P = Promise))(function (resolve, reject) {
	    function fulfilled(value) {
	      try {
	        step(generator.next(value));
	      } catch (e) {
	        reject(e);
	      }
	    }

	    function rejected(value) {
	      try {
	        step(generator["throw"](value));
	      } catch (e) {
	        reject(e);
	      }
	    }

	    function step(result) {
	      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
	    }

	    step((generator = generator.apply(thisArg, _arguments || [])).next());
	  });
	}
	function __generator(thisArg, body) {
	  var _ = {
	    label: 0,
	    sent: function sent() {
	      if (t[0] & 1) throw t[1];
	      return t[1];
	    },
	    trys: [],
	    ops: []
	  },
	      f,
	      y,
	      t,
	      g;
	  return g = {
	    next: verb(0),
	    "throw": verb(1),
	    "return": verb(2)
	  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
	    return this;
	  }), g;

	  function verb(n) {
	    return function (v) {
	      return step([n, v]);
	    };
	  }

	  function step(op) {
	    if (f) throw new TypeError("Generator is already executing.");

	    while (_) {
	      try {
	        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
	        if (y = 0, t) op = [op[0] & 2, t.value];

	        switch (op[0]) {
	          case 0:
	          case 1:
	            t = op;
	            break;

	          case 4:
	            _.label++;
	            return {
	              value: op[1],
	              done: false
	            };

	          case 5:
	            _.label++;
	            y = op[1];
	            op = [0];
	            continue;

	          case 7:
	            op = _.ops.pop();

	            _.trys.pop();

	            continue;

	          default:
	            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
	              _ = 0;
	              continue;
	            }

	            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
	              _.label = op[1];
	              break;
	            }

	            if (op[0] === 6 && _.label < t[1]) {
	              _.label = t[1];
	              t = op;
	              break;
	            }

	            if (t && _.label < t[2]) {
	              _.label = t[2];

	              _.ops.push(op);

	              break;
	            }

	            if (t[2]) _.ops.pop();

	            _.trys.pop();

	            continue;
	        }

	        op = body.call(thisArg, _);
	      } catch (e) {
	        op = [6, e];
	        y = 0;
	      } finally {
	        f = t = 0;
	      }
	    }

	    if (op[0] & 5) throw op[1];
	    return {
	      value: op[0] ? op[1] : void 0,
	      done: true
	    };
	  }
	}
	function __values(o) {
	  var s = typeof Symbol === "function" && Symbol.iterator,
	      m = s && o[s],
	      i = 0;
	  if (m) return m.call(o);
	  if (o && typeof o.length === "number") return {
	    next: function next() {
	      if (o && i >= o.length) o = void 0;
	      return {
	        value: o && o[i++],
	        done: !o
	      };
	    }
	  };
	  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
	}
	function __read(o, n) {
	  var m = typeof Symbol === "function" && o[Symbol.iterator];
	  if (!m) return o;
	  var i = m.call(o),
	      r,
	      ar = [],
	      e;

	  try {
	    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
	      ar.push(r.value);
	    }
	  } catch (error) {
	    e = {
	      error: error
	    };
	  } finally {
	    try {
	      if (r && !r.done && (m = i["return"])) m.call(i);
	    } finally {
	      if (e) throw e.error;
	    }
	  }

	  return ar;
	}
	function __spreadArray(to, from, pack) {
	  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
	    if (ar || !(i in from)) {
	      if (!ar) ar = Array.prototype.slice.call(from, 0, i);
	      ar[i] = from[i];
	    }
	  }
	  return to.concat(ar || Array.prototype.slice.call(from));
	}
	function __await(v) {
	  return this instanceof __await ? (this.v = v, this) : new __await(v);
	}
	function __asyncGenerator(thisArg, _arguments, generator) {
	  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	  var g = generator.apply(thisArg, _arguments || []),
	      i,
	      q = [];
	  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	    return this;
	  }, i;

	  function verb(n) {
	    if (g[n]) i[n] = function (v) {
	      return new Promise(function (a, b) {
	        q.push([n, v, a, b]) > 1 || resume(n, v);
	      });
	    };
	  }

	  function resume(n, v) {
	    try {
	      step(g[n](v));
	    } catch (e) {
	      settle(q[0][3], e);
	    }
	  }

	  function step(r) {
	    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
	  }

	  function fulfill(value) {
	    resume("next", value);
	  }

	  function reject(value) {
	    resume("throw", value);
	  }

	  function settle(f, v) {
	    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);
	  }
	}
	function __asyncValues(o) {
	  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
	  var m = o[Symbol.asyncIterator],
	      i;
	  return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () {
	    return this;
	  }, i);

	  function verb(n) {
	    i[n] = o[n] && function (v) {
	      return new Promise(function (resolve, reject) {
	        v = o[n](v), settle(resolve, reject, v.done, v.value);
	      });
	    };
	  }

	  function settle(resolve, reject, d, v) {
	    Promise.resolve(v).then(function (v) {
	      resolve({
	        value: v,
	        done: d
	      });
	    }, reject);
	  }
	}

	function isFunction(value) {
	  return typeof value === 'function';
	}

	function createErrorClass(createImpl) {
	  var _super = function _super(instance) {
	    Error.call(instance);
	    instance.stack = new Error().stack;
	  };

	  var ctorFunc = createImpl(_super);
	  ctorFunc.prototype = Object.create(Error.prototype);
	  ctorFunc.prototype.constructor = ctorFunc;
	  return ctorFunc;
	}

	var UnsubscriptionError = createErrorClass(function (_super) {
	  return function UnsubscriptionErrorImpl(errors) {
	    _super(this);

	    this.message = errors ? errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) {
	      return i + 1 + ") " + err.toString();
	    }).join('\n  ') : '';
	    this.name = 'UnsubscriptionError';
	    this.errors = errors;
	  };
	});

	function arrRemove(arr, item) {
	  if (arr) {
	    var index = arr.indexOf(item);
	    0 <= index && arr.splice(index, 1);
	  }
	}

	var Subscription = function () {
	  function Subscription(initialTeardown) {
	    this.initialTeardown = initialTeardown;
	    this.closed = false;
	    this._parentage = null;
	    this._finalizers = null;
	  }

	  Subscription.prototype.unsubscribe = function () {
	    var e_1, _a, e_2, _b;

	    var errors;

	    if (!this.closed) {
	      this.closed = true;
	      var _parentage = this._parentage;

	      if (_parentage) {
	        this._parentage = null;

	        if (Array.isArray(_parentage)) {
	          try {
	            for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
	              var parent_1 = _parentage_1_1.value;
	              parent_1.remove(this);
	            }
	          } catch (e_1_1) {
	            e_1 = {
	              error: e_1_1
	            };
	          } finally {
	            try {
	              if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);
	            } finally {
	              if (e_1) throw e_1.error;
	            }
	          }
	        } else {
	          _parentage.remove(this);
	        }
	      }

	      var initialFinalizer = this.initialTeardown;

	      if (isFunction(initialFinalizer)) {
	        try {
	          initialFinalizer();
	        } catch (e) {
	          errors = e instanceof UnsubscriptionError ? e.errors : [e];
	        }
	      }

	      var _finalizers = this._finalizers;

	      if (_finalizers) {
	        this._finalizers = null;

	        try {
	          for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
	            var finalizer = _finalizers_1_1.value;

	            try {
	              execFinalizer(finalizer);
	            } catch (err) {
	              errors = errors !== null && errors !== void 0 ? errors : [];

	              if (err instanceof UnsubscriptionError) {
	                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));
	              } else {
	                errors.push(err);
	              }
	            }
	          }
	        } catch (e_2_1) {
	          e_2 = {
	            error: e_2_1
	          };
	        } finally {
	          try {
	            if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);
	          } finally {
	            if (e_2) throw e_2.error;
	          }
	        }
	      }

	      if (errors) {
	        throw new UnsubscriptionError(errors);
	      }
	    }
	  };

	  Subscription.prototype.add = function (teardown) {
	    var _a;

	    if (teardown && teardown !== this) {
	      if (this.closed) {
	        execFinalizer(teardown);
	      } else {
	        if (teardown instanceof Subscription) {
	          if (teardown.closed || teardown._hasParent(this)) {
	            return;
	          }

	          teardown._addParent(this);
	        }

	        (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);
	      }
	    }
	  };

	  Subscription.prototype._hasParent = function (parent) {
	    var _parentage = this._parentage;
	    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);
	  };

	  Subscription.prototype._addParent = function (parent) {
	    var _parentage = this._parentage;
	    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
	  };

	  Subscription.prototype._removeParent = function (parent) {
	    var _parentage = this._parentage;

	    if (_parentage === parent) {
	      this._parentage = null;
	    } else if (Array.isArray(_parentage)) {
	      arrRemove(_parentage, parent);
	    }
	  };

	  Subscription.prototype.remove = function (teardown) {
	    var _finalizers = this._finalizers;
	    _finalizers && arrRemove(_finalizers, teardown);

	    if (teardown instanceof Subscription) {
	      teardown._removeParent(this);
	    }
	  };

	  Subscription.EMPTY = function () {
	    var empty = new Subscription();
	    empty.closed = true;
	    return empty;
	  }();

	  return Subscription;
	}();
	var EMPTY_SUBSCRIPTION = Subscription.EMPTY;
	function isSubscription(value) {
	  return value instanceof Subscription || value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe);
	}

	function execFinalizer(finalizer) {
	  if (isFunction(finalizer)) {
	    finalizer();
	  } else {
	    finalizer.unsubscribe();
	  }
	}

	var config = {
	  onUnhandledError: null,
	  onStoppedNotification: null,
	  Promise: undefined,
	  useDeprecatedSynchronousErrorHandling: false,
	  useDeprecatedNextContext: false
	};

	var timeoutProvider = {
	  setTimeout: function (_setTimeout) {
	    function setTimeout(_x, _x2) {
	      return _setTimeout.apply(this, arguments);
	    }

	    setTimeout.toString = function () {
	      return _setTimeout.toString();
	    };

	    return setTimeout;
	  }(function (handler, timeout) {
	    var args = [];

	    for (var _i = 2; _i < arguments.length; _i++) {
	      args[_i - 2] = arguments[_i];
	    }

	    var delegate = timeoutProvider.delegate;

	    if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
	      return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));
	    }

	    return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));
	  }),
	  clearTimeout: function (_clearTimeout) {
	    function clearTimeout(_x3) {
	      return _clearTimeout.apply(this, arguments);
	    }

	    clearTimeout.toString = function () {
	      return _clearTimeout.toString();
	    };

	    return clearTimeout;
	  }(function (handle) {
	    var delegate = timeoutProvider.delegate;
	    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
	  }),
	  delegate: undefined
	};

	function reportUnhandledError(err) {
	  timeoutProvider.setTimeout(function () {

	    {
	      throw err;
	    }
	  });
	}

	function noop() {}

	var context = null;
	function errorContext(cb) {
	  if (config.useDeprecatedSynchronousErrorHandling) {
	    var isRoot = !context;

	    if (isRoot) {
	      context = {
	        errorThrown: false,
	        error: null
	      };
	    }

	    cb();

	    if (isRoot) {
	      var _a = context,
	          errorThrown = _a.errorThrown,
	          error = _a.error;
	      context = null;

	      if (errorThrown) {
	        throw error;
	      }
	    }
	  } else {
	    cb();
	  }
	}

	var Subscriber = function (_super) {
	  __extends(Subscriber, _super);

	  function Subscriber(destination) {
	    var _this = _super.call(this) || this;

	    _this.isStopped = false;

	    if (destination) {
	      _this.destination = destination;

	      if (isSubscription(destination)) {
	        destination.add(_this);
	      }
	    } else {
	      _this.destination = EMPTY_OBSERVER;
	    }

	    return _this;
	  }

	  Subscriber.create = function (next, error, complete) {
	    return new SafeSubscriber(next, error, complete);
	  };

	  Subscriber.prototype.next = function (value) {
	    if (this.isStopped) ; else {
	      this._next(value);
	    }
	  };

	  Subscriber.prototype.error = function (err) {
	    if (this.isStopped) ; else {
	      this.isStopped = true;

	      this._error(err);
	    }
	  };

	  Subscriber.prototype.complete = function () {
	    if (this.isStopped) ; else {
	      this.isStopped = true;

	      this._complete();
	    }
	  };

	  Subscriber.prototype.unsubscribe = function () {
	    if (!this.closed) {
	      this.isStopped = true;

	      _super.prototype.unsubscribe.call(this);

	      this.destination = null;
	    }
	  };

	  Subscriber.prototype._next = function (value) {
	    this.destination.next(value);
	  };

	  Subscriber.prototype._error = function (err) {
	    try {
	      this.destination.error(err);
	    } finally {
	      this.unsubscribe();
	    }
	  };

	  Subscriber.prototype._complete = function () {
	    try {
	      this.destination.complete();
	    } finally {
	      this.unsubscribe();
	    }
	  };

	  return Subscriber;
	}(Subscription);
	var _bind = Function.prototype.bind;

	function bind(fn, thisArg) {
	  return _bind.call(fn, thisArg);
	}

	var ConsumerObserver = function () {
	  function ConsumerObserver(partialObserver) {
	    this.partialObserver = partialObserver;
	  }

	  ConsumerObserver.prototype.next = function (value) {
	    var partialObserver = this.partialObserver;

	    if (partialObserver.next) {
	      try {
	        partialObserver.next(value);
	      } catch (error) {
	        handleUnhandledError(error);
	      }
	    }
	  };

	  ConsumerObserver.prototype.error = function (err) {
	    var partialObserver = this.partialObserver;

	    if (partialObserver.error) {
	      try {
	        partialObserver.error(err);
	      } catch (error) {
	        handleUnhandledError(error);
	      }
	    } else {
	      handleUnhandledError(err);
	    }
	  };

	  ConsumerObserver.prototype.complete = function () {
	    var partialObserver = this.partialObserver;

	    if (partialObserver.complete) {
	      try {
	        partialObserver.complete();
	      } catch (error) {
	        handleUnhandledError(error);
	      }
	    }
	  };

	  return ConsumerObserver;
	}();

	var SafeSubscriber = function (_super) {
	  __extends(SafeSubscriber, _super);

	  function SafeSubscriber(observerOrNext, error, complete) {
	    var _this = _super.call(this) || this;

	    var partialObserver;

	    if (isFunction(observerOrNext) || !observerOrNext) {
	      partialObserver = {
	        next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined,
	        error: error !== null && error !== void 0 ? error : undefined,
	        complete: complete !== null && complete !== void 0 ? complete : undefined
	      };
	    } else {
	      var context_1;

	      if (_this && config.useDeprecatedNextContext) {
	        context_1 = Object.create(observerOrNext);

	        context_1.unsubscribe = function () {
	          return _this.unsubscribe();
	        };

	        partialObserver = {
	          next: observerOrNext.next && bind(observerOrNext.next, context_1),
	          error: observerOrNext.error && bind(observerOrNext.error, context_1),
	          complete: observerOrNext.complete && bind(observerOrNext.complete, context_1)
	        };
	      } else {
	        partialObserver = observerOrNext;
	      }
	    }

	    _this.destination = new ConsumerObserver(partialObserver);
	    return _this;
	  }

	  return SafeSubscriber;
	}(Subscriber);

	function handleUnhandledError(error) {
	  {
	    reportUnhandledError(error);
	  }
	}

	function defaultErrorHandler(err) {
	  throw err;
	}

	var EMPTY_OBSERVER = {
	  closed: true,
	  next: noop,
	  error: defaultErrorHandler,
	  complete: noop
	};

	var observable = function () {
	  return typeof Symbol === 'function' && Symbol.observable || '@@observable';
	}();

	function identity(x) {
	  return x;
	}

	function pipeFromArray(fns) {
	  if (fns.length === 0) {
	    return identity;
	  }

	  if (fns.length === 1) {
	    return fns[0];
	  }

	  return function piped(input) {
	    return fns.reduce(function (prev, fn) {
	      return fn(prev);
	    }, input);
	  };
	}

	var Observable = function () {
	  function Observable(subscribe) {
	    if (subscribe) {
	      this._subscribe = subscribe;
	    }
	  }

	  Observable.prototype.lift = function (operator) {
	    var observable = new Observable();
	    observable.source = this;
	    observable.operator = operator;
	    return observable;
	  };

	  Observable.prototype.subscribe = function (observerOrNext, error, complete) {
	    var _this = this;

	    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);
	    errorContext(function () {
	      var _a = _this,
	          operator = _a.operator,
	          source = _a.source;
	      subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));
	    });
	    return subscriber;
	  };

	  Observable.prototype._trySubscribe = function (sink) {
	    try {
	      return this._subscribe(sink);
	    } catch (err) {
	      sink.error(err);
	    }
	  };

	  Observable.prototype.forEach = function (_next, promiseCtor) {
	    var _this = this;

	    promiseCtor = getPromiseCtor(promiseCtor);
	    return new promiseCtor(function (resolve, reject) {
	      var subscriber = new SafeSubscriber({
	        next: function next(value) {
	          try {
	            _next(value);
	          } catch (err) {
	            reject(err);
	            subscriber.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });

	      _this.subscribe(subscriber);
	    });
	  };

	  Observable.prototype._subscribe = function (subscriber) {
	    var _a;

	    return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);
	  };

	  Observable.prototype[observable] = function () {
	    return this;
	  };

	  Observable.prototype.pipe = function () {
	    var operations = [];

	    for (var _i = 0; _i < arguments.length; _i++) {
	      operations[_i] = arguments[_i];
	    }

	    return pipeFromArray(operations)(this);
	  };

	  Observable.prototype.toPromise = function (promiseCtor) {
	    var _this = this;

	    promiseCtor = getPromiseCtor(promiseCtor);
	    return new promiseCtor(function (resolve, reject) {
	      var value;

	      _this.subscribe(function (x) {
	        return value = x;
	      }, function (err) {
	        return reject(err);
	      }, function () {
	        return resolve(value);
	      });
	    });
	  };

	  Observable.create = function (subscribe) {
	    return new Observable(subscribe);
	  };

	  return Observable;
	}();

	function getPromiseCtor(promiseCtor) {
	  var _a;

	  return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;
	}

	function isObserver(value) {
	  return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);
	}

	function isSubscriber(value) {
	  return value && value instanceof Subscriber || isObserver(value) && isSubscription(value);
	}

	function hasLift(source) {
	  return isFunction(source === null || source === void 0 ? void 0 : source.lift);
	}
	function operate(init) {
	  return function (source) {
	    if (hasLift(source)) {
	      return source.lift(function (liftedSource) {
	        try {
	          return init(liftedSource, this);
	        } catch (err) {
	          this.error(err);
	        }
	      });
	    }

	    throw new TypeError('Unable to lift unknown Observable type');
	  };
	}

	function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
	  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
	}

	var OperatorSubscriber = function (_super) {
	  __extends(OperatorSubscriber, _super);

	  function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
	    var _this = _super.call(this, destination) || this;

	    _this.onFinalize = onFinalize;
	    _this.shouldUnsubscribe = shouldUnsubscribe;
	    _this._next = onNext ? function (value) {
	      try {
	        onNext(value);
	      } catch (err) {
	        destination.error(err);
	      }
	    } : _super.prototype._next;
	    _this._error = onError ? function (err) {
	      try {
	        onError(err);
	      } catch (err) {
	        destination.error(err);
	      } finally {
	        this.unsubscribe();
	      }
	    } : _super.prototype._error;
	    _this._complete = onComplete ? function () {
	      try {
	        onComplete();
	      } catch (err) {
	        destination.error(err);
	      } finally {
	        this.unsubscribe();
	      }
	    } : _super.prototype._complete;
	    return _this;
	  }

	  OperatorSubscriber.prototype.unsubscribe = function () {
	    var _a;

	    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
	      var closed_1 = this.closed;

	      _super.prototype.unsubscribe.call(this);

	      !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));
	    }
	  };

	  return OperatorSubscriber;
	}(Subscriber);

	var ObjectUnsubscribedError = createErrorClass(function (_super) {
	  return function ObjectUnsubscribedErrorImpl() {
	    _super(this);

	    this.name = 'ObjectUnsubscribedError';
	    this.message = 'object unsubscribed';
	  };
	});

	var Subject = function (_super) {
	  __extends(Subject, _super);

	  function Subject() {
	    var _this = _super.call(this) || this;

	    _this.closed = false;
	    _this.currentObservers = null;
	    _this.observers = [];
	    _this.isStopped = false;
	    _this.hasError = false;
	    _this.thrownError = null;
	    return _this;
	  }

	  Subject.prototype.lift = function (operator) {
	    var subject = new AnonymousSubject(this, this);
	    subject.operator = operator;
	    return subject;
	  };

	  Subject.prototype._throwIfClosed = function () {
	    if (this.closed) {
	      throw new ObjectUnsubscribedError();
	    }
	  };

	  Subject.prototype.next = function (value) {
	    var _this = this;

	    errorContext(function () {
	      var e_1, _a;

	      _this._throwIfClosed();

	      if (!_this.isStopped) {
	        if (!_this.currentObservers) {
	          _this.currentObservers = Array.from(_this.observers);
	        }

	        try {
	          for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {
	            var observer = _c.value;
	            observer.next(value);
	          }
	        } catch (e_1_1) {
	          e_1 = {
	            error: e_1_1
	          };
	        } finally {
	          try {
	            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
	          } finally {
	            if (e_1) throw e_1.error;
	          }
	        }
	      }
	    });
	  };

	  Subject.prototype.error = function (err) {
	    var _this = this;

	    errorContext(function () {
	      _this._throwIfClosed();

	      if (!_this.isStopped) {
	        _this.hasError = _this.isStopped = true;
	        _this.thrownError = err;
	        var observers = _this.observers;

	        while (observers.length) {
	          observers.shift().error(err);
	        }
	      }
	    });
	  };

	  Subject.prototype.complete = function () {
	    var _this = this;

	    errorContext(function () {
	      _this._throwIfClosed();

	      if (!_this.isStopped) {
	        _this.isStopped = true;
	        var observers = _this.observers;

	        while (observers.length) {
	          observers.shift().complete();
	        }
	      }
	    });
	  };

	  Subject.prototype.unsubscribe = function () {
	    this.isStopped = this.closed = true;
	    this.observers = this.currentObservers = null;
	  };

	  Object.defineProperty(Subject.prototype, "observed", {
	    get: function get() {
	      var _a;

	      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;
	    },
	    enumerable: false,
	    configurable: true
	  });

	  Subject.prototype._trySubscribe = function (subscriber) {
	    this._throwIfClosed();

	    return _super.prototype._trySubscribe.call(this, subscriber);
	  };

	  Subject.prototype._subscribe = function (subscriber) {
	    this._throwIfClosed();

	    this._checkFinalizedStatuses(subscriber);

	    return this._innerSubscribe(subscriber);
	  };

	  Subject.prototype._innerSubscribe = function (subscriber) {
	    var _this = this;

	    var _a = this,
	        hasError = _a.hasError,
	        isStopped = _a.isStopped,
	        observers = _a.observers;

	    if (hasError || isStopped) {
	      return EMPTY_SUBSCRIPTION;
	    }

	    this.currentObservers = null;
	    observers.push(subscriber);
	    return new Subscription(function () {
	      _this.currentObservers = null;
	      arrRemove(observers, subscriber);
	    });
	  };

	  Subject.prototype._checkFinalizedStatuses = function (subscriber) {
	    var _a = this,
	        hasError = _a.hasError,
	        thrownError = _a.thrownError,
	        isStopped = _a.isStopped;

	    if (hasError) {
	      subscriber.error(thrownError);
	    } else if (isStopped) {
	      subscriber.complete();
	    }
	  };

	  Subject.prototype.asObservable = function () {
	    var observable = new Observable();
	    observable.source = this;
	    return observable;
	  };

	  Subject.create = function (destination, source) {
	    return new AnonymousSubject(destination, source);
	  };

	  return Subject;
	}(Observable);

	var AnonymousSubject = function (_super) {
	  __extends(AnonymousSubject, _super);

	  function AnonymousSubject(destination, source) {
	    var _this = _super.call(this) || this;

	    _this.destination = destination;
	    _this.source = source;
	    return _this;
	  }

	  AnonymousSubject.prototype.next = function (value) {
	    var _a, _b;

	    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);
	  };

	  AnonymousSubject.prototype.error = function (err) {
	    var _a, _b;

	    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);
	  };

	  AnonymousSubject.prototype.complete = function () {
	    var _a, _b;

	    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);
	  };

	  AnonymousSubject.prototype._subscribe = function (subscriber) {
	    var _a, _b;

	    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;
	  };

	  return AnonymousSubject;
	}(Subject);

	var BehaviorSubject = function (_super) {
	  __extends(BehaviorSubject, _super);

	  function BehaviorSubject(_value) {
	    var _this = _super.call(this) || this;

	    _this._value = _value;
	    return _this;
	  }

	  Object.defineProperty(BehaviorSubject.prototype, "value", {
	    get: function get() {
	      return this.getValue();
	    },
	    enumerable: false,
	    configurable: true
	  });

	  BehaviorSubject.prototype._subscribe = function (subscriber) {
	    var subscription = _super.prototype._subscribe.call(this, subscriber);

	    !subscription.closed && subscriber.next(this._value);
	    return subscription;
	  };

	  BehaviorSubject.prototype.getValue = function () {
	    var _a = this,
	        hasError = _a.hasError,
	        thrownError = _a.thrownError,
	        _value = _a._value;

	    if (hasError) {
	      throw thrownError;
	    }

	    this._throwIfClosed();

	    return _value;
	  };

	  BehaviorSubject.prototype.next = function (value) {
	    _super.prototype.next.call(this, this._value = value);
	  };

	  return BehaviorSubject;
	}(Subject);

	var dateTimestampProvider = {
	  now: function now() {
	    return (dateTimestampProvider.delegate || Date).now();
	  },
	  delegate: undefined
	};

	var Action = function (_super) {
	  __extends(Action, _super);

	  function Action(scheduler, work) {
	    return _super.call(this) || this;
	  }

	  Action.prototype.schedule = function (state, delay) {

	    return this;
	  };

	  return Action;
	}(Subscription);

	var intervalProvider = {
	  setInterval: function (_setInterval) {
	    function setInterval(_x, _x2) {
	      return _setInterval.apply(this, arguments);
	    }

	    setInterval.toString = function () {
	      return _setInterval.toString();
	    };

	    return setInterval;
	  }(function (handler, timeout) {
	    var args = [];

	    for (var _i = 2; _i < arguments.length; _i++) {
	      args[_i - 2] = arguments[_i];
	    }

	    var delegate = intervalProvider.delegate;

	    if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
	      return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));
	    }

	    return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));
	  }),
	  clearInterval: function (_clearInterval) {
	    function clearInterval(_x3) {
	      return _clearInterval.apply(this, arguments);
	    }

	    clearInterval.toString = function () {
	      return _clearInterval.toString();
	    };

	    return clearInterval;
	  }(function (handle) {
	    var delegate = intervalProvider.delegate;
	    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
	  }),
	  delegate: undefined
	};

	var AsyncAction = function (_super) {
	  __extends(AsyncAction, _super);

	  function AsyncAction(scheduler, work) {
	    var _this = _super.call(this, scheduler, work) || this;

	    _this.scheduler = scheduler;
	    _this.work = work;
	    _this.pending = false;
	    return _this;
	  }

	  AsyncAction.prototype.schedule = function (state, delay) {
	    var _a;

	    if (delay === void 0) {
	      delay = 0;
	    }

	    if (this.closed) {
	      return this;
	    }

	    this.state = state;
	    var id = this.id;
	    var scheduler = this.scheduler;

	    if (id != null) {
	      this.id = this.recycleAsyncId(scheduler, id, delay);
	    }

	    this.pending = true;
	    this.delay = delay;
	    this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);
	    return this;
	  };

	  AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {
	    if (delay === void 0) {
	      delay = 0;
	    }

	    return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);
	  };

	  AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {
	    if (delay === void 0) {
	      delay = 0;
	    }

	    if (delay != null && this.delay === delay && this.pending === false) {
	      return id;
	    }

	    if (id != null) {
	      intervalProvider.clearInterval(id);
	    }

	    return undefined;
	  };

	  AsyncAction.prototype.execute = function (state, delay) {
	    if (this.closed) {
	      return new Error('executing a cancelled action');
	    }

	    this.pending = false;

	    var error = this._execute(state, delay);

	    if (error) {
	      return error;
	    } else if (this.pending === false && this.id != null) {
	      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
	    }
	  };

	  AsyncAction.prototype._execute = function (state, _delay) {
	    var errored = false;
	    var errorValue;

	    try {
	      this.work(state);
	    } catch (e) {
	      errored = true;
	      errorValue = e ? e : new Error('Scheduled action threw falsy error');
	    }

	    if (errored) {
	      this.unsubscribe();
	      return errorValue;
	    }
	  };

	  AsyncAction.prototype.unsubscribe = function () {
	    if (!this.closed) {
	      var _a = this,
	          id = _a.id,
	          scheduler = _a.scheduler;

	      var actions = scheduler.actions;
	      this.work = this.state = this.scheduler = null;
	      this.pending = false;
	      arrRemove(actions, this);

	      if (id != null) {
	        this.id = this.recycleAsyncId(scheduler, id, null);
	      }

	      this.delay = null;

	      _super.prototype.unsubscribe.call(this);
	    }
	  };

	  return AsyncAction;
	}(Action);

	var Scheduler = function () {
	  function Scheduler(schedulerActionCtor, now) {
	    if (now === void 0) {
	      now = Scheduler.now;
	    }

	    this.schedulerActionCtor = schedulerActionCtor;
	    this.now = now;
	  }

	  Scheduler.prototype.schedule = function (work, delay, state) {
	    if (delay === void 0) {
	      delay = 0;
	    }

	    return new this.schedulerActionCtor(this, work).schedule(state, delay);
	  };

	  Scheduler.now = dateTimestampProvider.now;
	  return Scheduler;
	}();

	var AsyncScheduler = function (_super) {
	  __extends(AsyncScheduler, _super);

	  function AsyncScheduler(SchedulerAction, now) {
	    if (now === void 0) {
	      now = Scheduler.now;
	    }

	    var _this = _super.call(this, SchedulerAction, now) || this;

	    _this.actions = [];
	    _this._active = false;
	    return _this;
	  }

	  AsyncScheduler.prototype.flush = function (action) {
	    var actions = this.actions;

	    if (this._active) {
	      actions.push(action);
	      return;
	    }

	    var error;
	    this._active = true;

	    do {
	      if (error = action.execute(action.state, action.delay)) {
	        break;
	      }
	    } while (action = actions.shift());

	    this._active = false;

	    if (error) {
	      while (action = actions.shift()) {
	        action.unsubscribe();
	      }

	      throw error;
	    }
	  };

	  return AsyncScheduler;
	}(Scheduler);

	var asyncScheduler = new AsyncScheduler(AsyncAction);
	var async = asyncScheduler;

	var EMPTY = new Observable(function (subscriber) {
	  return subscriber.complete();
	});

	function isScheduler(value) {
	  return value && isFunction(value.schedule);
	}

	var isArrayLike = function isArrayLike(x) {
	  return x && typeof x.length === 'number' && typeof x !== 'function';
	};

	function isPromise(value) {
	  return isFunction(value === null || value === void 0 ? void 0 : value.then);
	}

	function isInteropObservable(input) {
	  return isFunction(input[observable]);
	}

	function isAsyncIterable(obj) {
	  return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
	}

	function createInvalidObservableTypeError(input) {
	  return new TypeError("You provided " + (input !== null && _typeof(input) === 'object' ? 'an invalid object' : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
	}

	function getSymbolIterator() {
	  if (typeof Symbol !== 'function' || !Symbol.iterator) {
	    return '@@iterator';
	  }

	  return Symbol.iterator;
	}
	var iterator = getSymbolIterator();

	function isIterable(input) {
	  return isFunction(input === null || input === void 0 ? void 0 : input[iterator]);
	}

	function readableStreamLikeToAsyncGenerator(readableStream) {
	  return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
	    var reader, _a, value, done;

	    return __generator(this, function (_b) {
	      switch (_b.label) {
	        case 0:
	          reader = readableStream.getReader();
	          _b.label = 1;

	        case 1:
	          _b.trys.push([1,, 9, 10]);

	          _b.label = 2;

	        case 2:
	          return [4, __await(reader.read())];

	        case 3:
	          _a = _b.sent(), value = _a.value, done = _a.done;
	          if (!done) return [3, 5];
	          return [4, __await(void 0)];

	        case 4:
	          return [2, _b.sent()];

	        case 5:
	          return [4, __await(value)];

	        case 6:
	          return [4, _b.sent()];

	        case 7:
	          _b.sent();

	          return [3, 2];

	        case 8:
	          return [3, 10];

	        case 9:
	          reader.releaseLock();
	          return [7];

	        case 10:
	          return [2];
	      }
	    });
	  });
	}
	function isReadableStreamLike(obj) {
	  return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);
	}

	function innerFrom(input) {
	  if (input instanceof Observable) {
	    return input;
	  }

	  if (input != null) {
	    if (isInteropObservable(input)) {
	      return fromInteropObservable(input);
	    }

	    if (isArrayLike(input)) {
	      return fromArrayLike(input);
	    }

	    if (isPromise(input)) {
	      return fromPromise(input);
	    }

	    if (isAsyncIterable(input)) {
	      return fromAsyncIterable(input);
	    }

	    if (isIterable(input)) {
	      return fromIterable(input);
	    }

	    if (isReadableStreamLike(input)) {
	      return fromReadableStreamLike(input);
	    }
	  }

	  throw createInvalidObservableTypeError(input);
	}
	function fromInteropObservable(obj) {
	  return new Observable(function (subscriber) {
	    var obs = obj[observable]();

	    if (isFunction(obs.subscribe)) {
	      return obs.subscribe(subscriber);
	    }

	    throw new TypeError('Provided object does not correctly implement Symbol.observable');
	  });
	}
	function fromArrayLike(array) {
	  return new Observable(function (subscriber) {
	    for (var i = 0; i < array.length && !subscriber.closed; i++) {
	      subscriber.next(array[i]);
	    }

	    subscriber.complete();
	  });
	}
	function fromPromise(promise) {
	  return new Observable(function (subscriber) {
	    promise.then(function (value) {
	      if (!subscriber.closed) {
	        subscriber.next(value);
	        subscriber.complete();
	      }
	    }, function (err) {
	      return subscriber.error(err);
	    }).then(null, reportUnhandledError);
	  });
	}
	function fromIterable(iterable) {
	  return new Observable(function (subscriber) {
	    var e_1, _a;

	    try {
	      for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
	        var value = iterable_1_1.value;
	        subscriber.next(value);

	        if (subscriber.closed) {
	          return;
	        }
	      }
	    } catch (e_1_1) {
	      e_1 = {
	        error: e_1_1
	      };
	    } finally {
	      try {
	        if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);
	      } finally {
	        if (e_1) throw e_1.error;
	      }
	    }

	    subscriber.complete();
	  });
	}
	function fromAsyncIterable(asyncIterable) {
	  return new Observable(function (subscriber) {
	    process(asyncIterable, subscriber).catch(function (err) {
	      return subscriber.error(err);
	    });
	  });
	}
	function fromReadableStreamLike(readableStream) {
	  return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));
	}

	function process(asyncIterable, subscriber) {
	  var asyncIterable_1, asyncIterable_1_1;

	  var e_2, _a;

	  return __awaiter(this, void 0, void 0, function () {
	    var value, e_2_1;
	    return __generator(this, function (_b) {
	      switch (_b.label) {
	        case 0:
	          _b.trys.push([0, 5, 6, 11]);

	          asyncIterable_1 = __asyncValues(asyncIterable);
	          _b.label = 1;

	        case 1:
	          return [4, asyncIterable_1.next()];

	        case 2:
	          if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];
	          value = asyncIterable_1_1.value;
	          subscriber.next(value);

	          if (subscriber.closed) {
	            return [2];
	          }

	          _b.label = 3;

	        case 3:
	          return [3, 1];

	        case 4:
	          return [3, 11];

	        case 5:
	          e_2_1 = _b.sent();
	          e_2 = {
	            error: e_2_1
	          };
	          return [3, 11];

	        case 6:
	          _b.trys.push([6,, 9, 10]);

	          if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];
	          return [4, _a.call(asyncIterable_1)];

	        case 7:
	          _b.sent();

	          _b.label = 8;

	        case 8:
	          return [3, 10];

	        case 9:
	          if (e_2) throw e_2.error;
	          return [7];

	        case 10:
	          return [7];

	        case 11:
	          subscriber.complete();
	          return [2];
	      }
	    });
	  });
	}

	function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {
	  if (delay === void 0) {
	    delay = 0;
	  }

	  if (repeat === void 0) {
	    repeat = false;
	  }

	  var scheduleSubscription = scheduler.schedule(function () {
	    work();

	    if (repeat) {
	      parentSubscription.add(this.schedule(null, delay));
	    } else {
	      this.unsubscribe();
	    }
	  }, delay);
	  parentSubscription.add(scheduleSubscription);

	  if (!repeat) {
	    return scheduleSubscription;
	  }
	}

	function isValidDate(value) {
	  return value instanceof Date && !isNaN(value);
	}

	function map(project, thisArg) {
	  return operate(function (source, subscriber) {
	    var index = 0;
	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      subscriber.next(project.call(thisArg, value, index++));
	    }));
	  });
	}

	var isArray$2 = Array.isArray;

	function callOrApply(fn, args) {
	  return isArray$2(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);
	}

	function mapOneOrManyArgs(fn) {
	  return map(function (args) {
	    return callOrApply(fn, args);
	  });
	}

	function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {
	  var buffer = [];
	  var active = 0;
	  var index = 0;
	  var isComplete = false;

	  var checkComplete = function checkComplete() {
	    if (isComplete && !buffer.length && !active) {
	      subscriber.complete();
	    }
	  };

	  var outerNext = function outerNext(value) {
	    return active < concurrent ? doInnerSub(value) : buffer.push(value);
	  };

	  var doInnerSub = function doInnerSub(value) {
	    expand && subscriber.next(value);
	    active++;
	    var innerComplete = false;
	    innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {
	      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);

	      if (expand) {
	        outerNext(innerValue);
	      } else {
	        subscriber.next(innerValue);
	      }
	    }, function () {
	      innerComplete = true;
	    }, undefined, function () {
	      if (innerComplete) {
	        try {
	          active--;

	          var _loop_1 = function _loop_1() {
	            var bufferedValue = buffer.shift();

	            if (innerSubScheduler) {
	              executeSchedule(subscriber, innerSubScheduler, function () {
	                return doInnerSub(bufferedValue);
	              });
	            } else {
	              doInnerSub(bufferedValue);
	            }
	          };

	          while (buffer.length && active < concurrent) {
	            _loop_1();
	          }

	          checkComplete();
	        } catch (err) {
	          subscriber.error(err);
	        }
	      }
	    }));
	  };

	  source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {
	    isComplete = true;
	    checkComplete();
	  }));
	  return function () {
	    additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
	  };
	}

	function mergeMap(project, resultSelector, concurrent) {
	  if (concurrent === void 0) {
	    concurrent = Infinity;
	  }

	  if (isFunction(resultSelector)) {
	    return mergeMap(function (a, i) {
	      return map(function (b, ii) {
	        return resultSelector(a, b, i, ii);
	      })(innerFrom(project(a, i)));
	    }, concurrent);
	  } else if (typeof resultSelector === 'number') {
	    concurrent = resultSelector;
	  }

	  return operate(function (source, subscriber) {
	    return mergeInternals(source, subscriber, project, concurrent);
	  });
	}

	var nodeEventEmitterMethods = ['addListener', 'removeListener'];
	var eventTargetMethods = ['addEventListener', 'removeEventListener'];
	var jqueryMethods = ['on', 'off'];
	function fromEvent(target, eventName, options, resultSelector) {
	  if (isFunction(options)) {
	    resultSelector = options;
	    options = undefined;
	  }

	  if (resultSelector) {
	    return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));
	  }

	  var _a = __read(isEventTarget(target) ? eventTargetMethods.map(function (methodName) {
	    return function (handler) {
	      return target[methodName](eventName, handler, options);
	    };
	  }) : isNodeStyleEventEmitter(target) ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName)) : isJQueryStyleEventEmitter(target) ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName)) : [], 2),
	      add = _a[0],
	      remove = _a[1];

	  if (!add) {
	    if (isArrayLike(target)) {
	      return mergeMap(function (subTarget) {
	        return fromEvent(subTarget, eventName, options);
	      })(innerFrom(target));
	    }
	  }

	  if (!add) {
	    throw new TypeError('Invalid event target');
	  }

	  return new Observable(function (subscriber) {
	    var handler = function handler() {
	      var args = [];

	      for (var _i = 0; _i < arguments.length; _i++) {
	        args[_i] = arguments[_i];
	      }

	      return subscriber.next(1 < args.length ? args : args[0]);
	    };

	    add(handler);
	    return function () {
	      return remove(handler);
	    };
	  });
	}

	function toCommonHandlerRegistry(target, eventName) {
	  return function (methodName) {
	    return function (handler) {
	      return target[methodName](eventName, handler);
	    };
	  };
	}

	function isNodeStyleEventEmitter(target) {
	  return isFunction(target.addListener) && isFunction(target.removeListener);
	}

	function isJQueryStyleEventEmitter(target) {
	  return isFunction(target.on) && isFunction(target.off);
	}

	function isEventTarget(target) {
	  return isFunction(target.addEventListener) && isFunction(target.removeEventListener);
	}

	function timer(dueTime, intervalOrScheduler, scheduler) {
	  if (dueTime === void 0) {
	    dueTime = 0;
	  }

	  if (scheduler === void 0) {
	    scheduler = async;
	  }

	  var intervalDuration = -1;

	  if (intervalOrScheduler != null) {
	    if (isScheduler(intervalOrScheduler)) {
	      scheduler = intervalOrScheduler;
	    } else {
	      intervalDuration = intervalOrScheduler;
	    }
	  }

	  return new Observable(function (subscriber) {
	    var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;

	    if (due < 0) {
	      due = 0;
	    }

	    var n = 0;
	    return scheduler.schedule(function () {
	      if (!subscriber.closed) {
	        subscriber.next(n++);

	        if (0 <= intervalDuration) {
	          this.schedule(undefined, intervalDuration);
	        } else {
	          subscriber.complete();
	        }
	      }
	    }, due);
	  });
	}

	function filter(predicate, thisArg) {
	  return operate(function (source, subscriber) {
	    var index = 0;
	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      return predicate.call(thisArg, value, index++) && subscriber.next(value);
	    }));
	  });
	}

	function debounceTime(dueTime, scheduler) {
	  if (scheduler === void 0) {
	    scheduler = asyncScheduler;
	  }

	  return operate(function (source, subscriber) {
	    var activeTask = null;
	    var lastValue = null;
	    var lastTime = null;

	    var emit = function emit() {
	      if (activeTask) {
	        activeTask.unsubscribe();
	        activeTask = null;
	        var value = lastValue;
	        lastValue = null;
	        subscriber.next(value);
	      }
	    };

	    function emitWhenIdle() {
	      var targetTime = lastTime + dueTime;
	      var now = scheduler.now();

	      if (now < targetTime) {
	        activeTask = this.schedule(undefined, targetTime - now);
	        subscriber.add(activeTask);
	        return;
	      }

	      emit();
	    }

	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      lastValue = value;
	      lastTime = scheduler.now();

	      if (!activeTask) {
	        activeTask = scheduler.schedule(emitWhenIdle, dueTime);
	        subscriber.add(activeTask);
	      }
	    }, function () {
	      emit();
	      subscriber.complete();
	    }, undefined, function () {
	      lastValue = activeTask = null;
	    }));
	  });
	}

	function take(count) {
	  return count <= 0 ? function () {
	    return EMPTY;
	  } : operate(function (source, subscriber) {
	    var seen = 0;
	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      if (++seen <= count) {
	        subscriber.next(value);

	        if (count <= seen) {
	          subscriber.complete();
	        }
	      }
	    }));
	  });
	}

	// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it


	var arrayBufferNonExtensible = fails(function () {
	  if (typeof ArrayBuffer == 'function') {
	    var buffer = new ArrayBuffer(8);
	    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
	    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
	  }
	});

	// eslint-disable-next-line es/no-object-isextensible -- safe
	var $isExtensible = Object.isExtensible;
	var FAILS_ON_PRIMITIVES$3 = fails(function () { $isExtensible(1); });

	// `Object.isExtensible` method
	// https://tc39.es/ecma262/#sec-object.isextensible
	var objectIsExtensible = (FAILS_ON_PRIMITIVES$3 || arrayBufferNonExtensible) ? function isExtensible(it) {
	  if (!isObject$1(it)) return false;
	  if (arrayBufferNonExtensible && classofRaw(it) == 'ArrayBuffer') return false;
	  return $isExtensible ? $isExtensible(it) : true;
	} : $isExtensible;

	var freezing = !fails(function () {
	  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
	  return Object.isExtensible(Object.preventExtensions({}));
	});

	var internalMetadata = createCommonjsModule(function (module) {
	var defineProperty = objectDefineProperty.f;






	var REQUIRED = false;
	var METADATA = uid('meta');
	var id = 0;

	var setMetadata = function (it) {
	  defineProperty(it, METADATA, { value: {
	    objectID: 'O' + id++, // object ID
	    weakData: {}          // weak collections IDs
	  } });
	};

	var fastKey = function (it, create) {
	  // return a primitive with prefix
	  if (!isObject$1(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if (!hasOwnProperty_1(it, METADATA)) {
	    // can't set metadata to uncaught frozen object
	    if (!objectIsExtensible(it)) return 'F';
	    // not necessary to add metadata
	    if (!create) return 'E';
	    // add missing metadata
	    setMetadata(it);
	  // return object ID
	  } return it[METADATA].objectID;
	};

	var getWeakData = function (it, create) {
	  if (!hasOwnProperty_1(it, METADATA)) {
	    // can't set metadata to uncaught frozen object
	    if (!objectIsExtensible(it)) return true;
	    // not necessary to add metadata
	    if (!create) return false;
	    // add missing metadata
	    setMetadata(it);
	  // return the store of weak collections IDs
	  } return it[METADATA].weakData;
	};

	// add metadata on freeze-family methods calling
	var onFreeze = function (it) {
	  if (freezing && REQUIRED && objectIsExtensible(it) && !hasOwnProperty_1(it, METADATA)) setMetadata(it);
	  return it;
	};

	var enable = function () {
	  meta.enable = function () { /* empty */ };
	  REQUIRED = true;
	  var getOwnPropertyNames = objectGetOwnPropertyNames.f;
	  var splice = functionUncurryThis([].splice);
	  var test = {};
	  test[METADATA] = 1;

	  // prevent exposing of metadata key
	  if (getOwnPropertyNames(test).length) {
	    objectGetOwnPropertyNames.f = function (it) {
	      var result = getOwnPropertyNames(it);
	      for (var i = 0, length = result.length; i < length; i++) {
	        if (result[i] === METADATA) {
	          splice(result, i, 1);
	          break;
	        }
	      } return result;
	    };

	    _export({ target: 'Object', stat: true, forced: true }, {
	      getOwnPropertyNames: objectGetOwnPropertyNamesExternal.f
	    });
	  }
	};

	var meta = module.exports = {
	  enable: enable,
	  fastKey: fastKey,
	  getWeakData: getWeakData,
	  onFreeze: onFreeze
	};

	hiddenKeys$1[METADATA] = true;
	});
	internalMetadata.enable;
	internalMetadata.fastKey;
	internalMetadata.getWeakData;
	internalMetadata.onFreeze;

	var collection = function (CONSTRUCTOR_NAME, wrapper, common) {
	  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
	  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
	  var ADDER = IS_MAP ? 'set' : 'add';
	  var NativeConstructor = global_1[CONSTRUCTOR_NAME];
	  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
	  var Constructor = NativeConstructor;
	  var exported = {};

	  var fixMethod = function (KEY) {
	    var uncurriedNativeMethod = functionUncurryThis(NativePrototype[KEY]);
	    redefine(NativePrototype, KEY,
	      KEY == 'add' ? function add(value) {
	        uncurriedNativeMethod(this, value === 0 ? 0 : value);
	        return this;
	      } : KEY == 'delete' ? function (key) {
	        return IS_WEAK && !isObject$1(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
	      } : KEY == 'get' ? function get(key) {
	        return IS_WEAK && !isObject$1(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
	      } : KEY == 'has' ? function has(key) {
	        return IS_WEAK && !isObject$1(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
	      } : function set(key, value) {
	        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
	        return this;
	      }
	    );
	  };

	  var REPLACE = isForced_1(
	    CONSTRUCTOR_NAME,
	    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
	      new NativeConstructor().entries().next();
	    }))
	  );

	  if (REPLACE) {
	    // create collection constructor
	    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
	    internalMetadata.enable();
	  } else if (isForced_1(CONSTRUCTOR_NAME, true)) {
	    var instance = new Constructor();
	    // early implementations not supports chaining
	    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
	    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
	    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
	    // most early implementations doesn't supports iterables, most modern - not close it correctly
	    // eslint-disable-next-line no-new -- required for testing
	    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
	    // for early implementations -0 and +0 not the same
	    var BUGGY_ZERO = !IS_WEAK && fails(function () {
	      // V8 ~ Chromium 42- fails only with 5+ elements
	      var $instance = new NativeConstructor();
	      var index = 5;
	      while (index--) $instance[ADDER](index, index);
	      return !$instance.has(-0);
	    });

	    if (!ACCEPT_ITERABLES) {
	      Constructor = wrapper(function (dummy, iterable) {
	        anInstance(dummy, NativePrototype);
	        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
	        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
	        return that;
	      });
	      Constructor.prototype = NativePrototype;
	      NativePrototype.constructor = Constructor;
	    }

	    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }

	    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

	    // weak collections should not contains .clear method
	    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
	  }

	  exported[CONSTRUCTOR_NAME] = Constructor;
	  _export({ global: true, forced: Constructor != NativeConstructor }, exported);

	  setToStringTag(Constructor, CONSTRUCTOR_NAME);

	  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

	  return Constructor;
	};

	var defineProperty = objectDefineProperty.f;








	var fastKey = internalMetadata.fastKey;


	var setInternalState$1 = internalState.set;
	var internalStateGetterFor$1 = internalState.getterFor;

	var collectionStrong = {
	  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
	    var Constructor = wrapper(function (that, iterable) {
	      anInstance(that, Prototype);
	      setInternalState$1(that, {
	        type: CONSTRUCTOR_NAME,
	        index: objectCreate(null),
	        first: undefined,
	        last: undefined,
	        size: 0
	      });
	      if (!descriptors) that.size = 0;
	      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
	    });

	    var Prototype = Constructor.prototype;

	    var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);

	    var define = function (that, key, value) {
	      var state = getInternalState(that);
	      var entry = getEntry(that, key);
	      var previous, index;
	      // change existing entry
	      if (entry) {
	        entry.value = value;
	      // create new entry
	      } else {
	        state.last = entry = {
	          index: index = fastKey(key, true),
	          key: key,
	          value: value,
	          previous: previous = state.last,
	          next: undefined,
	          removed: false
	        };
	        if (!state.first) state.first = entry;
	        if (previous) previous.next = entry;
	        if (descriptors) state.size++;
	        else that.size++;
	        // add to index
	        if (index !== 'F') state.index[index] = entry;
	      } return that;
	    };

	    var getEntry = function (that, key) {
	      var state = getInternalState(that);
	      // fast case
	      var index = fastKey(key);
	      var entry;
	      if (index !== 'F') return state.index[index];
	      // frozen object case
	      for (entry = state.first; entry; entry = entry.next) {
	        if (entry.key == key) return entry;
	      }
	    };

	    redefineAll(Prototype, {
	      // `{ Map, Set }.prototype.clear()` methods
	      // https://tc39.es/ecma262/#sec-map.prototype.clear
	      // https://tc39.es/ecma262/#sec-set.prototype.clear
	      clear: function clear() {
	        var that = this;
	        var state = getInternalState(that);
	        var data = state.index;
	        var entry = state.first;
	        while (entry) {
	          entry.removed = true;
	          if (entry.previous) entry.previous = entry.previous.next = undefined;
	          delete data[entry.index];
	          entry = entry.next;
	        }
	        state.first = state.last = undefined;
	        if (descriptors) state.size = 0;
	        else that.size = 0;
	      },
	      // `{ Map, Set }.prototype.delete(key)` methods
	      // https://tc39.es/ecma262/#sec-map.prototype.delete
	      // https://tc39.es/ecma262/#sec-set.prototype.delete
	      'delete': function (key) {
	        var that = this;
	        var state = getInternalState(that);
	        var entry = getEntry(that, key);
	        if (entry) {
	          var next = entry.next;
	          var prev = entry.previous;
	          delete state.index[entry.index];
	          entry.removed = true;
	          if (prev) prev.next = next;
	          if (next) next.previous = prev;
	          if (state.first == entry) state.first = next;
	          if (state.last == entry) state.last = prev;
	          if (descriptors) state.size--;
	          else that.size--;
	        } return !!entry;
	      },
	      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
	      // https://tc39.es/ecma262/#sec-map.prototype.foreach
	      // https://tc39.es/ecma262/#sec-set.prototype.foreach
	      forEach: function forEach(callbackfn /* , that = undefined */) {
	        var state = getInternalState(this);
	        var boundFunction = functionBindContext(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	        var entry;
	        while (entry = entry ? entry.next : state.first) {
	          boundFunction(entry.value, entry.key, this);
	          // revert to the last existing entry
	          while (entry && entry.removed) entry = entry.previous;
	        }
	      },
	      // `{ Map, Set}.prototype.has(key)` methods
	      // https://tc39.es/ecma262/#sec-map.prototype.has
	      // https://tc39.es/ecma262/#sec-set.prototype.has
	      has: function has(key) {
	        return !!getEntry(this, key);
	      }
	    });

	    redefineAll(Prototype, IS_MAP ? {
	      // `Map.prototype.get(key)` method
	      // https://tc39.es/ecma262/#sec-map.prototype.get
	      get: function get(key) {
	        var entry = getEntry(this, key);
	        return entry && entry.value;
	      },
	      // `Map.prototype.set(key, value)` method
	      // https://tc39.es/ecma262/#sec-map.prototype.set
	      set: function set(key, value) {
	        return define(this, key === 0 ? 0 : key, value);
	      }
	    } : {
	      // `Set.prototype.add(value)` method
	      // https://tc39.es/ecma262/#sec-set.prototype.add
	      add: function add(value) {
	        return define(this, value = value === 0 ? 0 : value, value);
	      }
	    });
	    if (descriptors) defineProperty(Prototype, 'size', {
	      get: function () {
	        return getInternalState(this).size;
	      }
	    });
	    return Constructor;
	  },
	  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
	    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
	    var getInternalCollectionState = internalStateGetterFor$1(CONSTRUCTOR_NAME);
	    var getInternalIteratorState = internalStateGetterFor$1(ITERATOR_NAME);
	    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
	    // https://tc39.es/ecma262/#sec-map.prototype.entries
	    // https://tc39.es/ecma262/#sec-map.prototype.keys
	    // https://tc39.es/ecma262/#sec-map.prototype.values
	    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
	    // https://tc39.es/ecma262/#sec-set.prototype.entries
	    // https://tc39.es/ecma262/#sec-set.prototype.keys
	    // https://tc39.es/ecma262/#sec-set.prototype.values
	    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
	    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
	      setInternalState$1(this, {
	        type: ITERATOR_NAME,
	        target: iterated,
	        state: getInternalCollectionState(iterated),
	        kind: kind,
	        last: undefined
	      });
	    }, function () {
	      var state = getInternalIteratorState(this);
	      var kind = state.kind;
	      var entry = state.last;
	      // revert to the last existing entry
	      while (entry && entry.removed) entry = entry.previous;
	      // get next entry
	      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
	        // or finish the iteration
	        state.target = undefined;
	        return { value: undefined, done: true };
	      }
	      // return step by kind
	      if (kind == 'keys') return { value: entry.key, done: false };
	      if (kind == 'values') return { value: entry.value, done: false };
	      return { value: [entry.key, entry.value], done: false };
	    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

	    // `{ Map, Set }.prototype[@@species]` accessors
	    // https://tc39.es/ecma262/#sec-get-map-@@species
	    // https://tc39.es/ecma262/#sec-get-set-@@species
	    setSpecies(CONSTRUCTOR_NAME);
	  }
	};
	collectionStrong.getConstructor;
	collectionStrong.setStrong;

	// `Set` constructor
	// https://tc39.es/ecma262/#sec-set-objects
	collection('Set', function (init) {
	  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
	}, collectionStrong);

	function distinctUntilChanged(comparator, keySelector) {
	  if (keySelector === void 0) {
	    keySelector = identity;
	  }

	  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
	  return operate(function (source, subscriber) {
	    var previousKey;
	    var first = true;
	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      var currentKey = keySelector(value);

	      if (first || !comparator(previousKey, currentKey)) {
	        first = false;
	        previousKey = currentKey;
	        subscriber.next(value);
	      }
	    }));
	  });
	}

	function defaultCompare(a, b) {
	  return a === b;
	}

	// `Map` constructor
	// https://tc39.es/ecma262/#sec-map-objects
	collection('Map', function (init) {
	  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
	}, collectionStrong);

	function pluck() {
	  var properties = [];

	  for (var _i = 0; _i < arguments.length; _i++) {
	    properties[_i] = arguments[_i];
	  }

	  var length = properties.length;

	  if (length === 0) {
	    throw new Error('list of properties cannot be empty.');
	  }

	  return map(function (x) {
	    var currentProp = x;

	    for (var i = 0; i < length; i++) {
	      var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];

	      if (typeof p !== 'undefined') {
	        currentProp = p;
	      } else {
	        return undefined;
	      }
	    }

	    return currentProp;
	  });
	}

	function sample(notifier) {
	  return operate(function (source, subscriber) {
	    var hasValue = false;
	    var lastValue = null;
	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      hasValue = true;
	      lastValue = value;
	    }));
	    notifier.subscribe(createOperatorSubscriber(subscriber, function () {
	      if (hasValue) {
	        hasValue = false;
	        var value = lastValue;
	        lastValue = null;
	        subscriber.next(value);
	      }
	    }, noop));
	  });
	}

	function skip(count) {
	  return filter(function (_, index) {
	    return count <= index;
	  });
	}

	var defaultThrottleConfig = {
	  leading: true,
	  trailing: false
	};
	function throttle(durationSelector, config) {
	  if (config === void 0) {
	    config = defaultThrottleConfig;
	  }

	  return operate(function (source, subscriber) {
	    var leading = config.leading,
	        trailing = config.trailing;
	    var hasValue = false;
	    var sendValue = null;
	    var throttled = null;
	    var isComplete = false;

	    var endThrottling = function endThrottling() {
	      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();
	      throttled = null;

	      if (trailing) {
	        send();
	        isComplete && subscriber.complete();
	      }
	    };

	    var cleanupThrottling = function cleanupThrottling() {
	      throttled = null;
	      isComplete && subscriber.complete();
	    };

	    var startThrottle = function startThrottle(value) {
	      return throttled = innerFrom(durationSelector(value)).subscribe(createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling));
	    };

	    var send = function send() {
	      if (hasValue) {
	        hasValue = false;
	        var value = sendValue;
	        sendValue = null;
	        subscriber.next(value);
	        !isComplete && startThrottle(value);
	      }
	    };

	    source.subscribe(createOperatorSubscriber(subscriber, function (value) {
	      hasValue = true;
	      sendValue = value;
	      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));
	    }, function () {
	      isComplete = true;
	      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();
	    }));
	  });
	}

	function throttleTime(duration, scheduler, config) {
	  if (scheduler === void 0) {
	    scheduler = asyncScheduler;
	  }

	  if (config === void 0) {
	    config = defaultThrottleConfig;
	  }

	  var duration$ = timer(duration, scheduler);
	  return throttle(function () {
	    return duration$;
	  }, config);
	}

	var mutationObserver$ = function mutationObserver$(target, config) {
	  return new Observable(function (observer) {
	    var mutation = new MutationObserver(function (mutations, instance) {
	      observer.next(mutations);
	    });
	    mutation.observe(target, config);

	    var unsubscribe = function unsubscribe() {
	      mutation.disconnect();
	    };

	    return unsubscribe;
	  });
	};

	var tabOverflow = function () {
	  function tabOverflow(passedOptions) {
	    _classCallCheck(this, tabOverflow);

	    _defineProperty(this, "options", {
	      overflowSelector: ".dk-tab-overflow__overflow",
	      more: {
	        selector: ".dk-tab-overflow",
	        verticalAlign: "top",
	        tag: "li",
	        text: "More"
	      },
	      activeSelector: ".active",
	      wrapOverflowTab: true
	    });

	    this.options = deepSpread(this.options, passedOptions);
	  }

	  _createClass(tabOverflow, [{
	    key: "initOverflow",
	    value: function initOverflow() {
	      if (!this.tabContainer) {
	        throw new Error("No \"this.tabContainer\" set");
	      }

	      this.tabContainer.insertAdjacentHTML("beforeend", this.overflowHTML);
	      this.overflow = this.tabContainer.querySelector(this.options.overflowSelector);
	      this.more = this.tabContainer.querySelector(this.options.more.selector);
	      this.more.setAttribute("data-vertical-align", this.options.more.verticalAlign.toString());
	      this.popperInstance = new Popper$1(this.more, this.overflow, {
	        placement: document.querySelector("body").classList.contains("rtl") ? "bottom-start" : "bottom-start",
	        modifiers: {
	          flip: {
	            enabled: false
	          },
	          preventOverflow: {
	            boundariesElement: "viewport",
	            padding: 20
	          }
	        }
	      });

	      this._updateTabs();

	      this._moveLinks();

	      this._initObservers();

	      return this;
	    }
	  }, {
	    key: "checkMoreForActive",
	    value: function checkMoreForActive() {
	      var hasCurrentPage = this.overflow.querySelector(this.options.activeSelector) ? true : false;
	      this.more.setAttribute("data-has-active", hasCurrentPage);
	    }
	  }, {
	    key: "publicMethods",
	    get: function get() {
	      var _this = this;

	      return {
	        update: function update() {
	          _this._updateTabs();

	          _this._moveLinks();
	        }
	      };
	    }
	  }, {
	    key: "_moveLinks",
	    value: function _moveLinks() {
	      this.popperInstance.update();

	      if (this.tooWide) {
	        this._linksToOverflow();
	      } else if (this.hasRoom) {
	        this._linksToTabContainer();
	      }
	    }
	  }, {
	    key: "_updateTabs",
	    value: function _updateTabs() {
	      this.links = this.tabContainer.querySelectorAll(this.options.tabSelector + ":not([data-in-overflow]):not(.dk-tab-overflow)");
	      this.last = this.links && this.links[this.links.length - 1];
	      this.more.style.display = this.overflow.hasChildNodes() ? this.options.more.verticalAlign === "center" ? "flex" : "block" : "none";
	      this.checkMoreForActive();

	      this._updateOverflow();
	    }
	  }, {
	    key: "_updateOverflow",
	    value: function _updateOverflow() {
	      this.overflow.first = this.overflow.firstChild;

	      if (this.overflow.first) {
	        this.overflow.first.width = this.overflow.first.getBoundingClientRect().width || 0;
	      }

	      this.overflow.style.removeProperty("width");
	      this.overflow.style.width = Math.round(this.overflow.getBoundingClientRect().width) + 15 + "px";
	      this.popperInstance.update();
	    }
	  }, {
	    key: "_initObservers",
	    value: function _initObservers() {
	      var _this2 = this;

	      mutationObserver$(this.overflow, {
	        childList: true
	      }).pipe(filter(function (mutations) {
	        return mutations.find(function (_ref) {
	          var type = _ref.type;
	          return type === "childList";
	        });
	      })).subscribe(function () {
	        _this2._updateOverflow();

	        _this2._updateTabs();
	      });
	      var resize$ = fromEvent(window, "resize");
	      resize$.pipe(throttleTime(500)).subscribe(this._moveLinks.bind(this));
	      resize$.pipe(debounceTime(10)).subscribe(this._moveLinks.bind(this));
	    }
	  }, {
	    key: "_linksToOverflow",
	    value: function _linksToOverflow() {
	      var _this3 = this;

	      var whileCounter = 0;

	      while (this.linksWidth > this.containerWidth && whileCounter < 150) {
	        whileCounter++;
	        this.last.setAttribute("data-in-overflow", "");

	        if (this.options.wrapOverflowTab) {
	          (function () {
	            var isVisable = window.getComputedStyle(_this3.last).getPropertyValue("display") !== "none";
	            var li = document.createElement("li");

	            if (_this3.last.getAttribute("aria-current") === "page") {
	              li.setAttribute("aria-current", "page");
	            }

	            if (!isVisable) {
	              li.classList.add("hidden");
	            }

	            li.addEventListener("click", function () {
	              li.querySelector("a").click();
	            });
	            li.prepend(_this3.last);

	            _this3.overflow.prepend(li);
	          })();
	        } else {
	          this.overflow.prepend(this.last);
	        }

	        this._updateTabs();
	      }
	    }
	  }, {
	    key: "_linksToTabContainer",
	    value: function _linksToTabContainer() {
	      var whileCounter = 0;

	      while (this.hasRoom && whileCounter < 100) {
	        whileCounter++;
	        this.overflow.first.removeAttribute("data-in-overflow");

	        if (this.options.wrapOverflowTab) {
	          this.overflow.first.querySelectorAll("[data-in-overflow]").forEach(function (tab) {
	            return tab.removeAttribute("data-in-overflow");
	          });
	          this.more.insertAdjacentElement("beforebegin", this.overflow.first.firstChild);
	          this.overflow.first.remove();
	        } else {
	          this.more.insertAdjacentElement("beforebegin", this.overflow.first);
	        }

	        this._updateTabs();
	      }
	    }
	  }, {
	    key: "overflowHTML",
	    get: function get() {
	      return "<".concat(this.options.more.tag, " class=\"dk-tab-overflow\">\n      ").concat(this.options.more.text, "\n      <ul class=\"dk-tab-overflow__overflow\"></ul>\n    </").concat(this.options.more.tag, ">");
	    }
	  }, {
	    key: "containerWidth",
	    get: function get() {
	      return this.tabContainer.getBoundingClientRect().width;
	    }
	  }, {
	    key: "marginOffset",
	    get: function get() {
	      if (this.links.length === 0) return 0;
	      return parseInt(window.getComputedStyle(this.links[0]).getPropertyValue(this.marginLeftOrRight));
	    }
	  }, {
	    key: "tooWide",
	    get: function get() {
	      return this.linksWidth > this.containerWidth;
	    }
	  }, {
	    key: "hasRoom",
	    get: function get() {
	      var moreWidth = this.overflow.childElementCount === 1 ? -Math.abs(this.more.getBoundingClientRect().width + this.marginOffset) : 0;
	      return this.overflow.first && this.linksWidth + moreWidth + this.overflow.first.width <= this.containerWidth;
	    }
	  }, {
	    key: "marginLeftOrRight",
	    get: function get() {
	      return document.body.classList.contains("rtl") ? "margin-left" : "margin-right";
	    }
	  }, {
	    key: "linksWidth",
	    get: function get() {
	      var _this4 = this;

	      var moreWidth = this.overflow.childElementCount >= 1 ? this.more.getBoundingClientRect().width : 0;
	      var linksWidth = Math.round(Array.from(this.links).map(function (node) {
	        var style = node.currentStyle || window.getComputedStyle(node);
	        return node.getBoundingClientRect().width + parseInt(style.getPropertyValue(_this4.marginLeftOrRight));
	      }).reduce(function (a, b) {
	        return a + b;
	      }, 0));
	      return linksWidth + moreWidth;
	    }
	  }]);

	  return tabOverflow;
	}();

	function _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

	function _isNativeReflectConstruct$3() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

	var dkTabbedMenu = function (_tabOverflow) {
	  _inherits(dkTabbedMenu, _tabOverflow);

	  var _super = _createSuper$3(dkTabbedMenu);

	  function dkTabbedMenu(tabWrapper, passedOptions) {
	    var _this;

	    _classCallCheck(this, dkTabbedMenu);

	    var defaultOptions = {
	      tabSelector: ".dk-tab-item",
	      wrapOverflowTab: false,
	      more: {
	        text: tabWrapper.getAttribute("data-overflow-text") || "More"
	      }
	    };
	    _this = _super.call(this, deepSpread(defaultOptions, passedOptions));
	    _this.tabWrapper = tabWrapper;
	    if (_this.tabWrapper.hasAttribute("react-tab") || _this.tabWrapper.hasAttribute("dk-tab--init")) return _possibleConstructorReturn(_this);

	    _this.tabWrapper.setAttribute("dk-tab--init", "");

	    _this.tabContainer = _this.tabWrapper.querySelector(".dk-tab-list");

	    _this.init();

	    _this.tabOverflow = _this.initOverflow();
	    _this.tabWrapper.dkTabbedMenu = _this.publicMethods;
	    return _this;
	  }

	  _createClass(dkTabbedMenu, [{
	    key: "init",
	    value: function init() {
	      this.setInitalActiveTab();
	      this.addEventListeners();
	    }
	  }, {
	    key: "setInitalActiveTab",
	    value: function setInitalActiveTab() {
	      var _getParameterByName;

	      var paramTab = (_getParameterByName = getParameterByName(this.tabWrapper.getAttribute("data-tab-menu-id"))) === null || _getParameterByName === void 0 ? void 0 : _getParameterByName.replace(/["']/g, "");
	      var activeCheck = Array.from(this.tabWrapper.querySelectorAll("li")).filter(function (item) {
	        return item.classList.contains("active");
	      })[0];

	      if (activeCheck && paramTab) {
	        this.tabWrapper.querySelectorAll(".active").forEach(function (item) {
	          return item.classList.remove("active");
	        });
	      }

	      if (activeCheck && !paramTab) return;
	      var item = this.tabWrapper.querySelector(".dk-tab-item".concat(paramTab ? "[data-tab-item=\"".concat(paramTab.replace(/"/g, ""), "\"]") : ""));
	      var content = this.tabWrapper.querySelector(".dk-tab-content".concat(paramTab ? "[data-tab-item=\"".concat(paramTab, "\"]") : ""));

	      if (paramTab && (!item || !this.tabWrapper)) {
	        console.error("Tried to open tab based on query paramater but couldn't find it. \n\n        id: ".concat(paramTab, " in menu: ").concat(this.tabWrapper.getAttribute("data-tab-menu-id"), "'"), "\n", this.tabWrapper);
	      }

	      item && item.classList.add("active");
	      content && content.classList.add("active");
	    }
	  }, {
	    key: "addEventListeners",
	    value: function addEventListeners() {
	      var self = this;
	      this.tabWrapper.querySelectorAll(".dk-tab-item").forEach(function (tab) {
	        tab.setAttribute("tabindex", "0");
	        tab.addEventListener("click", function () {
	          self.changeTab(this);
	        });
	        tab.addEventListener("keypress", function (e) {
	          var code = e.keyCode;
	          e.preventDefault();

	          switch (code) {
	            case 32:
	              self.changeTab(this);
	              break;

	            case 13:
	              self.changeTab(this);
	              break;
	          }
	        });
	      });
	    }
	  }, {
	    key: "changeTab",
	    value: function changeTab(clickedTab) {
	      var tabId = clickedTab.dataset.tabItem;
	      var tabContent = this.tabWrapper.querySelector(".dk-tab-content[data-tab-item=\"".concat(tabId, "\"]"));
	      var carousel = tabContent.querySelector("[class*='dk-carousel");
	      if (clickedTab.classList.contains("active")) return;

	      if (carousel && !tabContent.hasAttribute("swiper-updated")) {
	        setTimeout(function () {
	          carousel.swiper.update();
	        }, 0);
	        tabContent.setAttribute("swiper-updated", "");
	      }

	      this.tabWrapper.querySelectorAll("li.active").forEach(function (tab) {
	        tab.classList.remove("active");
	      });
	      this.tabWrapper.querySelectorAll(".dk-tab-content").forEach(function (tab) {
	        tab.classList.remove("active");
	      });
	      clickedTab.classList.add("active");
	      tabContent.classList.add("active");
	      this.tabOverflow.checkMoreForActive();
	    }
	  }]);

	  return dkTabbedMenu;
	}(tabOverflow);

	function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$6(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

	var dkTabbedSidebar = function () {
	  function dkTabbedSidebar(tabWrapper, passedOptions) {
	    _classCallCheck(this, dkTabbedSidebar);

	    _defineProperty(this, "tabWrapper", void 0);

	    _defineProperty(this, "tabBtnIds", []);

	    _defineProperty(this, "settings", void 0);

	    _defineProperty(this, "openID$", void 0);

	    _defineProperty(this, "previousId", void 0);

	    _defineProperty(this, "sideBarInitialized", false);

	    var defaultOptions = {
	      btnClass: "dk-tab__item",
	      tabListClass: "dk-tab__list",
	      panelClass: "dk-tab__panel"
	    };
	    this.settings = _objectSpread$6(_objectSpread$6({}, defaultOptions), passedOptions);
	    this.tabWrapper = tabWrapper;
	    if (this.tabWrapper.hasAttribute("react-tab") || this.tabWrapper.hasAttribute("dk-tab--init")) return;
	    this.tabWrapper.setAttribute("dk-tab--init", "");
	    this.init();
	  }

	  _createClass(dkTabbedSidebar, [{
	    key: "init",
	    value: function init() {
	      var _getParameterByName$r,
	          _getParameterByName,
	          _getParameterByName2,
	          _this = this;

	      this.tabBtnIds = Array.from(this.tabWrapper.querySelectorAll(".".concat(this.settings.btnClass))).map(function (b) {
	        return b.id;
	      });
	      var paramTab = (_getParameterByName$r = (_getParameterByName = getParameterByName(this.tabWrapper.getAttribute("aria-label"))) === null || _getParameterByName === void 0 ? void 0 : _getParameterByName.replace(/["']/g, "")) !== null && _getParameterByName$r !== void 0 ? _getParameterByName$r : (_getParameterByName2 = getParameterByName(this.tabWrapper.id)) === null || _getParameterByName2 === void 0 ? void 0 : _getParameterByName2.replace(/["']/g, "");
	      var activeTab = this.tabWrapper.querySelector("[aria-selected=\"true\"]");
	      this.openID$ = new BehaviorSubject(paramTab || (activeTab === null || activeTab === void 0 ? void 0 : activeTab.id) || this.tabBtnIds[0]);
	      this.tabWrapper.querySelectorAll(".".concat(this.settings.panelClass)).forEach(function (panel) {
	        return panel.setAttribute("tabindex", "0");
	      });
	      this.tabWrapper.querySelectorAll(".".concat(this.settings.btnClass)).forEach(function (btn) {
	        return btn.setAttribute("tabindex", "-1");
	      });
	      this.addEventListeners();
	      this.addMatchMedia();
	      this.openID$.subscribe(function (id) {
	        _this.activeTab.open();
	      });
	      this.sideBarInitialized = true;
	    }
	  }, {
	    key: "addEventListeners",
	    value: function addEventListeners() {
	      var _this2 = this;

	      fromEvent(this.tabWrapper, "click").pipe(filter(function (e) {
	        var target = e.target;
	        return target.classList.contains(_this2.settings.btnClass) && !_this2.isTabBtnActive(target);
	      })).subscribe(function (e) {
	        var btn = e.target;

	        _this2.openID$.next(btn.id);
	      });
	      fromEvent(this.tabWrapper, "keydown").pipe(filter(function (e) {
	        var target = e.target;
	        return target.classList.contains(_this2.settings.btnClass);
	      })).subscribe(function (e) {
	        var key = e.key;

	        switch (key) {
	          case "ArrowDown":
	          case "ArrowRight":
	          case "Down":
	          case "Right":
	            _this2.focusTab.next();

	            break;

	          case "ArrowUp":
	          case "ArrowLeft":
	          case "Up":
	          case "Left":
	            _this2.focusTab.previous();

	            break;
	        }
	      });
	    }
	  }, {
	    key: "addMatchMedia",
	    value: function addMatchMedia() {
	      var _this3 = this;

	      var mq = window.matchMedia("(min-width: 768px)");

	      var moveToaccordion = function moveToaccordion(mq) {
	        var tabList = _this3.tabWrapper.querySelector("[role=\"tablist\"]");

	        if (mq.matches) {
	          if (tabList.childElementCount > 0) return;

	          _this3.tabWrapper.querySelectorAll(".".concat(_this3.settings.btnClass)).forEach(function (btn) {
	            tabList.insertAdjacentElement("beforeend", btn);
	          });
	        } else {
	          _this3.tabWrapper.querySelectorAll(".".concat(_this3.settings.btnClass)).forEach(function (btn) {
	            var panel = _this3.tabWrapper.querySelector("#".concat(btn.getAttribute("aria-controls")));

	            panel.insertAdjacentElement("beforebegin", btn);
	          });
	        }
	      };

	      mq.addListener(moveToaccordion);
	      moveToaccordion(mq);
	    }
	  }, {
	    key: "closeEverything",
	    value: function closeEverything() {
	      this.tabWrapper.querySelectorAll("[data-selected=\"true\"]").forEach(function (t) {
	        t.setAttribute("data-selected", "false");
	      });
	      this.tabWrapper.querySelectorAll("[aria-selected=\"true\"]").forEach(function (b) {
	        b.setAttribute("aria-selected", "false");
	        b.setAttribute("tabindex", "-1");
	      });
	    }
	  }, {
	    key: "isTabBtnActive",
	    value: function isTabBtnActive(tabBtn) {
	      var ariaSelected = tabBtn.getAttribute("aria-selected");
	      return ariaSelected === "true" ? true : false;
	    }
	  }, {
	    key: "focusTab",
	    get: function get() {
	      var _this4 = this;

	      var lastIndex = this.tabBtnIds.length - 1;
	      return {
	        next: function next() {
	          var newIndex = _this4.activeTab.index >= lastIndex ? 0 : _this4.activeTab.index + 1;

	          _this4.openID$.next(_this4.tabBtnIds[newIndex]);
	        },
	        previous: function previous() {
	          var newIndex = _this4.activeTab.index === 0 ? lastIndex : _this4.activeTab.index - 1;

	          _this4.openID$.next(_this4.tabBtnIds[newIndex]);
	        }
	      };
	    }
	  }, {
	    key: "activeTab",
	    get: function get() {
	      var self = this;
	      return {
	        get btn() {
	          return self.tabWrapper.querySelector("#".concat(self.openID$.getValue()));
	        },

	        get panel() {
	          return self.tabWrapper.querySelector("#".concat(this.btn.getAttribute("aria-controls")));
	        },

	        get index() {
	          var _this5 = this;

	          return self.tabBtnIds.findIndex(function (b) {
	            return b === _this5.btn.id;
	          });
	        },

	        toggleOpen: function toggleOpen() {
	          self.closeEverything();
	        },
	        focusBtn: function focusBtn() {
	          if (!self.sideBarInitialized) return;
	          this.btn.focus();
	        },
	        open: function open() {
	          self.closeEverything();
	          this.btn.setAttribute("aria-selected", "true");
	          this.btn.removeAttribute("tabindex");
	          this.panel.setAttribute("data-selected", "true");
	          this.focusBtn();
	        }
	      };
	    }
	  }, {
	    key: "isMobile",
	    get: function get() {
	      return window.innerWidth <= 768;
	    }
	  }]);

	  return dkTabbedSidebar;
	}();

	function tabbedMenu(selector, passedSettings) {
	  var settings = lodash.isPlainObject(selector) ? selector : passedSettings;
	  return selectorHelper({
	    selector: selector,
	    defaultSelector: ".dk-tabbed-menu"
	  }, function (tab) {
	    return new dkTabbedMenu(tab, settings).publicMethods;
	  });
	}
	function tabbedSidebar(selector, passedSettings) {
	  var settings = lodash.isPlainObject(selector) ? selector : passedSettings;
	  return selectorHelper({
	    selector: selector,
	    defaultSelector: ".dk-tabbed-sidebar"
	  }, function (tab) {
	    return new dkTabbedSidebar(tab, settings).publicMethods;
	  });
	}

	var onFreeze = internalMetadata.onFreeze;

	// eslint-disable-next-line es/no-object-freeze -- safe
	var $freeze = Object.freeze;
	var FAILS_ON_PRIMITIVES$2 = fails(function () { $freeze(1); });

	// `Object.freeze` method
	// https://tc39.es/ecma262/#sec-object.freeze
	_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$2, sham: !freezing }, {
	  freeze: function freeze(it) {
	    return $freeze && isObject$1(it) ? $freeze(onFreeze(it)) : it;
	  }
	});

	function _taggedTemplateLiteral(strings, raw) {
	  if (!raw) {
	    raw = strings.slice(0);
	  }

	  return Object.freeze(Object.defineProperties(strings, {
	    raw: {
	      value: Object.freeze(raw)
	    }
	  }));
	}

	var getWeakData = internalMetadata.getWeakData;








	var setInternalState = internalState.set;
	var internalStateGetterFor = internalState.getterFor;
	var find = arrayIteration.find;
	var findIndex = arrayIteration.findIndex;
	var splice = functionUncurryThis([].splice);
	var id = 0;

	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function (store) {
	  return store.frozen || (store.frozen = new UncaughtFrozenStore());
	};

	var UncaughtFrozenStore = function () {
	  this.entries = [];
	};

	var findUncaughtFrozen = function (store, key) {
	  return find(store.entries, function (it) {
	    return it[0] === key;
	  });
	};

	UncaughtFrozenStore.prototype = {
	  get: function (key) {
	    var entry = findUncaughtFrozen(this, key);
	    if (entry) return entry[1];
	  },
	  has: function (key) {
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function (key, value) {
	    var entry = findUncaughtFrozen(this, key);
	    if (entry) entry[1] = value;
	    else this.entries.push([key, value]);
	  },
	  'delete': function (key) {
	    var index = findIndex(this.entries, function (it) {
	      return it[0] === key;
	    });
	    if (~index) splice(this.entries, index, 1);
	    return !!~index;
	  }
	};

	var collectionWeak = {
	  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
	    var Constructor = wrapper(function (that, iterable) {
	      anInstance(that, Prototype);
	      setInternalState(that, {
	        type: CONSTRUCTOR_NAME,
	        id: id++,
	        frozen: undefined
	      });
	      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
	    });

	    var Prototype = Constructor.prototype;

	    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

	    var define = function (that, key, value) {
	      var state = getInternalState(that);
	      var data = getWeakData(anObject(key), true);
	      if (data === true) uncaughtFrozenStore(state).set(key, value);
	      else data[state.id] = value;
	      return that;
	    };

	    redefineAll(Prototype, {
	      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
	      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
	      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
	      'delete': function (key) {
	        var state = getInternalState(this);
	        if (!isObject$1(key)) return false;
	        var data = getWeakData(key);
	        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
	        return data && hasOwnProperty_1(data, state.id) && delete data[state.id];
	      },
	      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
	      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
	      // https://tc39.es/ecma262/#sec-weakset.prototype.has
	      has: function has(key) {
	        var state = getInternalState(this);
	        if (!isObject$1(key)) return false;
	        var data = getWeakData(key);
	        if (data === true) return uncaughtFrozenStore(state).has(key);
	        return data && hasOwnProperty_1(data, state.id);
	      }
	    });

	    redefineAll(Prototype, IS_MAP ? {
	      // `WeakMap.prototype.get(key)` method
	      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
	      get: function get(key) {
	        var state = getInternalState(this);
	        if (isObject$1(key)) {
	          var data = getWeakData(key);
	          if (data === true) return uncaughtFrozenStore(state).get(key);
	          return data ? data[state.id] : undefined;
	        }
	      },
	      // `WeakMap.prototype.set(key, value)` method
	      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
	      set: function set(key, value) {
	        return define(this, key, value);
	      }
	    } : {
	      // `WeakSet.prototype.add(value)` method
	      // https://tc39.es/ecma262/#sec-weakset.prototype.add
	      add: function add(value) {
	        return define(this, value, true);
	      }
	    });

	    return Constructor;
	  }
	};
	collectionWeak.getConstructor;

	var enforceInternalState = internalState.enforce;


	var IS_IE11 = !global_1.ActiveXObject && 'ActiveXObject' in global_1;
	var InternalWeakMap;

	var wrapper = function (init) {
	  return function WeakMap() {
	    return init(this, arguments.length ? arguments[0] : undefined);
	  };
	};

	// `WeakMap` constructor
	// https://tc39.es/ecma262/#sec-weakmap-constructor
	var $WeakMap = collection('WeakMap', wrapper, collectionWeak);

	// IE11 WeakMap frozen keys fix
	// We can't use feature detection because it crash some old IE builds
	// https://github.com/zloirock/core-js/issues/485
	if (nativeWeakMap && IS_IE11) {
	  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
	  internalMetadata.enable();
	  var WeakMapPrototype = $WeakMap.prototype;
	  var nativeDelete = functionUncurryThis(WeakMapPrototype['delete']);
	  var nativeHas = functionUncurryThis(WeakMapPrototype.has);
	  var nativeGet = functionUncurryThis(WeakMapPrototype.get);
	  var nativeSet = functionUncurryThis(WeakMapPrototype.set);
	  redefineAll(WeakMapPrototype, {
	    'delete': function (key) {
	      if (isObject$1(key) && !objectIsExtensible(key)) {
	        var state = enforceInternalState(this);
	        if (!state.frozen) state.frozen = new InternalWeakMap();
	        return nativeDelete(this, key) || state.frozen['delete'](key);
	      } return nativeDelete(this, key);
	    },
	    has: function has(key) {
	      if (isObject$1(key) && !objectIsExtensible(key)) {
	        var state = enforceInternalState(this);
	        if (!state.frozen) state.frozen = new InternalWeakMap();
	        return nativeHas(this, key) || state.frozen.has(key);
	      } return nativeHas(this, key);
	    },
	    get: function get(key) {
	      if (isObject$1(key) && !objectIsExtensible(key)) {
	        var state = enforceInternalState(this);
	        if (!state.frozen) state.frozen = new InternalWeakMap();
	        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
	      } return nativeGet(this, key);
	    },
	    set: function set(key, value) {
	      if (isObject$1(key) && !objectIsExtensible(key)) {
	        var state = enforceInternalState(this);
	        if (!state.frozen) state.frozen = new InternalWeakMap();
	        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
	      } else nativeSet(this, key, value);
	      return this;
	    }
	  });
	}

	var umap = (function (_) {
	  return {
	    get: function get(key) {
	      return _.get(key);
	    },
	    set: function set(key, value) {
	      return _.set(key, value), value;
	    }
	  };
	});

	var attr = /([^\s\\>"'=]+)\s*=\s*(['"]?)$/;
	var empty = /^(?:area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)$/i;
	var node = /<[a-z][^>]+$/i;
	var notNode = />[^<>]*$/;
	var selfClosing = /<([a-z]+[a-z0-9:._-]*)([^>]*?)(\/>)/ig;
	var trimEnd = /\s+$/;

	var isNode = function isNode(template, i) {
	  return 0 < i-- && (node.test(template[i]) || !notNode.test(template[i]) && isNode(template, i));
	};

	var regular = function regular(original, name, extra) {
	  return empty.test(name) ? original : "<".concat(name).concat(extra.replace(trimEnd, ''), "></").concat(name, ">");
	};

	var instrument = (function (template, prefix, svg) {
	  var text = [];
	  var length = template.length;

	  var _loop = function _loop(i) {
	    var chunk = template[i - 1];
	    text.push(attr.test(chunk) && isNode(template, i) ? chunk.replace(attr, function (_, $1, $2) {
	      return "".concat(prefix).concat(i - 1, "=").concat($2 || '"').concat($1).concat($2 ? '' : '"');
	    }) : "".concat(chunk, "<!--").concat(prefix).concat(i - 1, "-->"));
	  };

	  for (var i = 1; i < length; i++) {
	    _loop(i);
	  }

	  text.push(template[length - 1]);
	  var output = text.join('').trim();
	  return svg ? output : output.replace(selfClosing, regular);
	});

	var isArray$1 = Array.isArray;
	var _ref = [],
	    indexOf = _ref.indexOf,
	    slice = _ref.slice;

	var ELEMENT_NODE = 1;
	var nodeType = 111;

	var remove = function remove(_ref) {
	  var firstChild = _ref.firstChild,
	      lastChild = _ref.lastChild;
	  var range = document.createRange();
	  range.setStartAfter(firstChild);
	  range.setEndAfter(lastChild);
	  range.deleteContents();
	  return firstChild;
	};

	var diffable = function diffable(node, operation) {
	  return node.nodeType === nodeType ? 1 / operation < 0 ? operation ? remove(node) : node.lastChild : operation ? node.valueOf() : node.firstChild : node;
	};
	var persistent = function persistent(fragment) {
	  var childNodes = fragment.childNodes;
	  var length = childNodes.length;
	  if (length < 2) return length ? childNodes[0] : fragment;
	  var nodes = slice.call(childNodes, 0);
	  var firstChild = nodes[0];
	  var lastChild = nodes[length - 1];
	  return {
	    ELEMENT_NODE: ELEMENT_NODE,
	    nodeType: nodeType,
	    firstChild: firstChild,
	    lastChild: lastChild,
	    valueOf: function valueOf() {
	      if (childNodes.length !== length) {
	        var i = 0;

	        while (i < length) {
	          fragment.appendChild(nodes[i++]);
	        }
	      }

	      return fragment;
	    }
	  };
	};

	var udomdiff = (function (parentNode, a, b, get, before) {
	  var bLength = b.length;
	  var aEnd = a.length;
	  var bEnd = bLength;
	  var aStart = 0;
	  var bStart = 0;
	  var map = null;

	  while (aStart < aEnd || bStart < bEnd) {
	    if (aEnd === aStart) {
	      var node = bEnd < bLength ? bStart ? get(b[bStart - 1], -0).nextSibling : get(b[bEnd - bStart], 0) : before;

	      while (bStart < bEnd) {
	        parentNode.insertBefore(get(b[bStart++], 1), node);
	      }
	    } else if (bEnd === bStart) {
	      while (aStart < aEnd) {
	        if (!map || !map.has(a[aStart])) parentNode.removeChild(get(a[aStart], -1));
	        aStart++;
	      }
	    } else if (a[aStart] === b[bStart]) {
	      aStart++;
	      bStart++;
	    } else if (a[aEnd - 1] === b[bEnd - 1]) {
	      aEnd--;
	      bEnd--;
	    } else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {
	      var _node = get(a[--aEnd], -1).nextSibling;
	      parentNode.insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);
	      parentNode.insertBefore(get(b[--bEnd], 1), _node);
	      a[aEnd] = b[bEnd];
	    } else {
	      if (!map) {
	        map = new Map();
	        var i = bStart;

	        while (i < bEnd) {
	          map.set(b[i], i++);
	        }
	      }

	      if (map.has(a[aStart])) {
	        var index = map.get(a[aStart]);

	        if (bStart < index && index < bEnd) {
	          var _i = aStart;
	          var sequence = 1;

	          while (++_i < aEnd && _i < bEnd && map.get(a[_i]) === index + sequence) {
	            sequence++;
	          }

	          if (sequence > index - bStart) {
	            var _node2 = get(a[aStart], 0);

	            while (bStart < index) {
	              parentNode.insertBefore(get(b[bStart++], 1), _node2);
	            }
	          } else {
	            parentNode.replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));
	          }
	        } else aStart++;
	      } else parentNode.removeChild(get(a[aStart++], -1));
	    }
	  }

	  return b;
	});

	var useForeign = false;
	var Foreign = _createClass(function Foreign(handler, value) {
	  _classCallCheck(this, Foreign);

	  useForeign = true;

	  this._ = function () {
	    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    return handler.apply(void 0, args.concat([value]));
	  };
	});
	var aria = function aria(node) {
	  return function (values) {
	    for (var key in values) {
	      var name = key === 'role' ? key : "aria-".concat(key);
	      var value = values[key];
	      if (value == null) node.removeAttribute(name);else node.setAttribute(name, value);
	    }
	  };
	};
	var attribute = function attribute(node, name) {
	  var oldValue,
	      orphan = true;
	  var attributeNode = document.createAttributeNS(null, name);
	  return function (newValue) {
	    if (oldValue !== newValue) {
	      oldValue = newValue;

	      if (oldValue == null) {
	        if (!orphan) {
	          node.removeAttributeNode(attributeNode);
	          orphan = true;
	        }
	      } else {
	        var value = useForeign && newValue instanceof Foreign ? newValue._(node, name) : newValue;

	        if (value == null) {
	          if (!orphan) node.removeAttributeNode(attributeNode);
	          orphan = true;
	        } else {
	          attributeNode.value = value;

	          if (orphan) {
	            node.setAttributeNodeNS(attributeNode);
	            orphan = false;
	          }
	        }
	      }
	    }
	  };
	};
	var boolean = function boolean(node, key, oldValue) {
	  return function (newValue) {
	    if (oldValue !== !!newValue) {
	      if (oldValue = !!newValue) node.setAttribute(key, '');else node.removeAttribute(key);
	    }
	  };
	};
	var data = function data(_ref) {
	  var dataset = _ref.dataset;
	  return function (values) {
	    for (var key in values) {
	      var value = values[key];
	      if (value == null) delete dataset[key];else dataset[key] = value;
	    }
	  };
	};
	var event = function event(node, name) {
	  var oldValue,
	      lower,
	      type = name.slice(2);
	  if (!(name in node) && (lower = name.toLowerCase()) in node) type = lower.slice(2);
	  return function (newValue) {
	    var info = isArray$1(newValue) ? newValue : [newValue, false];

	    if (oldValue !== info[0]) {
	      if (oldValue) node.removeEventListener(type, oldValue, info[1]);
	      if (oldValue = info[0]) node.addEventListener(type, oldValue, info[1]);
	    }
	  };
	};
	var ref = function ref(node) {
	  var oldValue;
	  return function (value) {
	    if (oldValue !== value) {
	      oldValue = value;
	      if (typeof value === 'function') value(node);else value.current = node;
	    }
	  };
	};
	var setter = function setter(node, key) {
	  return key === 'dataset' ? data(node) : function (value) {
	    node[key] = value;
	  };
	};
	var text = function text(node) {
	  var oldValue;
	  return function (newValue) {
	    if (oldValue != newValue) {
	      oldValue = newValue;
	      node.textContent = newValue == null ? '' : newValue;
	    }
	  };
	};

	var reducePath = function reducePath(_ref, i) {
	  var childNodes = _ref.childNodes;
	  return childNodes[i];
	};

	var diff = function diff(comment, oldNodes, newNodes) {
	  return udomdiff(comment.parentNode, oldNodes, newNodes, diffable, comment);
	};

	var handleAnything = function handleAnything(comment) {
	  var oldValue,
	      text,
	      nodes = [];

	  var anyContent = function anyContent(newValue) {
	    switch (_typeof(newValue)) {
	      case 'string':
	      case 'number':
	      case 'boolean':
	        if (oldValue !== newValue) {
	          oldValue = newValue;
	          if (!text) text = document.createTextNode('');
	          text.data = newValue;
	          nodes = diff(comment, nodes, [text]);
	        }

	        break;

	      case 'object':
	      case 'undefined':
	        if (newValue == null) {
	          if (oldValue != newValue) {
	            oldValue = newValue;
	            nodes = diff(comment, nodes, []);
	          }

	          break;
	        }

	        if (isArray$1(newValue)) {
	          oldValue = newValue;
	          if (newValue.length === 0) nodes = diff(comment, nodes, []);else if (_typeof(newValue[0]) === 'object') nodes = diff(comment, nodes, newValue);else anyContent(String(newValue));
	          break;
	        }

	        if (oldValue !== newValue && 'ELEMENT_NODE' in newValue) {
	          oldValue = newValue;
	          nodes = diff(comment, nodes, newValue.nodeType === 11 ? slice.call(newValue.childNodes) : [newValue]);
	        }

	        break;

	      case 'function':
	        anyContent(newValue(comment));
	        break;
	    }
	  };

	  return anyContent;
	};

	var handleAttribute = function handleAttribute(node, name) {
	  switch (name[0]) {
	    case '?':
	      return boolean(node, name.slice(1), false);

	    case '.':
	      return setter(node, name.slice(1));

	    case '@':
	      return event(node, 'on' + name.slice(1));

	    case 'o':
	      if (name[1] === 'n') return event(node, name);
	  }

	  switch (name) {
	    case 'ref':
	      return ref(node);

	    case 'aria':
	      return aria(node);
	  }

	  return attribute(node, name);
	};

	function handlers(options) {
	  var type = options.type,
	      path = options.path;
	  var node = path.reduceRight(reducePath, this);
	  return type === 'node' ? handleAnything(node) : type === 'attr' ? handleAttribute(node, options.name) : text(node);
	}

	var createContent = function (document) {

	  var FRAGMENT = 'fragment';
	  var TEMPLATE = 'template';
	  var HAS_CONTENT = ('content' in create(TEMPLATE));
	  var createHTML = HAS_CONTENT ? function (html) {
	    var template = create(TEMPLATE);
	    template.innerHTML = html;
	    return template.content;
	  } : function (html) {
	    var content = create(FRAGMENT);
	    var template = create(TEMPLATE);
	    var childNodes = null;

	    if (/^[^\S]*?<(col(?:group)?|t(?:head|body|foot|r|d|h))/i.test(html)) {
	      var selector = RegExp.$1;
	      template.innerHTML = '<table>' + html + '</table>';
	      childNodes = template.querySelectorAll(selector);
	    } else {
	      template.innerHTML = html;
	      childNodes = template.childNodes;
	    }

	    append(content, childNodes);
	    return content;
	  };
	  return function createContent(markup, type) {
	    return (type === 'svg' ? createSVG : createHTML)(markup);
	  };

	  function append(root, childNodes) {
	    var length = childNodes.length;

	    while (length--) {
	      root.appendChild(childNodes[0]);
	    }
	  }

	  function create(element) {
	    return element === FRAGMENT ? document.createDocumentFragment() : document.createElementNS('http://www.w3.org/1999/xhtml', element);
	  }

	  function createSVG(svg) {
	    var content = create(FRAGMENT);
	    var template = create('div');
	    template.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg">' + svg + '</svg>';
	    append(content, template.firstChild.childNodes);
	    return content;
	  }
	}(document);

	var isImportNodeLengthWrong = document.importNode.length != 1;
	var createFragment = isImportNodeLengthWrong ? function (text, type, normalize) {
	  return document.importNode(createContent(text, type, normalize), true);
	} : createContent;
	var createWalker = isImportNodeLengthWrong ? function (fragment) {
	  return document.createTreeWalker(fragment, 1 | 128, null, false);
	} : function (fragment) {
	  return document.createTreeWalker(fragment, 1 | 128);
	};

	var createPath = function createPath(node) {
	  var path = [];
	  var _node = node,
	      parentNode = _node.parentNode;

	  while (parentNode) {
	    path.push(indexOf.call(parentNode.childNodes, node));
	    node = parentNode;
	    parentNode = node.parentNode;
	  }

	  return path;
	};

	var prefix = 'isÂµ';
	var cache$1 = umap(new WeakMap());
	var textOnly = /^(?:plaintext|script|style|textarea|title|xmp)$/i;
	var createCache = function createCache() {
	  return {
	    stack: [],
	    entry: null,
	    wire: null
	  };
	};

	var createEntry = function createEntry(type, template) {
	  var _mapUpdates = mapUpdates(type, template),
	      content = _mapUpdates.content,
	      updates = _mapUpdates.updates;

	  return {
	    type: type,
	    template: template,
	    content: content,
	    updates: updates,
	    wire: null
	  };
	};

	var mapTemplate = function mapTemplate(type, template) {
	  var text = instrument(template, prefix, type === 'svg');
	  var content = createFragment(text, type);
	  var tw = createWalker(content);
	  var nodes = [];
	  var length = template.length - 1;
	  var i = 0;
	  var search = "".concat(prefix).concat(i);

	  while (i < length) {
	    var node = tw.nextNode();
	    if (!node) throw "bad template: ".concat(text);

	    if (node.nodeType === 8) {
	      if (node.data === search) {
	        nodes.push({
	          type: 'node',
	          path: createPath(node)
	        });
	        search = "".concat(prefix).concat(++i);
	      }
	    } else {
	      while (node.hasAttribute(search)) {
	        nodes.push({
	          type: 'attr',
	          path: createPath(node),
	          name: node.getAttribute(search)
	        });
	        node.removeAttribute(search);
	        search = "".concat(prefix).concat(++i);
	      }

	      if (textOnly.test(node.tagName) && node.textContent.trim() === "<!--".concat(search, "-->")) {
	        node.textContent = '';
	        nodes.push({
	          type: 'text',
	          path: createPath(node)
	        });
	        search = "".concat(prefix).concat(++i);
	      }
	    }
	  }

	  return {
	    content: content,
	    nodes: nodes
	  };
	};

	var mapUpdates = function mapUpdates(type, template) {
	  var _ref = cache$1.get(template) || cache$1.set(template, mapTemplate(type, template)),
	      content = _ref.content,
	      nodes = _ref.nodes;

	  var fragment = document.importNode(content, true);
	  var updates = nodes.map(handlers, fragment);
	  return {
	    content: fragment,
	    updates: updates
	  };
	};

	var unroll = function unroll(info, _ref2) {
	  var type = _ref2.type,
	      template = _ref2.template,
	      values = _ref2.values;
	  var length = values.length;
	  unrollValues(info, values, length);
	  var entry = info.entry;
	  if (!entry || entry.template !== template || entry.type !== type) info.entry = entry = createEntry(type, template);
	  var _entry = entry,
	      content = _entry.content,
	      updates = _entry.updates,
	      wire = _entry.wire;

	  for (var i = 0; i < length; i++) {
	    updates[i](values[i]);
	  }

	  return wire || (entry.wire = persistent(content));
	};

	var unrollValues = function unrollValues(_ref3, values, length) {
	  var stack = _ref3.stack;

	  for (var i = 0; i < length; i++) {
	    var hole = values[i];
	    if (hole instanceof Hole) values[i] = unroll(stack[i] || (stack[i] = createCache()), hole);else if (isArray$1(hole)) unrollValues(stack[i] || (stack[i] = createCache()), hole, hole.length);else stack[i] = null;
	  }

	  if (length < stack.length) stack.splice(length);
	};

	function Hole(type, template, values) {
	  this.type = type;
	  this.template = template;
	  this.values = values;
	}

	var create$1 = Object.create,
	    defineProperties = Object.defineProperties;

	var tag = function tag(type) {
	  var keyed = umap(new WeakMap());

	  var fixed = function fixed(cache) {
	    return function (template) {
	      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        values[_key - 1] = arguments[_key];
	      }

	      return unroll(cache, {
	        type: type,
	        template: template,
	        values: values
	      });
	    };
	  };

	  return defineProperties(function (template) {
	    for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	      values[_key2 - 1] = arguments[_key2];
	    }

	    return new Hole(type, template, values);
	  }, {
	    for: {
	      value: function value(ref, id) {
	        var memo = keyed.get(ref) || keyed.set(ref, create$1(null));
	        return memo[id] || (memo[id] = fixed(createCache()));
	      }
	    },
	    node: {
	      value: function value(template) {
	        for (var _len3 = arguments.length, values = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
	          values[_key3 - 1] = arguments[_key3];
	        }

	        return unroll(createCache(), {
	          type: type,
	          template: template,
	          values: values
	        }).valueOf();
	      }
	    }
	  });
	};

	var cache = umap(new WeakMap());

	var render = function render(where, what) {
	  var hole = typeof what === 'function' ? what() : what;
	  var info = cache.get(where) || cache.set(where, createCache());
	  var wire = hole instanceof Hole ? unroll(info, hole) : hole;

	  if (wire !== info.wire) {
	    info.wire = wire;
	    where.textContent = '';
	    where.appendChild(wire.valueOf());
	  }

	  return where;
	};

	var html = tag('html');

	var vanilla = createCommonjsModule(function (module, exports) {

















	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function createStore(createState) {
	  var state;
	  var listeners = new Set();

	  var setState = function setState(partial, replace) {
	    var nextState = typeof partial === 'function' ? partial(state) : partial;

	    if (nextState !== state) {
	      var _previousState = state;
	      state = replace ? nextState : Object.assign({}, state, nextState);
	      listeners.forEach(function (listener) {
	        return listener(state, _previousState);
	      });
	    }
	  };

	  var getState = function getState() {
	    return state;
	  };

	  var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {
	    if (selector === void 0) {
	      selector = getState;
	    }

	    if (equalityFn === void 0) {
	      equalityFn = Object.is;
	    }

	    console.warn('[DEPRECATED] Please use `subscribeWithSelector` middleware');
	    var currentSlice = selector(state);

	    function listenerToAdd() {
	      var nextSlice = selector(state);

	      if (!equalityFn(currentSlice, nextSlice)) {
	        var _previousSlice = currentSlice;
	        listener(currentSlice = nextSlice, _previousSlice);
	      }
	    }

	    listeners.add(listenerToAdd);
	    return function () {
	      return listeners.delete(listenerToAdd);
	    };
	  };

	  var subscribe = function subscribe(listener, selector, equalityFn) {
	    if (selector || equalityFn) {
	      return subscribeWithSelector(listener, selector, equalityFn);
	    }

	    listeners.add(listener);
	    return function () {
	      return listeners.delete(listener);
	    };
	  };

	  var destroy = function destroy() {
	    return listeners.clear();
	  };

	  var api = {
	    setState: setState,
	    getState: getState,
	    subscribe: subscribe,
	    destroy: destroy
	  };
	  state = createState(setState, getState, api);
	  return api;
	}

	exports["default"] = createStore;
	});

	var create = unwrapExports(vanilla);

	function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$5(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
	function createDropdownStore(initialState) {
	  var store = create(function () {
	    return _objectSpread$5({
	      isOpen: false,
	      noFocusChange: false,
	      options: [],
	      filterPlaceholder: "Type to search...."
	    }, initialState);
	  });
	  return store;
	}

	var _templateObject$3, _templateObject2$1;

	function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
	var dropdownID = 0;

	var AbstractCustomSelect = function () {
	  function AbstractCustomSelect(dropdown, settings) {
	    _classCallCheck(this, AbstractCustomSelect);

	    _defineProperty(this, "selectRef", void 0);

	    _defineProperty(this, "store", void 0);

	    _defineProperty(this, "selectOnChange$", void 0);

	    _defineProperty(this, "options", void 0);

	    _defineProperty(this, "settings", void 0);

	    _defineProperty(this, "placeholderText", void 0);

	    _defineProperty(this, "container", void 0);

	    _defineProperty(this, "optionsContainer", void 0);

	    _defineProperty(this, "preSelected", []);

	    _defineProperty(this, "hasError", false);

	    _defineProperty(this, "clicked", void 0);

	    this.settings = _objectSpread$4(_objectSpread$4({
	      id: dropdownID,
	      containerClass: "dk-dropdown__container",
	      optionsContainerClass: "dk-dropdown__options",
	      inlineWidth: true,
	      filter: dropdown.hasAttribute("data-filter"),
	      debug: false
	    }, settings), {}, {
	      filterPlaceholder: dropdown.getAttribute("data-filter-placeholder") || (settings === null || settings === void 0 ? void 0 : settings.filterPlaceholder) || "Type to search..."
	    });
	    dropdownID++;
	    this.selectRef = dropdown;

	    if (this.selectRef.hasAttribute("data-placeholder")) {
	      this.placeholderText = this.selectRef.getAttribute("data-placeholder");
	      this.selectRef.insertAdjacentElement("afterbegin", this.placehlderMarkup);
	    }

	    this.selectRef.setAttribute("dk-dropdown--init", "");
	    this.selectRef.setAttribute("tabindex", "-1");
	    this.selectRef.setAttribute("data-dropdown-id", this.settings.id.toString());

	    if (this.settings.debug) {
	      this.selectRef.setAttribute("data-debug", "true");
	    }

	    this.store = createDropdownStore(_objectSpread$4({
	      options: this.parsedOptions,
	      filterPlaceholder: this.settings.filterPlaceholder
	    }, this.selectRef.hasAttribute("data-placeholder") && {
	      placeholder: this.selectRef.getAttribute("data-placeholder")
	    }));
	    this.initBaseClass();
	  }

	  _createClass(AbstractCustomSelect, [{
	    key: "state",
	    get: function get() {
	      return this.store.getState();
	    }
	  }, {
	    key: "setState",
	    value: function setState(newState) {
	      this.store.setState(newState);
	    }
	  }, {
	    key: "initBaseClass",
	    value: function initBaseClass() {
	      this.sharedEvents();
	      this.initContainers();
	      this.addMutationObserver();
	      this.selectOnChange$ = fromEvent(this.selectRef, "change").pipe(filter(function (e) {
	        var _e$detail;

	        return !((_e$detail = e.detail) !== null && _e$detail !== void 0 && _e$detail.customChange);
	      }));
	    }
	  }, {
	    key: "initContainers",
	    value: function initContainers() {
	      this.createDropdownContainer();
	      this.selectRef.insertAdjacentElement("afterend", this.container);
	      this.createOptionsContainer();
	      this.container.insertAdjacentElement("beforebegin", this.selectRef);
	      this.handleDisabeled();
	    }
	  }, {
	    key: "createDropdownContainer",
	    value: function createDropdownContainer() {
	      this.container = document.createElement("div");
	      this.updateContainerClassNames();
	      this.container.tabIndex = 0;
	      this.container.setAttribute("data-dropdown-id", this.settings.id.toString());

	      if (this.settings.inlineWidth) {
	        this.setInlineWidth();
	      }
	    }
	  }, {
	    key: "createOptionsContainer",
	    value: function createOptionsContainer() {
	      this.optionsContainer = document.createElement("div");
	      this.optionsContainer.setAttribute("tabindex", "0");
	      this.optionsContainer.setAttribute("data-dropdown-open", "false");
	      this.optionsContainer.setAttribute("data-dropdown-id", this.settings.id.toString());
	      this.optionsContainer.classList.add(this.settings.optionsContainerClass);
	    }
	  }, {
	    key: "setInlineWidth",
	    value: function setInlineWidth(width) {
	      var widthArg = width && typeof width === "number" ? width + "px" : width === null || width === void 0 ? void 0 : width.toString();
	      var newWidth = width ? widthArg : this.selectWidth;
	      this.container.style.width = newWidth;

	      if (width) {
	        return "Dropdown ID ".concat(this.settings.id, ": Width set to ").concat(newWidth);
	      }
	    }
	  }, {
	    key: "addMutationObserver",
	    value: function addMutationObserver() {
	      var _this = this;

	      var childChanged = debounce$1(function () {
	        _this.setState({
	          options: _this.parsedOptions
	        });

	        _this._render();

	        if (_this.settings.inlineWidth) {
	          _this.setInlineWidth();
	        }
	      }, 0);
	      var config = {
	        attributes: true,
	        childList: true,
	        subtree: true
	      };
	      var observer = new MutationObserver(function (mutationsList) {
	        return mutationsList.forEach(function (mutation) {
	          var type = mutation.type;

	          if (type === "childList") {
	            childChanged();
	          } else if (type === "attributes") {
	            _this.handleAttributeMutation(mutation);
	          } else ;
	        });
	      });
	      observer.observe(this.selectRef, config);
	    }
	  }, {
	    key: "sharedEvents",
	    value: function sharedEvents() {
	      if (typeof window.mouseDown == "undefined") {
	        window.mouseDown = false;

	        document.body.onmousedown = function () {
	          window.mouseDown = true;
	        };

	        document.body.onmouseup = function () {
	          window.mouseDown = false;
	        };
	      }
	    }
	  }, {
	    key: "handleAttributeMutation",
	    value: function handleAttributeMutation(mutation) {
	      var attributeName = mutation.attributeName;

	      switch (attributeName) {
	        case "disabled":
	          return this.handleDisabeled();

	        case "class":
	          return this.updateContainerClassNames();

	        default:
	          return;
	      }
	    }
	  }, {
	    key: "updateContainerClassNames",
	    value: function updateContainerClassNames() {
	      var selectClassNames = Array.from(this.selectRef.classList).filter(function (className) {
	        return className !== "dk-dropdown";
	      }).join(" ");
	      this.container.className = this.settings.containerClass + " " + selectClassNames;
	    }
	  }, {
	    key: "parseOptionElm",
	    value: function parseOptionElm(option, index) {
	      var label = option.innerText,
	          value = option.value,
	          hidden = option.hidden,
	          selected = option.selected;
	      return {
	        label: label,
	        value: value,
	        hidden: hidden,
	        index: index,
	        selected: selected
	      };
	    }
	  }, {
	    key: "handleDisabeled",
	    value: function handleDisabeled() {
	      if (this.selectRef.hasAttribute("disabled")) {
	        this.container.classList.add("dk-dropdown__container--disabled");
	      } else {
	        this.container.classList.remove("dk-dropdown__container--disabled");
	      }
	    }
	  }, {
	    key: "fireChangeEvent",
	    value: function fireChangeEvent() {
	      var event = new CustomEvent("change", {
	        detail: {
	          customChange: true
	        }
	      });
	      this.selectRef.dispatchEvent(event);
	    }
	  }, {
	    key: "clearSelected",
	    value: function clearSelected() {
	      this.optionRefs.filter(function (o) {
	        return o.selected;
	      }).forEach(function (option) {
	        return option.selected = false;
	      });
	      this.setState({
	        options: this.parsedOptions
	      });
	    }
	  }, {
	    key: "placehlderMarkup",
	    get: function get() {
	      if (this.selectRef.selectedIndex >= 0 && this.selectRef.options[this.selectRef.selectedIndex].text === "") {
	        return html.node(_templateObject$3 || (_templateObject$3 = _taggedTemplateLiteral(["<option value=\"\" disabled selected hidden>", "</option>"])), this.placeholderText);
	      } else {
	        return html.node(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteral(["<option value=\"\" disabled hidden>", "</option>"])), this.placeholderText);
	      }
	    }
	  }, {
	    key: "selectWidth",
	    get: function get() {
	      return this.selectRef.getBoundingClientRect().width + "px";
	    }
	  }, {
	    key: "parsedOptions",
	    get: function get() {
	      var _this2 = this;

	      return this.optionRefs.map(function (option, index) {
	        return _this2.parseOptionElm(option, index);
	      });
	    }
	  }, {
	    key: "optionRefs",
	    get: function get() {
	      return Array.from(this.selectRef.getElementsByTagName("option"));
	    }
	  }, {
	    key: "selectedOptions",
	    get: function get() {
	      return this.state.options.filter(function (option) {
	        return option.selected;
	      });
	    }
	  }, {
	    key: "noneSelected",
	    get: function get() {
	      return this.selectedOptions.length === 0;
	    }
	  }]);

	  return AbstractCustomSelect;
	}();

	function _objectWithoutPropertiesLoose(source, excluded) {
	  if (source == null) return {};
	  var target = {};
	  var sourceKeys = Object.keys(source);
	  var key, i;

	  for (i = 0; i < sourceKeys.length; i++) {
	    key = sourceKeys[i];
	    if (excluded.indexOf(key) >= 0) continue;
	    target[key] = source[key];
	  }

	  return target;
	}

	function _objectWithoutProperties(source, excluded) {
	  if (source == null) return {};
	  var target = _objectWithoutPropertiesLoose(source, excluded);
	  var key, i;

	  if (Object.getOwnPropertySymbols) {
	    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

	    for (i = 0; i < sourceSymbolKeys.length; i++) {
	      key = sourceSymbolKeys[i];
	      if (excluded.indexOf(key) >= 0) continue;
	      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
	      target[key] = source[key];
	    }
	  }

	  return target;
	}

	var Array$1 = global_1.Array;
	var $stringify = getBuiltIn('JSON', 'stringify');
	var exec = functionUncurryThis(/./.exec);
	var charAt = functionUncurryThis(''.charAt);
	var charCodeAt = functionUncurryThis(''.charCodeAt);
	var replace = functionUncurryThis(''.replace);
	var numberToString = functionUncurryThis(1.0.toString);

	var tester = /[\uD800-\uDFFF]/g;
	var low = /^[\uD800-\uDBFF]$/;
	var hi = /^[\uDC00-\uDFFF]$/;

	var fix = function (match, offset, string) {
	  var prev = charAt(string, offset - 1);
	  var next = charAt(string, offset + 1);
	  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {
	    return '\\u' + numberToString(charCodeAt(match, 0), 16);
	  } return match;
	};

	var FORCED = fails(function () {
	  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
	    || $stringify('\uDEAD') !== '"\\udead"';
	});

	if ($stringify) {
	  // `JSON.stringify` method
	  // https://tc39.es/ecma262/#sec-json.stringify
	  // https://github.com/tc39/proposal-well-formed-stringify
	  _export({ target: 'JSON', stat: true, forced: FORCED }, {
	    // eslint-disable-next-line no-unused-vars -- required for `.length`
	    stringify: function stringify(it, replacer, space) {
	      for (var i = 0, l = arguments.length, args = Array$1(l); i < l; i++) args[i] = arguments[i];
	      var result = functionApply($stringify, null, args);
	      return typeof result == 'string' ? replace(result, tester, fix) : result;
	    }
	  });
	}

	var middleware = createCommonjsModule(function (module, exports) {





























	Object.defineProperty(exports, '__esModule', {
	  value: true
	});

	function _extends() {
	  _extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };

	  return _extends.apply(this, arguments);
	}

	var redux = function redux(reducer, initial) {
	  return function (set, get, api) {
	    api.dispatch = function (action) {
	      set(function (state) {
	        return reducer(state, action);
	      }, false, action);
	      return action;
	    };

	    api.dispatchFromDevtools = true;
	    return _extends({
	      dispatch: function dispatch() {
	        return api.dispatch.apply(api, arguments);
	      }
	    }, initial);
	  };
	};

	function devtools(fn, options) {
	  return function (set, get, api) {
	    var _serialize;

	    var didWarnAboutNameDeprecation = false;

	    if (typeof options === 'string' && !didWarnAboutNameDeprecation) {
	      console.warn('[zustand devtools middleware]: passing `name` as directly will be not allowed in next major' + 'pass the `name` in an object `{ name: ... }` instead');
	      didWarnAboutNameDeprecation = true;
	    }

	    var devtoolsOptions = options === undefined ? {
	      name: undefined,
	      anonymousActionType: undefined
	    } : typeof options === 'string' ? {
	      name: options
	    } : options;

	    if (typeof (devtoolsOptions == null ? void 0 : (_serialize = devtoolsOptions.serialize) == null ? void 0 : _serialize.options) !== 'undefined') {
	      console.warn('[zustand devtools middleware]: `serialize.options` is deprecated, just use `serialize`');
	    }

	    var extensionConnector;

	    try {
	      extensionConnector = window.__REDUX_DEVTOOLS_EXTENSION__ || window.top.__REDUX_DEVTOOLS_EXTENSION__;
	    } catch (_unused) {}

	    if (!extensionConnector) {

	      return fn(set, get, api);
	    }

	    var extension = Object.create(extensionConnector.connect(devtoolsOptions));
	    var didWarnAboutDevtools = false;
	    Object.defineProperty(api, 'devtools', {
	      get: function get() {
	        if (!didWarnAboutDevtools) {
	          console.warn('[zustand devtools middleware] `devtools` property on the store is deprecated ' + 'it will be removed in the next major.\n' + "You shouldn't interact with the extension directly. But in case you still want to " + 'you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly');
	          didWarnAboutDevtools = true;
	        }

	        return extension;
	      },
	      set: function set(value) {
	        if (!didWarnAboutDevtools) {
	          console.warn('[zustand devtools middleware] `api.devtools` is deprecated, ' + 'it will be removed in the next major.\n' + "You shouldn't interact with the extension directly. But in case you still want to " + 'you can patch `window.__REDUX_DEVTOOLS_EXTENSION__` directly');
	          didWarnAboutDevtools = true;
	        }

	        extension = value;
	      }
	    });
	    var didWarnAboutPrefix = false;
	    Object.defineProperty(extension, 'prefix', {
	      get: function get() {
	        if (!didWarnAboutPrefix) {
	          console.warn('[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\n' + 'We no longer prefix the actions/names' + devtoolsOptions.name === undefined ? ', pass the `name` option to create a separate instance of devtools for each store.' : ', because the `name` option already creates a separate instance of devtools for each store.');
	          didWarnAboutPrefix = true;
	        }

	        return '';
	      },
	      set: function set() {
	        if (!didWarnAboutPrefix) {
	          console.warn('[zustand devtools middleware] along with `api.devtools`, `api.devtools.prefix` is deprecated.\n' + 'We no longer prefix the actions/names' + devtoolsOptions.name === undefined ? ', pass the `name` option to create a separate instance of devtools for each store.' : ', because the `name` option already creates a separate instance of devtools for each store.');
	          didWarnAboutPrefix = true;
	        }
	      }
	    });
	    var isRecording = true;

	    api.setState = function (state, replace, nameOrAction) {
	      set(state, replace);
	      if (!isRecording) return;
	      extension.send(nameOrAction === undefined ? {
	        type: devtoolsOptions.anonymousActionType || 'anonymous'
	      } : typeof nameOrAction === 'string' ? {
	        type: nameOrAction
	      } : nameOrAction, get());
	    };

	    var setStateFromDevtools = function setStateFromDevtools() {
	      var originalIsRecording = isRecording;
	      isRecording = false;
	      set.apply(void 0, arguments);
	      isRecording = originalIsRecording;
	    };

	    var initialState = fn(api.setState, get, api);
	    extension.init(initialState);

	    if (api.dispatchFromDevtools && typeof api.dispatch === 'function') {
	      var didWarnAboutReservedActionType = false;
	      var originalDispatch = api.dispatch;

	      api.dispatch = function () {
	        for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {
	          a[_key] = arguments[_key];
	        }

	        if (a[0].type === '__setState' && !didWarnAboutReservedActionType) {
	          console.warn('[zustand devtools middleware] "__setState" action type is reserved ' + 'to set state from the devtools. Avoid using it.');
	          didWarnAboutReservedActionType = true;
	        }

	        originalDispatch.apply(void 0, a);
	      };
	    }

	    extension.subscribe(function (message) {
	      switch (message.type) {
	        case 'ACTION':
	          if (typeof message.payload !== 'string') {
	            console.error('[zustand devtools middleware] Unsupported action format');
	            return;
	          }

	          return parseJsonThen(message.payload, function (action) {
	            if (action.type === '__setState') {
	              setStateFromDevtools(action.state);
	              return;
	            }

	            if (!api.dispatchFromDevtools) return;
	            if (typeof api.dispatch !== 'function') return;
	            api.dispatch(action);
	          });

	        case 'DISPATCH':
	          switch (message.payload.type) {
	            case 'RESET':
	              setStateFromDevtools(initialState);
	              return extension.init(api.getState());

	            case 'COMMIT':
	              return extension.init(api.getState());

	            case 'ROLLBACK':
	              return parseJsonThen(message.state, function (state) {
	                setStateFromDevtools(state);
	                extension.init(api.getState());
	              });

	            case 'JUMP_TO_STATE':
	            case 'JUMP_TO_ACTION':
	              return parseJsonThen(message.state, function (state) {
	                setStateFromDevtools(state);
	              });

	            case 'IMPORT_STATE':
	              {
	                var _nextLiftedState$comp;

	                var nextLiftedState = message.payload.nextLiftedState;
	                var lastComputedState = (_nextLiftedState$comp = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _nextLiftedState$comp.state;
	                if (!lastComputedState) return;
	                setStateFromDevtools(lastComputedState);
	                extension.send(null, nextLiftedState);
	                return;
	              }

	            case 'PAUSE_RECORDING':
	              return isRecording = !isRecording;
	          }

	          return;
	      }
	    });
	    return initialState;
	  };
	}

	var parseJsonThen = function parseJsonThen(stringified, f) {
	  var parsed;

	  try {
	    parsed = JSON.parse(stringified);
	  } catch (e) {
	    console.error('[zustand devtools middleware] Could not parse the received json', e);
	  }

	  if (parsed !== undefined) f(parsed);
	};

	var subscribeWithSelector = function subscribeWithSelector(fn) {
	  return function (set, get, api) {
	    var origSubscribe = api.subscribe;

	    api.subscribe = function (selector, optListener, options) {
	      var listener = selector;

	      if (optListener) {
	        var equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;
	        var currentSlice = selector(api.getState());

	        listener = function listener(state) {
	          var nextSlice = selector(state);

	          if (!equalityFn(currentSlice, nextSlice)) {
	            var previousSlice = currentSlice;
	            optListener(currentSlice = nextSlice, previousSlice);
	          }
	        };

	        if (options != null && options.fireImmediately) {
	          optListener(currentSlice, currentSlice);
	        }
	      }

	      return origSubscribe(listener);
	    };

	    var initialState = fn(set, get, api);
	    return initialState;
	  };
	};

	var combine = function combine(initialState, create) {
	  return function (set, get, api) {
	    return Object.assign({}, initialState, create(set, get, api));
	  };
	};

	var toThenable = function toThenable(fn) {
	  return function (input) {
	    try {
	      var result = fn(input);

	      if (result instanceof Promise) {
	        return result;
	      }

	      return {
	        then: function then(onFulfilled) {
	          return toThenable(onFulfilled)(result);
	        },
	        catch: function _catch(_onRejected) {
	          return this;
	        }
	      };
	    } catch (e) {
	      return {
	        then: function then(_onFulfilled) {
	          return this;
	        },
	        catch: function _catch(onRejected) {
	          return toThenable(onRejected)(e);
	        }
	      };
	    }
	  };
	};

	var persist = function persist(config, baseOptions) {
	  return function (set, get, api) {
	    var options = _extends({
	      getStorage: function getStorage() {
	        return localStorage;
	      },
	      serialize: JSON.stringify,
	      deserialize: JSON.parse,
	      partialize: function partialize(state) {
	        return state;
	      },
	      version: 0,
	      merge: function merge(persistedState, currentState) {
	        return _extends({}, currentState, persistedState);
	      }
	    }, baseOptions);

	    if (options.blacklist || options.whitelist) {
	      console.warn("The " + (options.blacklist ? 'blacklist' : 'whitelist') + " option is deprecated and will be removed in the next version. Please use the 'partialize' option instead.");
	    }

	    var _hasHydrated = false;
	    var hydrationListeners = new Set();
	    var finishHydrationListeners = new Set();
	    var storage;

	    try {
	      storage = options.getStorage();
	    } catch (e) {}

	    if (!storage) {
	      return config(function () {
	        console.warn("[zustand persist middleware] Unable to update item '" + options.name + "', the given storage is currently unavailable.");
	        set.apply(void 0, arguments);
	      }, get, api);
	    } else if (!storage.removeItem) {
	      console.warn("[zustand persist middleware] The given storage for item '" + options.name + "' does not contain a 'removeItem' method, which will be required in v4.");
	    }

	    var thenableSerialize = toThenable(options.serialize);

	    var setItem = function setItem() {
	      var state = options.partialize(_extends({}, get()));

	      if (options.whitelist) {
	        Object.keys(state).forEach(function (key) {
	          var _options$whitelist;

	          !((_options$whitelist = options.whitelist) != null && _options$whitelist.includes(key)) && delete state[key];
	        });
	      }

	      if (options.blacklist) {
	        options.blacklist.forEach(function (key) {
	          return delete state[key];
	        });
	      }

	      var errorInSync;
	      var thenable = thenableSerialize({
	        state: state,
	        version: options.version
	      }).then(function (serializedValue) {
	        return storage.setItem(options.name, serializedValue);
	      }).catch(function (e) {
	        errorInSync = e;
	      });

	      if (errorInSync) {
	        throw errorInSync;
	      }

	      return thenable;
	    };

	    var savedSetState = api.setState;

	    api.setState = function (state, replace) {
	      savedSetState(state, replace);
	      void setItem();
	    };

	    var configResult = config(function () {
	      set.apply(void 0, arguments);
	      void setItem();
	    }, get, api);
	    var stateFromStorage;

	    var hydrate = function hydrate() {
	      if (!storage) return;
	      _hasHydrated = false;
	      hydrationListeners.forEach(function (cb) {
	        return cb(get());
	      });
	      var postRehydrationCallback = (options.onRehydrateStorage == null ? void 0 : options.onRehydrateStorage(get())) || undefined;
	      return toThenable(storage.getItem.bind(storage))(options.name).then(function (storageValue) {
	        if (storageValue) {
	          return options.deserialize(storageValue);
	        }
	      }).then(function (deserializedStorageValue) {
	        if (deserializedStorageValue) {
	          if (typeof deserializedStorageValue.version === 'number' && deserializedStorageValue.version !== options.version) {
	            if (options.migrate) {
	              return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);
	            }

	            console.error("State loaded from storage couldn't be migrated since no migrate function was provided");
	          } else {
	            return deserializedStorageValue.state;
	          }
	        }
	      }).then(function (migratedState) {
	        var _get;

	        stateFromStorage = options.merge(migratedState, (_get = get()) != null ? _get : configResult);
	        set(stateFromStorage, true);
	        return setItem();
	      }).then(function () {
	        postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, undefined);
	        _hasHydrated = true;
	        finishHydrationListeners.forEach(function (cb) {
	          return cb(stateFromStorage);
	        });
	      }).catch(function (e) {
	        postRehydrationCallback == null ? void 0 : postRehydrationCallback(undefined, e);
	      });
	    };

	    api.persist = {
	      setOptions: function setOptions(newOptions) {
	        options = _extends({}, options, newOptions);

	        if (newOptions.getStorage) {
	          storage = newOptions.getStorage();
	        }
	      },
	      clearStorage: function clearStorage() {
	        var _storage;

	        (_storage = storage) == null ? void 0 : _storage.removeItem == null ? void 0 : _storage.removeItem(options.name);
	      },
	      rehydrate: function rehydrate() {
	        return hydrate();
	      },
	      hasHydrated: function hasHydrated() {
	        return _hasHydrated;
	      },
	      onHydrate: function onHydrate(cb) {
	        hydrationListeners.add(cb);
	        return function () {
	          hydrationListeners.delete(cb);
	        };
	      },
	      onFinishHydration: function onFinishHydration(cb) {
	        finishHydrationListeners.add(cb);
	        return function () {
	          finishHydrationListeners.delete(cb);
	        };
	      }
	    };
	    hydrate();
	    return stateFromStorage || configResult;
	  };
	};

	exports.combine = combine;
	exports.devtools = devtools;
	exports.persist = persist;
	exports.redux = redux;
	exports.subscribeWithSelector = subscribeWithSelector;
	});

	unwrapExports(middleware);
	middleware.combine;
	middleware.devtools;
	middleware.persist;
	middleware.redux;
	var middleware_5 = middleware.subscribeWithSelector;

	function _arrayLikeToArray(arr, len) {
	  if (len == null || len > arr.length) len = arr.length;

	  for (var i = 0, arr2 = new Array(len); i < len; i++) {
	    arr2[i] = arr[i];
	  }

	  return arr2;
	}

	function _arrayWithoutHoles(arr) {
	  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
	}

	function _iterableToArray(iter) {
	  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
	}

	function _unsupportedIterableToArray(o, minLen) {
	  if (!o) return;
	  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
	  var n = Object.prototype.toString.call(o).slice(8, -1);
	  if (n === "Object" && o.constructor) n = o.constructor.name;
	  if (n === "Map" || n === "Set") return Array.from(o);
	  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
	}

	function _nonIterableSpread() {
	  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
	}

	function _toConsumableArray(arr) {
	  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
	}

	// `Number.EPSILON` constant
	// https://tc39.es/ecma262/#sec-number.epsilon
	_export({ target: 'Number', stat: true }, {
	  EPSILON: Math.pow(2, -52)
	});

	function _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

	function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

	function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

	function isArray(value) {
	  return !Array.isArray ? getTag(value) === '[object Array]' : Array.isArray(value);
	}

	var INFINITY = 1 / 0;

	function baseToString(value) {
	  if (typeof value == 'string') {
	    return value;
	  }

	  var result = value + '';
	  return result == '0' && 1 / value == -INFINITY ? '-0' : result;
	}

	function toString(value) {
	  return value == null ? '' : baseToString(value);
	}

	function isString(value) {
	  return typeof value === 'string';
	}

	function isNumber(value) {
	  return typeof value === 'number';
	}

	function isBoolean(value) {
	  return value === true || value === false || isObjectLike(value) && getTag(value) == '[object Boolean]';
	}

	function isObject(value) {
	  return _typeof(value) === 'object';
	}

	function isObjectLike(value) {
	  return isObject(value) && value !== null;
	}

	function isDefined(value) {
	  return value !== undefined && value !== null;
	}

	function isBlank(value) {
	  return !value.trim().length;
	}

	function getTag(value) {
	  return value == null ? value === undefined ? '[object Undefined]' : '[object Null]' : Object.prototype.toString.call(value);
	}

	var EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';
	var INCORRECT_INDEX_TYPE = "Incorrect 'index' type";

	var LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = function LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key) {
	  return "Invalid value for key ".concat(key);
	};

	var PATTERN_LENGTH_TOO_LARGE = function PATTERN_LENGTH_TOO_LARGE(max) {
	  return "Pattern length exceeds max of ".concat(max, ".");
	};

	var MISSING_KEY_PROPERTY = function MISSING_KEY_PROPERTY(name) {
	  return "Missing ".concat(name, " property in key");
	};

	var INVALID_KEY_WEIGHT_VALUE = function INVALID_KEY_WEIGHT_VALUE(key) {
	  return "Property 'weight' in key '".concat(key, "' must be a positive integer");
	};

	var hasOwn = Object.prototype.hasOwnProperty;

	var KeyStore = function () {
	  function KeyStore(keys) {
	    var _this = this;

	    _classCallCheck(this, KeyStore);

	    this._keys = [];
	    this._keyMap = {};
	    var totalWeight = 0;
	    keys.forEach(function (key) {
	      var obj = createKey(key);
	      totalWeight += obj.weight;

	      _this._keys.push(obj);

	      _this._keyMap[obj.id] = obj;
	      totalWeight += obj.weight;
	    });

	    this._keys.forEach(function (key) {
	      key.weight /= totalWeight;
	    });
	  }

	  _createClass(KeyStore, [{
	    key: "get",
	    value: function get(keyId) {
	      return this._keyMap[keyId];
	    }
	  }, {
	    key: "keys",
	    value: function keys() {
	      return this._keys;
	    }
	  }, {
	    key: "toJSON",
	    value: function toJSON() {
	      return JSON.stringify(this._keys);
	    }
	  }]);

	  return KeyStore;
	}();

	function createKey(key) {
	  var path = null;
	  var id = null;
	  var src = null;
	  var weight = 1;
	  var getFn = null;

	  if (isString(key) || isArray(key)) {
	    src = key;
	    path = createKeyPath(key);
	    id = createKeyId(key);
	  } else {
	    if (!hasOwn.call(key, 'name')) {
	      throw new Error(MISSING_KEY_PROPERTY('name'));
	    }

	    var name = key.name;
	    src = name;

	    if (hasOwn.call(key, 'weight')) {
	      weight = key.weight;

	      if (weight <= 0) {
	        throw new Error(INVALID_KEY_WEIGHT_VALUE(name));
	      }
	    }

	    path = createKeyPath(name);
	    id = createKeyId(name);
	    getFn = key.getFn;
	  }

	  return {
	    path: path,
	    id: id,
	    weight: weight,
	    src: src,
	    getFn: getFn
	  };
	}

	function createKeyPath(key) {
	  return isArray(key) ? key : key.split('.');
	}

	function createKeyId(key) {
	  return isArray(key) ? key.join('.') : key;
	}

	function get(obj, path) {
	  var list = [];
	  var arr = false;

	  var deepGet = function deepGet(obj, path, index) {
	    if (!isDefined(obj)) {
	      return;
	    }

	    if (!path[index]) {
	      list.push(obj);
	    } else {
	      var key = path[index];
	      var value = obj[key];

	      if (!isDefined(value)) {
	        return;
	      }

	      if (index === path.length - 1 && (isString(value) || isNumber(value) || isBoolean(value))) {
	        list.push(toString(value));
	      } else if (isArray(value)) {
	        arr = true;

	        for (var i = 0, len = value.length; i < len; i += 1) {
	          deepGet(value[i], path, index + 1);
	        }
	      } else if (path.length) {
	        deepGet(value, path, index + 1);
	      }
	    }
	  };

	  deepGet(obj, isString(path) ? path.split('.') : path, 0);
	  return arr ? list : list[0];
	}

	var MatchOptions = {
	  includeMatches: false,
	  findAllMatches: false,
	  minMatchCharLength: 1
	};
	var BasicOptions = {
	  isCaseSensitive: false,
	  includeScore: false,
	  keys: [],
	  shouldSort: true,
	  sortFn: function sortFn(a, b) {
	    return a.score === b.score ? a.idx < b.idx ? -1 : 1 : a.score < b.score ? -1 : 1;
	  }
	};
	var FuzzyOptions = {
	  location: 0,
	  threshold: 0.6,
	  distance: 100
	};
	var AdvancedOptions = {
	  useExtendedSearch: false,
	  getFn: get,
	  ignoreLocation: false,
	  ignoreFieldNorm: false,
	  fieldNormWeight: 1
	};

	var Config = _objectSpread$3(_objectSpread$3(_objectSpread$3(_objectSpread$3({}, BasicOptions), MatchOptions), FuzzyOptions), AdvancedOptions);

	var SPACE = /[^ ]+/g;

	function norm() {
	  var weight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
	  var mantissa = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;
	  var cache = new Map();
	  var m = Math.pow(10, mantissa);
	  return {
	    get: function get(value) {
	      var numTokens = value.match(SPACE).length;

	      if (cache.has(numTokens)) {
	        return cache.get(numTokens);
	      }

	      var norm = 1 / Math.pow(numTokens, 0.5 * weight);
	      var n = parseFloat(Math.round(norm * m) / m);
	      cache.set(numTokens, n);
	      return n;
	    },
	    clear: function clear() {
	      cache.clear();
	    }
	  };
	}

	var FuseIndex = function () {
	  function FuseIndex() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
	        _ref$getFn = _ref.getFn,
	        getFn = _ref$getFn === void 0 ? Config.getFn : _ref$getFn,
	        _ref$fieldNormWeight = _ref.fieldNormWeight,
	        fieldNormWeight = _ref$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref$fieldNormWeight;

	    _classCallCheck(this, FuseIndex);

	    this.norm = norm(fieldNormWeight, 3);
	    this.getFn = getFn;
	    this.isCreated = false;
	    this.setIndexRecords();
	  }

	  _createClass(FuseIndex, [{
	    key: "setSources",
	    value: function setSources() {
	      var docs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.docs = docs;
	    }
	  }, {
	    key: "setIndexRecords",
	    value: function setIndexRecords() {
	      var records = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.records = records;
	    }
	  }, {
	    key: "setKeys",
	    value: function setKeys() {
	      var _this2 = this;

	      var keys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	      this.keys = keys;
	      this._keysMap = {};
	      keys.forEach(function (key, idx) {
	        _this2._keysMap[key.id] = idx;
	      });
	    }
	  }, {
	    key: "create",
	    value: function create() {
	      var _this3 = this;

	      if (this.isCreated || !this.docs.length) {
	        return;
	      }

	      this.isCreated = true;

	      if (isString(this.docs[0])) {
	        this.docs.forEach(function (doc, docIndex) {
	          _this3._addString(doc, docIndex);
	        });
	      } else {
	        this.docs.forEach(function (doc, docIndex) {
	          _this3._addObject(doc, docIndex);
	        });
	      }

	      this.norm.clear();
	    }
	  }, {
	    key: "add",
	    value: function add(doc) {
	      var idx = this.size();

	      if (isString(doc)) {
	        this._addString(doc, idx);
	      } else {
	        this._addObject(doc, idx);
	      }
	    }
	  }, {
	    key: "removeAt",
	    value: function removeAt(idx) {
	      this.records.splice(idx, 1);

	      for (var i = idx, len = this.size(); i < len; i += 1) {
	        this.records[i].i -= 1;
	      }
	    }
	  }, {
	    key: "getValueForItemAtKeyId",
	    value: function getValueForItemAtKeyId(item, keyId) {
	      return item[this._keysMap[keyId]];
	    }
	  }, {
	    key: "size",
	    value: function size() {
	      return this.records.length;
	    }
	  }, {
	    key: "_addString",
	    value: function _addString(doc, docIndex) {
	      if (!isDefined(doc) || isBlank(doc)) {
	        return;
	      }

	      var record = {
	        v: doc,
	        i: docIndex,
	        n: this.norm.get(doc)
	      };
	      this.records.push(record);
	    }
	  }, {
	    key: "_addObject",
	    value: function _addObject(doc, docIndex) {
	      var _this4 = this;

	      var record = {
	        i: docIndex,
	        $: {}
	      };
	      this.keys.forEach(function (key, keyIndex) {
	        var value = key.getFn ? key.getFn(doc) : _this4.getFn(doc, key.path);

	        if (!isDefined(value)) {
	          return;
	        }

	        if (isArray(value)) {
	          (function () {
	            var subRecords = [];
	            var stack = [{
	              nestedArrIndex: -1,
	              value: value
	            }];

	            while (stack.length) {
	              var _stack$pop = stack.pop(),
	                  nestedArrIndex = _stack$pop.nestedArrIndex,
	                  _value = _stack$pop.value;

	              if (!isDefined(_value)) {
	                continue;
	              }

	              if (isString(_value) && !isBlank(_value)) {
	                var subRecord = {
	                  v: _value,
	                  i: nestedArrIndex,
	                  n: _this4.norm.get(_value)
	                };
	                subRecords.push(subRecord);
	              } else if (isArray(_value)) {
	                _value.forEach(function (item, k) {
	                  stack.push({
	                    nestedArrIndex: k,
	                    value: item
	                  });
	                });
	              } else ;
	            }

	            record.$[keyIndex] = subRecords;
	          })();
	        } else if (isString(value) && !isBlank(value)) {
	          var subRecord = {
	            v: value,
	            n: _this4.norm.get(value)
	          };
	          record.$[keyIndex] = subRecord;
	        }
	      });
	      this.records.push(record);
	    }
	  }, {
	    key: "toJSON",
	    value: function toJSON() {
	      return {
	        keys: this.keys,
	        records: this.records
	      };
	    }
	  }]);

	  return FuseIndex;
	}();

	function createIndex(keys, docs) {
	  var _ref2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref2$getFn = _ref2.getFn,
	      getFn = _ref2$getFn === void 0 ? Config.getFn : _ref2$getFn,
	      _ref2$fieldNormWeight = _ref2.fieldNormWeight,
	      fieldNormWeight = _ref2$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref2$fieldNormWeight;

	  var myIndex = new FuseIndex({
	    getFn: getFn,
	    fieldNormWeight: fieldNormWeight
	  });
	  myIndex.setKeys(keys.map(createKey));
	  myIndex.setSources(docs);
	  myIndex.create();
	  return myIndex;
	}

	function parseIndex(data) {
	  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref3$getFn = _ref3.getFn,
	      getFn = _ref3$getFn === void 0 ? Config.getFn : _ref3$getFn,
	      _ref3$fieldNormWeight = _ref3.fieldNormWeight,
	      fieldNormWeight = _ref3$fieldNormWeight === void 0 ? Config.fieldNormWeight : _ref3$fieldNormWeight;

	  var keys = data.keys,
	      records = data.records;
	  var myIndex = new FuseIndex({
	    getFn: getFn,
	    fieldNormWeight: fieldNormWeight
	  });
	  myIndex.setKeys(keys);
	  myIndex.setIndexRecords(records);
	  return myIndex;
	}

	function computeScore$1(pattern) {
	  var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	      _ref4$errors = _ref4.errors,
	      errors = _ref4$errors === void 0 ? 0 : _ref4$errors,
	      _ref4$currentLocation = _ref4.currentLocation,
	      currentLocation = _ref4$currentLocation === void 0 ? 0 : _ref4$currentLocation,
	      _ref4$expectedLocatio = _ref4.expectedLocation,
	      expectedLocation = _ref4$expectedLocatio === void 0 ? 0 : _ref4$expectedLocatio,
	      _ref4$distance = _ref4.distance,
	      distance = _ref4$distance === void 0 ? Config.distance : _ref4$distance,
	      _ref4$ignoreLocation = _ref4.ignoreLocation,
	      ignoreLocation = _ref4$ignoreLocation === void 0 ? Config.ignoreLocation : _ref4$ignoreLocation;

	  var accuracy = errors / pattern.length;

	  if (ignoreLocation) {
	    return accuracy;
	  }

	  var proximity = Math.abs(expectedLocation - currentLocation);

	  if (!distance) {
	    return proximity ? 1.0 : accuracy;
	  }

	  return accuracy + proximity / distance;
	}

	function convertMaskToIndices() {
	  var matchmask = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	  var minMatchCharLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Config.minMatchCharLength;
	  var indices = [];
	  var start = -1;
	  var end = -1;
	  var i = 0;

	  for (var len = matchmask.length; i < len; i += 1) {
	    var match = matchmask[i];

	    if (match && start === -1) {
	      start = i;
	    } else if (!match && start !== -1) {
	      end = i - 1;

	      if (end - start + 1 >= minMatchCharLength) {
	        indices.push([start, end]);
	      }

	      start = -1;
	    }
	  }

	  if (matchmask[i - 1] && i - start >= minMatchCharLength) {
	    indices.push([start, i - 1]);
	  }

	  return indices;
	}

	var MAX_BITS = 32;

	function search(text, pattern, patternAlphabet) {
	  var _ref5 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},
	      _ref5$location = _ref5.location,
	      location = _ref5$location === void 0 ? Config.location : _ref5$location,
	      _ref5$distance = _ref5.distance,
	      distance = _ref5$distance === void 0 ? Config.distance : _ref5$distance,
	      _ref5$threshold = _ref5.threshold,
	      threshold = _ref5$threshold === void 0 ? Config.threshold : _ref5$threshold,
	      _ref5$findAllMatches = _ref5.findAllMatches,
	      findAllMatches = _ref5$findAllMatches === void 0 ? Config.findAllMatches : _ref5$findAllMatches,
	      _ref5$minMatchCharLen = _ref5.minMatchCharLength,
	      minMatchCharLength = _ref5$minMatchCharLen === void 0 ? Config.minMatchCharLength : _ref5$minMatchCharLen,
	      _ref5$includeMatches = _ref5.includeMatches,
	      includeMatches = _ref5$includeMatches === void 0 ? Config.includeMatches : _ref5$includeMatches,
	      _ref5$ignoreLocation = _ref5.ignoreLocation,
	      ignoreLocation = _ref5$ignoreLocation === void 0 ? Config.ignoreLocation : _ref5$ignoreLocation;

	  if (pattern.length > MAX_BITS) {
	    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS));
	  }

	  var patternLen = pattern.length;
	  var textLen = text.length;
	  var expectedLocation = Math.max(0, Math.min(location, textLen));
	  var currentThreshold = threshold;
	  var bestLocation = expectedLocation;
	  var computeMatches = minMatchCharLength > 1 || includeMatches;
	  var matchMask = computeMatches ? Array(textLen) : [];
	  var index;

	  while ((index = text.indexOf(pattern, bestLocation)) > -1) {
	    var score = computeScore$1(pattern, {
	      currentLocation: index,
	      expectedLocation: expectedLocation,
	      distance: distance,
	      ignoreLocation: ignoreLocation
	    });
	    currentThreshold = Math.min(score, currentThreshold);
	    bestLocation = index + patternLen;

	    if (computeMatches) {
	      var i = 0;

	      while (i < patternLen) {
	        matchMask[index + i] = 1;
	        i += 1;
	      }
	    }
	  }

	  bestLocation = -1;
	  var lastBitArr = [];
	  var finalScore = 1;
	  var binMax = patternLen + textLen;
	  var mask = 1 << patternLen - 1;

	  for (var _i = 0; _i < patternLen; _i += 1) {
	    var binMin = 0;
	    var binMid = binMax;

	    while (binMin < binMid) {
	      var _score2 = computeScore$1(pattern, {
	        errors: _i,
	        currentLocation: expectedLocation + binMid,
	        expectedLocation: expectedLocation,
	        distance: distance,
	        ignoreLocation: ignoreLocation
	      });

	      if (_score2 <= currentThreshold) {
	        binMin = binMid;
	      } else {
	        binMax = binMid;
	      }

	      binMid = Math.floor((binMax - binMin) / 2 + binMin);
	    }

	    binMax = binMid;
	    var start = Math.max(1, expectedLocation - binMid + 1);
	    var finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen;
	    var bitArr = Array(finish + 2);
	    bitArr[finish + 1] = (1 << _i) - 1;

	    for (var j = finish; j >= start; j -= 1) {
	      var currentLocation = j - 1;
	      var charMatch = patternAlphabet[text.charAt(currentLocation)];

	      if (computeMatches) {
	        matchMask[currentLocation] = +!!charMatch;
	      }

	      bitArr[j] = (bitArr[j + 1] << 1 | 1) & charMatch;

	      if (_i) {
	        bitArr[j] |= (lastBitArr[j + 1] | lastBitArr[j]) << 1 | 1 | lastBitArr[j + 1];
	      }

	      if (bitArr[j] & mask) {
	        finalScore = computeScore$1(pattern, {
	          errors: _i,
	          currentLocation: currentLocation,
	          expectedLocation: expectedLocation,
	          distance: distance,
	          ignoreLocation: ignoreLocation
	        });

	        if (finalScore <= currentThreshold) {
	          currentThreshold = finalScore;
	          bestLocation = currentLocation;

	          if (bestLocation <= expectedLocation) {
	            break;
	          }

	          start = Math.max(1, 2 * expectedLocation - bestLocation);
	        }
	      }
	    }

	    var _score = computeScore$1(pattern, {
	      errors: _i + 1,
	      currentLocation: expectedLocation,
	      expectedLocation: expectedLocation,
	      distance: distance,
	      ignoreLocation: ignoreLocation
	    });

	    if (_score > currentThreshold) {
	      break;
	    }

	    lastBitArr = bitArr;
	  }

	  var result = {
	    isMatch: bestLocation >= 0,
	    score: Math.max(0.001, finalScore)
	  };

	  if (computeMatches) {
	    var indices = convertMaskToIndices(matchMask, minMatchCharLength);

	    if (!indices.length) {
	      result.isMatch = false;
	    } else if (includeMatches) {
	      result.indices = indices;
	    }
	  }

	  return result;
	}

	function createPatternAlphabet(pattern) {
	  var mask = {};

	  for (var i = 0, len = pattern.length; i < len; i += 1) {
	    var char = pattern.charAt(i);
	    mask[char] = (mask[char] || 0) | 1 << len - i - 1;
	  }

	  return mask;
	}

	var BitapSearch = function () {
	  function BitapSearch(pattern) {
	    var _this5 = this;

	    var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref6$location = _ref6.location,
	        location = _ref6$location === void 0 ? Config.location : _ref6$location,
	        _ref6$threshold = _ref6.threshold,
	        threshold = _ref6$threshold === void 0 ? Config.threshold : _ref6$threshold,
	        _ref6$distance = _ref6.distance,
	        distance = _ref6$distance === void 0 ? Config.distance : _ref6$distance,
	        _ref6$includeMatches = _ref6.includeMatches,
	        includeMatches = _ref6$includeMatches === void 0 ? Config.includeMatches : _ref6$includeMatches,
	        _ref6$findAllMatches = _ref6.findAllMatches,
	        findAllMatches = _ref6$findAllMatches === void 0 ? Config.findAllMatches : _ref6$findAllMatches,
	        _ref6$minMatchCharLen = _ref6.minMatchCharLength,
	        minMatchCharLength = _ref6$minMatchCharLen === void 0 ? Config.minMatchCharLength : _ref6$minMatchCharLen,
	        _ref6$isCaseSensitive = _ref6.isCaseSensitive,
	        isCaseSensitive = _ref6$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref6$isCaseSensitive,
	        _ref6$ignoreLocation = _ref6.ignoreLocation,
	        ignoreLocation = _ref6$ignoreLocation === void 0 ? Config.ignoreLocation : _ref6$ignoreLocation;

	    _classCallCheck(this, BitapSearch);

	    this.options = {
	      location: location,
	      threshold: threshold,
	      distance: distance,
	      includeMatches: includeMatches,
	      findAllMatches: findAllMatches,
	      minMatchCharLength: minMatchCharLength,
	      isCaseSensitive: isCaseSensitive,
	      ignoreLocation: ignoreLocation
	    };
	    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
	    this.chunks = [];

	    if (!this.pattern.length) {
	      return;
	    }

	    var addChunk = function addChunk(pattern, startIndex) {
	      _this5.chunks.push({
	        pattern: pattern,
	        alphabet: createPatternAlphabet(pattern),
	        startIndex: startIndex
	      });
	    };

	    var len = this.pattern.length;

	    if (len > MAX_BITS) {
	      var i = 0;
	      var remainder = len % MAX_BITS;
	      var end = len - remainder;

	      while (i < end) {
	        addChunk(this.pattern.substr(i, MAX_BITS), i);
	        i += MAX_BITS;
	      }

	      if (remainder) {
	        var startIndex = len - MAX_BITS;
	        addChunk(this.pattern.substr(startIndex), startIndex);
	      }
	    } else {
	      addChunk(this.pattern, 0);
	    }
	  }

	  _createClass(BitapSearch, [{
	    key: "searchIn",
	    value: function searchIn(text) {
	      var _this$options = this.options,
	          isCaseSensitive = _this$options.isCaseSensitive,
	          includeMatches = _this$options.includeMatches;

	      if (!isCaseSensitive) {
	        text = text.toLowerCase();
	      }

	      if (this.pattern === text) {
	        var _result = {
	          isMatch: true,
	          score: 0
	        };

	        if (includeMatches) {
	          _result.indices = [[0, text.length - 1]];
	        }

	        return _result;
	      }

	      var _this$options2 = this.options,
	          location = _this$options2.location,
	          distance = _this$options2.distance,
	          threshold = _this$options2.threshold,
	          findAllMatches = _this$options2.findAllMatches,
	          minMatchCharLength = _this$options2.minMatchCharLength,
	          ignoreLocation = _this$options2.ignoreLocation;
	      var allIndices = [];
	      var totalScore = 0;
	      var hasMatches = false;
	      this.chunks.forEach(function (_ref7) {
	        var pattern = _ref7.pattern,
	            alphabet = _ref7.alphabet,
	            startIndex = _ref7.startIndex;

	        var _search = search(text, pattern, alphabet, {
	          location: location + startIndex,
	          distance: distance,
	          threshold: threshold,
	          findAllMatches: findAllMatches,
	          minMatchCharLength: minMatchCharLength,
	          includeMatches: includeMatches,
	          ignoreLocation: ignoreLocation
	        }),
	            isMatch = _search.isMatch,
	            score = _search.score,
	            indices = _search.indices;

	        if (isMatch) {
	          hasMatches = true;
	        }

	        totalScore += score;

	        if (isMatch && indices) {
	          allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));
	        }
	      });
	      var result = {
	        isMatch: hasMatches,
	        score: hasMatches ? totalScore / this.chunks.length : 1
	      };

	      if (hasMatches && includeMatches) {
	        result.indices = allIndices;
	      }

	      return result;
	    }
	  }]);

	  return BitapSearch;
	}();

	var BaseMatch = function () {
	  function BaseMatch(pattern) {
	    _classCallCheck(this, BaseMatch);

	    this.pattern = pattern;
	  }

	  _createClass(BaseMatch, [{
	    key: "search",
	    value: function search() {}
	  }], [{
	    key: "isMultiMatch",
	    value: function isMultiMatch(pattern) {
	      return getMatch(pattern, this.multiRegex);
	    }
	  }, {
	    key: "isSingleMatch",
	    value: function isSingleMatch(pattern) {
	      return getMatch(pattern, this.singleRegex);
	    }
	  }]);

	  return BaseMatch;
	}();

	function getMatch(pattern, exp) {
	  var matches = pattern.match(exp);
	  return matches ? matches[1] : null;
	}

	var ExactMatch = function (_BaseMatch) {
	  _inherits(ExactMatch, _BaseMatch);

	  var _super = _createSuper$2(ExactMatch);

	  function ExactMatch(pattern) {
	    _classCallCheck(this, ExactMatch);

	    return _super.call(this, pattern);
	  }

	  _createClass(ExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text === this.pattern;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, this.pattern.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^="(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^=(.*)$/;
	    }
	  }]);

	  return ExactMatch;
	}(BaseMatch);

	var InverseExactMatch = function (_BaseMatch2) {
	  _inherits(InverseExactMatch, _BaseMatch2);

	  var _super2 = _createSuper$2(InverseExactMatch);

	  function InverseExactMatch(pattern) {
	    _classCallCheck(this, InverseExactMatch);

	    return _super2.call(this, pattern);
	  }

	  _createClass(InverseExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var index = text.indexOf(this.pattern);
	      var isMatch = index === -1;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!(.*)$/;
	    }
	  }]);

	  return InverseExactMatch;
	}(BaseMatch);

	var PrefixExactMatch = function (_BaseMatch3) {
	  _inherits(PrefixExactMatch, _BaseMatch3);

	  var _super3 = _createSuper$2(PrefixExactMatch);

	  function PrefixExactMatch(pattern) {
	    _classCallCheck(this, PrefixExactMatch);

	    return _super3.call(this, pattern);
	  }

	  _createClass(PrefixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text.startsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, this.pattern.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'prefix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^\^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^\^(.*)$/;
	    }
	  }]);

	  return PrefixExactMatch;
	}(BaseMatch);

	var InversePrefixExactMatch = function (_BaseMatch4) {
	  _inherits(InversePrefixExactMatch, _BaseMatch4);

	  var _super4 = _createSuper$2(InversePrefixExactMatch);

	  function InversePrefixExactMatch(pattern) {
	    _classCallCheck(this, InversePrefixExactMatch);

	    return _super4.call(this, pattern);
	  }

	  _createClass(InversePrefixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = !text.startsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-prefix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!\^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!\^(.*)$/;
	    }
	  }]);

	  return InversePrefixExactMatch;
	}(BaseMatch);

	var SuffixExactMatch = function (_BaseMatch5) {
	  _inherits(SuffixExactMatch, _BaseMatch5);

	  var _super5 = _createSuper$2(SuffixExactMatch);

	  function SuffixExactMatch(pattern) {
	    _classCallCheck(this, SuffixExactMatch);

	    return _super5.call(this, pattern);
	  }

	  _createClass(SuffixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = text.endsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [text.length - this.pattern.length, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'suffix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^"(.*)"\$$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^(.*)\$$/;
	    }
	  }]);

	  return SuffixExactMatch;
	}(BaseMatch);

	var InverseSuffixExactMatch = function (_BaseMatch6) {
	  _inherits(InverseSuffixExactMatch, _BaseMatch6);

	  var _super6 = _createSuper$2(InverseSuffixExactMatch);

	  function InverseSuffixExactMatch(pattern) {
	    _classCallCheck(this, InverseSuffixExactMatch);

	    return _super6.call(this, pattern);
	  }

	  _createClass(InverseSuffixExactMatch, [{
	    key: "search",
	    value: function search(text) {
	      var isMatch = !text.endsWith(this.pattern);
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: [0, text.length - 1]
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'inverse-suffix-exact';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^!"(.*)"\$$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^!(.*)\$$/;
	    }
	  }]);

	  return InverseSuffixExactMatch;
	}(BaseMatch);

	var FuzzyMatch = function (_BaseMatch7) {
	  _inherits(FuzzyMatch, _BaseMatch7);

	  var _super7 = _createSuper$2(FuzzyMatch);

	  function FuzzyMatch(pattern) {
	    var _this6;

	    var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref8$location = _ref8.location,
	        location = _ref8$location === void 0 ? Config.location : _ref8$location,
	        _ref8$threshold = _ref8.threshold,
	        threshold = _ref8$threshold === void 0 ? Config.threshold : _ref8$threshold,
	        _ref8$distance = _ref8.distance,
	        distance = _ref8$distance === void 0 ? Config.distance : _ref8$distance,
	        _ref8$includeMatches = _ref8.includeMatches,
	        includeMatches = _ref8$includeMatches === void 0 ? Config.includeMatches : _ref8$includeMatches,
	        _ref8$findAllMatches = _ref8.findAllMatches,
	        findAllMatches = _ref8$findAllMatches === void 0 ? Config.findAllMatches : _ref8$findAllMatches,
	        _ref8$minMatchCharLen = _ref8.minMatchCharLength,
	        minMatchCharLength = _ref8$minMatchCharLen === void 0 ? Config.minMatchCharLength : _ref8$minMatchCharLen,
	        _ref8$isCaseSensitive = _ref8.isCaseSensitive,
	        isCaseSensitive = _ref8$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref8$isCaseSensitive,
	        _ref8$ignoreLocation = _ref8.ignoreLocation,
	        ignoreLocation = _ref8$ignoreLocation === void 0 ? Config.ignoreLocation : _ref8$ignoreLocation;

	    _classCallCheck(this, FuzzyMatch);

	    _this6 = _super7.call(this, pattern);
	    _this6._bitapSearch = new BitapSearch(pattern, {
	      location: location,
	      threshold: threshold,
	      distance: distance,
	      includeMatches: includeMatches,
	      findAllMatches: findAllMatches,
	      minMatchCharLength: minMatchCharLength,
	      isCaseSensitive: isCaseSensitive,
	      ignoreLocation: ignoreLocation
	    });
	    return _this6;
	  }

	  _createClass(FuzzyMatch, [{
	    key: "search",
	    value: function search(text) {
	      return this._bitapSearch.searchIn(text);
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'fuzzy';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^(.*)$/;
	    }
	  }]);

	  return FuzzyMatch;
	}(BaseMatch);

	var IncludeMatch = function (_BaseMatch8) {
	  _inherits(IncludeMatch, _BaseMatch8);

	  var _super8 = _createSuper$2(IncludeMatch);

	  function IncludeMatch(pattern) {
	    _classCallCheck(this, IncludeMatch);

	    return _super8.call(this, pattern);
	  }

	  _createClass(IncludeMatch, [{
	    key: "search",
	    value: function search(text) {
	      var location = 0;
	      var index;
	      var indices = [];
	      var patternLen = this.pattern.length;

	      while ((index = text.indexOf(this.pattern, location)) > -1) {
	        location = index + patternLen;
	        indices.push([index, location - 1]);
	      }

	      var isMatch = !!indices.length;
	      return {
	        isMatch: isMatch,
	        score: isMatch ? 0 : 1,
	        indices: indices
	      };
	    }
	  }], [{
	    key: "type",
	    get: function get() {
	      return 'include';
	    }
	  }, {
	    key: "multiRegex",
	    get: function get() {
	      return /^'"(.*)"$/;
	    }
	  }, {
	    key: "singleRegex",
	    get: function get() {
	      return /^'(.*)$/;
	    }
	  }]);

	  return IncludeMatch;
	}(BaseMatch);

	var searchers = [ExactMatch, IncludeMatch, PrefixExactMatch, InversePrefixExactMatch, InverseSuffixExactMatch, SuffixExactMatch, InverseExactMatch, FuzzyMatch];
	var searchersLen = searchers.length;
	var SPACE_RE = / +(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/;
	var OR_TOKEN = '|';

	function parseQuery(pattern) {
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return pattern.split(OR_TOKEN).map(function (item) {
	    var query = item.trim().split(SPACE_RE).filter(function (item) {
	      return item && !!item.trim();
	    });
	    var results = [];

	    for (var i = 0, len = query.length; i < len; i += 1) {
	      var queryItem = query[i];
	      var found = false;
	      var idx = -1;

	      while (!found && ++idx < searchersLen) {
	        var searcher = searchers[idx];
	        var token = searcher.isMultiMatch(queryItem);

	        if (token) {
	          results.push(new searcher(token, options));
	          found = true;
	        }
	      }

	      if (found) {
	        continue;
	      }

	      idx = -1;

	      while (++idx < searchersLen) {
	        var _searcher = searchers[idx];

	        var _token = _searcher.isSingleMatch(queryItem);

	        if (_token) {
	          results.push(new _searcher(_token, options));
	          break;
	        }
	      }
	    }

	    return results;
	  });
	}

	var MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);

	var ExtendedSearch = function () {
	  function ExtendedSearch(pattern) {
	    var _ref9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	        _ref9$isCaseSensitive = _ref9.isCaseSensitive,
	        isCaseSensitive = _ref9$isCaseSensitive === void 0 ? Config.isCaseSensitive : _ref9$isCaseSensitive,
	        _ref9$includeMatches = _ref9.includeMatches,
	        includeMatches = _ref9$includeMatches === void 0 ? Config.includeMatches : _ref9$includeMatches,
	        _ref9$minMatchCharLen = _ref9.minMatchCharLength,
	        minMatchCharLength = _ref9$minMatchCharLen === void 0 ? Config.minMatchCharLength : _ref9$minMatchCharLen,
	        _ref9$ignoreLocation = _ref9.ignoreLocation,
	        ignoreLocation = _ref9$ignoreLocation === void 0 ? Config.ignoreLocation : _ref9$ignoreLocation,
	        _ref9$findAllMatches = _ref9.findAllMatches,
	        findAllMatches = _ref9$findAllMatches === void 0 ? Config.findAllMatches : _ref9$findAllMatches,
	        _ref9$location = _ref9.location,
	        location = _ref9$location === void 0 ? Config.location : _ref9$location,
	        _ref9$threshold = _ref9.threshold,
	        threshold = _ref9$threshold === void 0 ? Config.threshold : _ref9$threshold,
	        _ref9$distance = _ref9.distance,
	        distance = _ref9$distance === void 0 ? Config.distance : _ref9$distance;

	    _classCallCheck(this, ExtendedSearch);

	    this.query = null;
	    this.options = {
	      isCaseSensitive: isCaseSensitive,
	      includeMatches: includeMatches,
	      minMatchCharLength: minMatchCharLength,
	      findAllMatches: findAllMatches,
	      ignoreLocation: ignoreLocation,
	      location: location,
	      threshold: threshold,
	      distance: distance
	    };
	    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();
	    this.query = parseQuery(this.pattern, this.options);
	  }

	  _createClass(ExtendedSearch, [{
	    key: "searchIn",
	    value: function searchIn(text) {
	      var query = this.query;

	      if (!query) {
	        return {
	          isMatch: false,
	          score: 1
	        };
	      }

	      var _this$options3 = this.options,
	          includeMatches = _this$options3.includeMatches,
	          isCaseSensitive = _this$options3.isCaseSensitive;
	      text = isCaseSensitive ? text : text.toLowerCase();
	      var numMatches = 0;
	      var allIndices = [];
	      var totalScore = 0;

	      for (var i = 0, qLen = query.length; i < qLen; i += 1) {
	        var _searchers = query[i];
	        allIndices.length = 0;
	        numMatches = 0;

	        for (var j = 0, pLen = _searchers.length; j < pLen; j += 1) {
	          var searcher = _searchers[j];

	          var _searcher$search = searcher.search(text),
	              isMatch = _searcher$search.isMatch,
	              indices = _searcher$search.indices,
	              score = _searcher$search.score;

	          if (isMatch) {
	            numMatches += 1;
	            totalScore += score;

	            if (includeMatches) {
	              var type = searcher.constructor.type;

	              if (MultiMatchSet.has(type)) {
	                allIndices = [].concat(_toConsumableArray(allIndices), _toConsumableArray(indices));
	              } else {
	                allIndices.push(indices);
	              }
	            }
	          } else {
	            totalScore = 0;
	            numMatches = 0;
	            allIndices.length = 0;
	            break;
	          }
	        }

	        if (numMatches) {
	          var result = {
	            isMatch: true,
	            score: totalScore / numMatches
	          };

	          if (includeMatches) {
	            result.indices = allIndices;
	          }

	          return result;
	        }
	      }

	      return {
	        isMatch: false,
	        score: 1
	      };
	    }
	  }], [{
	    key: "condition",
	    value: function condition(_, options) {
	      return options.useExtendedSearch;
	    }
	  }]);

	  return ExtendedSearch;
	}();

	var registeredSearchers = [];

	function register() {
	  registeredSearchers.push.apply(registeredSearchers, arguments);
	}

	function createSearcher(pattern, options) {
	  for (var i = 0, len = registeredSearchers.length; i < len; i += 1) {
	    var searcherClass = registeredSearchers[i];

	    if (searcherClass.condition(pattern, options)) {
	      return new searcherClass(pattern, options);
	    }
	  }

	  return new BitapSearch(pattern, options);
	}

	var LogicalOperator = {
	  AND: '$and',
	  OR: '$or'
	};
	var KeyType = {
	  PATH: '$path',
	  PATTERN: '$val'
	};

	var isExpression = function isExpression(query) {
	  return !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);
	};

	var isPath = function isPath(query) {
	  return !!query[KeyType.PATH];
	};

	var isLeaf = function isLeaf(query) {
	  return !isArray(query) && isObject(query) && !isExpression(query);
	};

	var convertToExplicit = function convertToExplicit(query) {
	  return _defineProperty({}, LogicalOperator.AND, Object.keys(query).map(function (key) {
	    return _defineProperty({}, key, query[key]);
	  }));
	};

	function parse(query, options) {
	  var _ref12 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref12$auto = _ref12.auto,
	      auto = _ref12$auto === void 0 ? true : _ref12$auto;

	  var next = function next(query) {
	    var keys = Object.keys(query);
	    var isQueryPath = isPath(query);

	    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {
	      return next(convertToExplicit(query));
	    }

	    if (isLeaf(query)) {
	      var key = isQueryPath ? query[KeyType.PATH] : keys[0];
	      var pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];

	      if (!isString(pattern)) {
	        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key));
	      }

	      var obj = {
	        keyId: createKeyId(key),
	        pattern: pattern
	      };

	      if (auto) {
	        obj.searcher = createSearcher(pattern, options);
	      }

	      return obj;
	    }

	    var node = {
	      children: [],
	      operator: keys[0]
	    };
	    keys.forEach(function (key) {
	      var value = query[key];

	      if (isArray(value)) {
	        value.forEach(function (item) {
	          node.children.push(next(item));
	        });
	      }
	    });
	    return node;
	  };

	  if (!isExpression(query)) {
	    query = convertToExplicit(query);
	  }

	  return next(query);
	}

	function computeScore(results, _ref13) {
	  var _ref13$ignoreFieldNor = _ref13.ignoreFieldNorm,
	      ignoreFieldNorm = _ref13$ignoreFieldNor === void 0 ? Config.ignoreFieldNorm : _ref13$ignoreFieldNor;
	  results.forEach(function (result) {
	    var totalScore = 1;
	    result.matches.forEach(function (_ref14) {
	      var key = _ref14.key,
	          norm = _ref14.norm,
	          score = _ref14.score;
	      var weight = key ? key.weight : null;
	      totalScore *= Math.pow(score === 0 && weight ? Number.EPSILON : score, (weight || 1) * (ignoreFieldNorm ? 1 : norm));
	    });
	    result.score = totalScore;
	  });
	}

	function transformMatches(result, data) {
	  var matches = result.matches;
	  data.matches = [];

	  if (!isDefined(matches)) {
	    return;
	  }

	  matches.forEach(function (match) {
	    if (!isDefined(match.indices) || !match.indices.length) {
	      return;
	    }

	    var indices = match.indices,
	        value = match.value;
	    var obj = {
	      indices: indices,
	      value: value
	    };

	    if (match.key) {
	      obj.key = match.key.src;
	    }

	    if (match.idx > -1) {
	      obj.refIndex = match.idx;
	    }

	    data.matches.push(obj);
	  });
	}

	function transformScore(result, data) {
	  data.score = result.score;
	}

	function format(results, docs) {
	  var _ref15 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
	      _ref15$includeMatches = _ref15.includeMatches,
	      includeMatches = _ref15$includeMatches === void 0 ? Config.includeMatches : _ref15$includeMatches,
	      _ref15$includeScore = _ref15.includeScore,
	      includeScore = _ref15$includeScore === void 0 ? Config.includeScore : _ref15$includeScore;

	  var transformers = [];
	  if (includeMatches) transformers.push(transformMatches);
	  if (includeScore) transformers.push(transformScore);
	  return results.map(function (result) {
	    var idx = result.idx;
	    var data = {
	      item: docs[idx],
	      refIndex: idx
	    };

	    if (transformers.length) {
	      transformers.forEach(function (transformer) {
	        transformer(result, data);
	      });
	    }

	    return data;
	  });
	}

	var Fuse = function () {
	  function Fuse(docs) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var index = arguments.length > 2 ? arguments[2] : undefined;

	    _classCallCheck(this, Fuse);

	    this.options = _objectSpread$3(_objectSpread$3({}, Config), options);

	    if (this.options.useExtendedSearch && !true) {
	      throw new Error(EXTENDED_SEARCH_UNAVAILABLE);
	    }

	    this._keyStore = new KeyStore(this.options.keys);
	    this.setCollection(docs, index);
	  }

	  _createClass(Fuse, [{
	    key: "setCollection",
	    value: function setCollection(docs, index) {
	      this._docs = docs;

	      if (index && !(index instanceof FuseIndex)) {
	        throw new Error(INCORRECT_INDEX_TYPE);
	      }

	      this._myIndex = index || createIndex(this.options.keys, this._docs, {
	        getFn: this.options.getFn,
	        fieldNormWeight: this.options.fieldNormWeight
	      });
	    }
	  }, {
	    key: "add",
	    value: function add(doc) {
	      if (!isDefined(doc)) {
	        return;
	      }

	      this._docs.push(doc);

	      this._myIndex.add(doc);
	    }
	  }, {
	    key: "remove",
	    value: function remove() {
	      var predicate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function () {
	        return false;
	      };
	      var results = [];

	      for (var i = 0, len = this._docs.length; i < len; i += 1) {
	        var doc = this._docs[i];

	        if (predicate(doc, i)) {
	          this.removeAt(i);
	          i -= 1;
	          len -= 1;
	          results.push(doc);
	        }
	      }

	      return results;
	    }
	  }, {
	    key: "removeAt",
	    value: function removeAt(idx) {
	      this._docs.splice(idx, 1);

	      this._myIndex.removeAt(idx);
	    }
	  }, {
	    key: "getIndex",
	    value: function getIndex() {
	      return this._myIndex;
	    }
	  }, {
	    key: "search",
	    value: function search(query) {
	      var _ref16 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	          _ref16$limit = _ref16.limit,
	          limit = _ref16$limit === void 0 ? -1 : _ref16$limit;

	      var _this$options4 = this.options,
	          includeMatches = _this$options4.includeMatches,
	          includeScore = _this$options4.includeScore,
	          shouldSort = _this$options4.shouldSort,
	          sortFn = _this$options4.sortFn,
	          ignoreFieldNorm = _this$options4.ignoreFieldNorm;
	      var results = isString(query) ? isString(this._docs[0]) ? this._searchStringList(query) : this._searchObjectList(query) : this._searchLogical(query);
	      computeScore(results, {
	        ignoreFieldNorm: ignoreFieldNorm
	      });

	      if (shouldSort) {
	        results.sort(sortFn);
	      }

	      if (isNumber(limit) && limit > -1) {
	        results = results.slice(0, limit);
	      }

	      return format(results, this._docs, {
	        includeMatches: includeMatches,
	        includeScore: includeScore
	      });
	    }
	  }, {
	    key: "_searchStringList",
	    value: function _searchStringList(query) {
	      var searcher = createSearcher(query, this.options);
	      var records = this._myIndex.records;
	      var results = [];
	      records.forEach(function (_ref17) {
	        var text = _ref17.v,
	            idx = _ref17.i,
	            norm = _ref17.n;

	        if (!isDefined(text)) {
	          return;
	        }

	        var _searcher$searchIn = searcher.searchIn(text),
	            isMatch = _searcher$searchIn.isMatch,
	            score = _searcher$searchIn.score,
	            indices = _searcher$searchIn.indices;

	        if (isMatch) {
	          results.push({
	            item: text,
	            idx: idx,
	            matches: [{
	              score: score,
	              value: text,
	              norm: norm,
	              indices: indices
	            }]
	          });
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_searchLogical",
	    value: function _searchLogical(query) {
	      var _this7 = this;

	      var expression = parse(query, this.options);

	      var evaluate = function evaluate(node, item, idx) {
	        if (!node.children) {
	          var keyId = node.keyId,
	              searcher = node.searcher;

	          var matches = _this7._findMatches({
	            key: _this7._keyStore.get(keyId),
	            value: _this7._myIndex.getValueForItemAtKeyId(item, keyId),
	            searcher: searcher
	          });

	          if (matches && matches.length) {
	            return [{
	              idx: idx,
	              item: item,
	              matches: matches
	            }];
	          }

	          return [];
	        }

	        var res = [];

	        for (var i = 0, len = node.children.length; i < len; i += 1) {
	          var child = node.children[i];
	          var result = evaluate(child, item, idx);

	          if (result.length) {
	            res.push.apply(res, _toConsumableArray(result));
	          } else if (node.operator === LogicalOperator.AND) {
	            return [];
	          }
	        }

	        return res;
	      };

	      var records = this._myIndex.records;
	      var resultMap = {};
	      var results = [];
	      records.forEach(function (_ref18) {
	        var item = _ref18.$,
	            idx = _ref18.i;

	        if (isDefined(item)) {
	          var expResults = evaluate(expression, item, idx);

	          if (expResults.length) {
	            if (!resultMap[idx]) {
	              resultMap[idx] = {
	                idx: idx,
	                item: item,
	                matches: []
	              };
	              results.push(resultMap[idx]);
	            }

	            expResults.forEach(function (_ref19) {
	              var _resultMap$idx$matche;

	              var matches = _ref19.matches;

	              (_resultMap$idx$matche = resultMap[idx].matches).push.apply(_resultMap$idx$matche, _toConsumableArray(matches));
	            });
	          }
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_searchObjectList",
	    value: function _searchObjectList(query) {
	      var _this8 = this;

	      var searcher = createSearcher(query, this.options);
	      var _this$_myIndex = this._myIndex,
	          keys = _this$_myIndex.keys,
	          records = _this$_myIndex.records;
	      var results = [];
	      records.forEach(function (_ref20) {
	        var item = _ref20.$,
	            idx = _ref20.i;

	        if (!isDefined(item)) {
	          return;
	        }

	        var matches = [];
	        keys.forEach(function (key, keyIndex) {
	          matches.push.apply(matches, _toConsumableArray(_this8._findMatches({
	            key: key,
	            value: item[keyIndex],
	            searcher: searcher
	          })));
	        });

	        if (matches.length) {
	          results.push({
	            idx: idx,
	            item: item,
	            matches: matches
	          });
	        }
	      });
	      return results;
	    }
	  }, {
	    key: "_findMatches",
	    value: function _findMatches(_ref21) {
	      var key = _ref21.key,
	          value = _ref21.value,
	          searcher = _ref21.searcher;

	      if (!isDefined(value)) {
	        return [];
	      }

	      var matches = [];

	      if (isArray(value)) {
	        value.forEach(function (_ref22) {
	          var text = _ref22.v,
	              idx = _ref22.i,
	              norm = _ref22.n;

	          if (!isDefined(text)) {
	            return;
	          }

	          var _searcher$searchIn2 = searcher.searchIn(text),
	              isMatch = _searcher$searchIn2.isMatch,
	              score = _searcher$searchIn2.score,
	              indices = _searcher$searchIn2.indices;

	          if (isMatch) {
	            matches.push({
	              score: score,
	              key: key,
	              value: text,
	              idx: idx,
	              norm: norm,
	              indices: indices
	            });
	          }
	        });
	      } else {
	        var text = value.v,
	            _norm = value.n;

	        var _searcher$searchIn3 = searcher.searchIn(text),
	            isMatch = _searcher$searchIn3.isMatch,
	            score = _searcher$searchIn3.score,
	            indices = _searcher$searchIn3.indices;

	        if (isMatch) {
	          matches.push({
	            score: score,
	            key: key,
	            value: text,
	            norm: _norm,
	            indices: indices
	          });
	        }
	      }

	      return matches;
	    }
	  }]);

	  return Fuse;
	}();

	Fuse.version = '6.6.2';
	Fuse.createIndex = createIndex;
	Fuse.parseIndex = parseIndex;
	Fuse.config = Config;
	{
	  Fuse.parseQuery = parse;
	}
	{
	  register(ExtendedSearch);
	}

	function keyEventHandler(event, options) {
	  var key = processKeyCode(event);
	  return {
	    on: function on(eventKeys) {
	      if (eventKeys[key]) {
	        if (options !== null && options !== void 0 && options.preventDefault) event.preventDefault();
	        if (options !== null && options !== void 0 && options.stopPropagation) event.stopPropagation();
	        if (options !== null && options !== void 0 && options.onlyCurrentTarget && event.target !== event.currentTarget) return;
	        eventKeys[key](event);
	      } else if (eventKeys["Default"]) {
	        if (options !== null && options !== void 0 && options.preventDefault) event.preventDefault();
	        if (options !== null && options !== void 0 && options.stopPropagation) event.stopPropagation();
	        if (options !== null && options !== void 0 && options.onlyCurrentTarget && event.target !== event.currentTarget) return;
	        eventKeys["Default"](event);
	      }
	    }
	  };
	}

	function processKeyCode(event) {
	  var isShift = event.shiftKey;
	  var initKey = event.key;

	  switch (event.keyCode) {
	    case 32:
	      initKey = "Space";
	      break;
	  }

	  var key = isShift ? "Shift" + initKey : initKey;
	  return key;
	}

	var _excluded = ["hidden"];

	var _templateObject$2, _templateObject2, _templateObject3;

	function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

	var singleOptions = function () {
	  function singleOptions(_ref) {
	    var _this = this;

	    var target = _ref.target,
	        store = _ref.store,
	        selectRef = _ref.selectRef,
	        enableFilter = _ref.enableFilter;

	    _classCallCheck(this, singleOptions);

	    _defineProperty(this, "isTabable$", void 0);

	    _defineProperty(this, "container", void 0);

	    _defineProperty(this, "target", void 0);

	    _defineProperty(this, "selectRef", void 0);

	    _defineProperty(this, "dropdownStore", void 0);

	    _defineProperty(this, "enableFilter", void 0);

	    _defineProperty(this, "optionsStore", void 0);

	    _defineProperty(this, "fuse", void 0);

	    this.target = target;
	    this.dropdownStore = store;
	    this.optionsStore = create(middleware_5(function () {
	      return {
	        filteredOptions: _this.dropdownStore.getState().options
	      };
	    }));
	    this.selectRef = selectRef;
	    this.enableFilter = enableFilter;

	    this._addTheEventListeners();
	  }

	  _createClass(singleOptions, [{
	    key: "destroy",
	    value: function destroy() {
	      this.container.remove();
	    }
	  }, {
	    key: "optionsToRender",
	    get: function get() {
	      return this.optionsStore.getState().filteredOptions;
	    }
	  }, {
	    key: "_addTheEventListeners",
	    value: function _addTheEventListeners() {
	      var _this2 = this;

	      this._initFuse(this.optionsToRender);

	      this.render();
	      fromEvent(this.target, "mousedown").pipe(sample(fromEvent(this.target, "click")), filter(function (e) {
	        return e.target.tagName !== "INPUT";
	      }), pluck("target"), map(function (target) {
	        var _ref2 = target,
	            _ref2$dataset = _ref2.dataset,
	            index = _ref2$dataset.index,
	            label = _ref2$dataset.label,
	            value = _ref2$dataset.value;
	        return {
	          label: label,
	          value: value,
	          index: index
	        };
	      })).subscribe(function (selected) {
	        _this2.dropdownStore.setState({
	          selected: selected
	        });
	      });
	      this.dropdownStore.subscribe(function (options) {
	        _this2._initFuse(options);

	        _this2.optionsStore.setState({
	          filteredOptions: options
	        });

	        _this2.render();
	      }, function (state) {
	        return state.options;
	      });
	      this.dropdownStore.subscribe(function (isOpen) {
	        if (isOpen) {
	          _this2.focusSelected();
	        }
	      }, function (state) {
	        return state.isOpen;
	      });
	      this.optionsStore.subscribe(function () {
	        _this2.render();
	      });
	    }
	  }, {
	    key: "_initFuse",
	    value: function _initFuse(options) {
	      this.fuse = new Fuse(options, {
	        keys: ["label", "value"]
	      });
	    }
	  }, {
	    key: "handleChange",
	    value: function handleChange(opt) {
	      this.dropdownStore.setState({
	        selected: opt
	      });
	    }
	  }, {
	    key: "closeDropdown",
	    value: function closeDropdown() {
	      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
	        changeFocus: true
	      };
	          _ref3.changeFocus;

	      this.dropdownStore.setState({
	        isOpen: false
	      });
	    }
	  }, {
	    key: "focusSelected",
	    value: function focusSelected() {
	      var selectedOption = this.target.querySelector('li[data-selected="true"]') || this.target.querySelector("li");
	      selectedOption.focus();
	      this.container.querySelector("ul").scrollTop = selectedOption.offsetTop - 40;
	    }
	  }, {
	    key: "_setFilteredOptions",
	    value: function _setFilteredOptions(newOptions) {
	      this.optionsStore.setState({
	        filteredOptions: newOptions
	      });
	    }
	  }, {
	    key: "_moveFocusUp",
	    value: function _moveFocusUp(optionKey) {
	      var onFirstOption = optionKey === 0;
	      var prevKey = optionKey - 1;
	      var prevOption = this.target.querySelector("li[data-key=\"".concat(prevKey, "\"]"));

	      if (onFirstOption && !this.enableFilter) {
	        this.closeDropdown();
	      } else if (onFirstOption) {
	        this.filter.focus();
	      } else {
	        prevOption === null || prevOption === void 0 ? void 0 : prevOption.focus();
	      }
	    }
	  }, {
	    key: "_moveFocusDown",
	    value: function _moveFocusDown(optionKey) {
	      var onLastOption = optionKey === this.container.querySelector("ul").childElementCount;
	      var nextKey = optionKey + 1;
	      var nextOption = this.target.querySelector("li[data-key=\"".concat(nextKey, "\"]"));
	      if (onLastOption) return;
	      nextOption === null || nextOption === void 0 ? void 0 : nextOption.focus();
	    }
	  }, {
	    key: "handleOptionKeyEvents",
	    value: function handleOptionKeyEvents(_ref4) {
	      var _this3 = this;

	      var event = _ref4.event,
	          key = _ref4.key,
	          option = _ref4.option;

	      if (event.key === "Tab" && !event.shiftKey) {
	        this.closeDropdown({
	          changeFocus: false
	        });
	      }

	      keyEventHandler(event, {
	        preventDefault: true
	      }).on({
	        ArrowDown: function ArrowDown() {
	          _this3._moveFocusDown(key);
	        },
	        ArrowUp: function ArrowUp() {
	          _this3._moveFocusUp(key);
	        },
	        ShiftTab: function ShiftTab() {
	          if (_this3.enableFilter) {
	            _this3.filter.focus();
	          } else {
	            _this3.closeDropdown();
	          }
	        },
	        Space: function Space() {
	          _this3.handleChange(option);
	        },
	        Enter: function Enter() {
	          _this3.handleChange(option);
	        },
	        Escape: function Escape() {
	          _this3.closeDropdown();
	        },
	        Backspace: function Backspace(e) {
	          e.stopPropagation();
	          var curValue = _this3.filter.input.value;
	          _this3.filter.input.value = curValue.substring(0, curValue.length - 1);

	          _this3.filter.input.focus();
	        },
	        Default: function Default(e) {
	          if (e.key.length > 1) return;
	          e.stopPropagation();
	          _this3.filter.input.value = _this3.filter.input.value + e.key;

	          _this3.filter.focus();
	        }
	      });
	    }
	  }, {
	    key: "render",
	    value: function render$1() {
	      var _this4 = this;

	      this.container = render(this.target, html(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteral(["\n                ", "\n                <ul>\n                    ", "\n                </ul>\n            "])), this.enableFilter ? this.renderInput() : null, this.optionsToRender.filter(function (option) {
	        return !option.hidden;
	      }).map(function (option, index) {
	        option.hidden;
	            var restOptions = _objectWithoutProperties(option, _excluded);

	        var key = _this4.dropdownStore.getState().placeholder ? index + 1 : index;
	        return html.for(option)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n              <li\n                tabindex=\"-1\"\n                onKeyDown=", "\n                class=", "\n                .dataset=", "\n              >\n                ", "\n              </li>\n            "])), function (event) {
	          return _this4.handleOptionKeyEvents({
	            event: event,
	            key: key,
	            option: option
	          });
	        }, "single-option".concat(option.hidden ? " hidden" : ""), _objectSpread$2(_objectSpread$2(_objectSpread$2({}, restOptions), option.hidden && {
	          hidden: true
	        }), {}, {
	          key: key,
	          selected: _this4.selectRef.selectedIndex === option.index
	        }), option.label);
	      })));
	    }
	  }, {
	    key: "isOpen",
	    get: function get() {
	      return this.dropdownStore.getState().isOpen;
	    }
	  }, {
	    key: "renderInput",
	    value: function renderInput() {
	      var _this5 = this;

	      return html(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n            <input\n                class=\"dk-dropdown__filter-input\"\n                tabindex=", "\n                oninput=", "\n                onKeyDown=", "\n                placeholder=", "\n            />\n        "])), this.isOpen ? "0" : "-1", function (e) {
	        var query = e.target.value;

	        _this5._setFilteredOptions(query.length == 0 ? _this5.dropdownStore.getState().options : _this5.fuse.search(query).map(function (result) {
	          return result.item;
	        }));

	        _this5.container.querySelector("ul").scrollTop = 0;
	      }, function (e) {
	        if (e.code === "ArrowDown") {
	          var _this5$container$quer;

	          e.preventDefault();
	          var hasQuery = _this5.filter.input.value.length > 0;
	          (_this5$container$quer = _this5.container.querySelector(hasQuery ? "li" : 'li[data-selected="true"')) === null || _this5$container$quer === void 0 ? void 0 : _this5$container$quer.focus();
	          return;
	        } else if (e.code === "ArrowUp" || e.code === "Escape" || e.code === "Tab" && e.shiftKey) {
	          _this5.closeDropdown();
	        } else if (e.code === "Tab") {
	          e.preventDefault();

	          _this5.focusSelected();
	        }

	        if (!_this5.optionsToRender[0] || e.code !== "Enter") return;

	        _this5.handleChange(_this5.optionsToRender[0]);
	      }, this.dropdownStore.getState().filterPlaceholder);
	    }
	  }, {
	    key: "filter",
	    get: function get() {
	      var input = this.container.querySelector("input");
	      var self = this;
	      return {
	        input: input,
	        focus: function focus() {
	          this.input.focus();
	        },
	        clear: function clear() {
	          if (this.input && this.input.value.length > 0) {
	            self._setFilteredOptions(self.dropdownStore.getState().options);

	            this.input.value = "";
	          }
	        }
	      };
	    }
	  }]);

	  return singleOptions;
	}();

	var _templateObject$1;

	function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

	function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

	var Dropdown = function (_AbstractCustomSelect) {
	  _inherits(Dropdown, _AbstractCustomSelect);

	  var _super = _createSuper$1(Dropdown);

	  function Dropdown(dropdown, settings) {
	    var _this;

	    _classCallCheck(this, Dropdown);

	    _this = _super.call(this, dropdown, settings);

	    _defineProperty(_assertThisInitialized(_this), "selected", void 0);

	    _defineProperty(_assertThisInitialized(_this), "lastFocusedElm", void 0);

	    _defineProperty(_assertThisInitialized(_this), "popperInstance", void 0);

	    _defineProperty(_assertThisInitialized(_this), "options", void 0);

	    _defineProperty(_assertThisInitialized(_this), "defaultPlaceholder", "Make Selection...");

	    if (_this.optionRefs.length >= 13) {
	      _this.settings.filter = true;
	    }

	    if (_this.hasError) return _possibleConstructorReturn(_this);

	    _this._init();

	    return _this;
	  }

	  _createClass(Dropdown, [{
	    key: "_init",
	    value: function _init() {
	      var _this2 = this;

	      this._initOptions();

	      this._renderSelected();

	      this._addEventListeners();

	      this._startSync();

	      this._attachPublicMethods();

	      this.popperInstance = new Popper$1(this.container, this.optionsContainer, {
	        modifiers: {
	          flip: {
	            enabled: false
	          }
	        }
	      });
	      var icon = document.createElement("div");
	      icon.classList.add("dk-dropdown__icon");
	      this.container.appendChild(icon);
	      this.store.subscribe(function () {
	        return _this2.updateOptionsWidth();
	      }, function (state) {
	        return state.options;
	      });
	    }
	  }, {
	    key: "_initOptions",
	    value: function _initOptions() {
	      var _this3 = this;

	      this.options = new singleOptions({
	        target: this.optionsContainer,
	        store: this.store,
	        selectRef: this.selectRef,
	        enableFilter: this.settings.filter
	      });
	      this.store.subscribe(function (newVal) {
	        var selected = newVal;
	        var index = selected.index;

	        _this3._renderSelected(selected);

	        _this3.selectRef.selectedIndex = typeof index === "string" ? parseInt(index) : index;

	        _this3.options.render();

	        _this3.fireChangeEvent();

	        if (_this3.store.getState().isOpen) {
	          _this3.toggleOpen();
	        }
	      }, function (state) {
	        return state.selected;
	      });

	      if (window.inStorybook) {
	        document.querySelector("#root").insertAdjacentElement("beforeend", this.optionsContainer);
	      } else {
	        document.body.appendChild(this.optionsContainer);
	      }
	    }
	  }, {
	    key: "_attachPublicMethods",
	    value: function _attachPublicMethods() {
	      this.selectRef.dkDropdown = this.publicMethods;
	    }
	  }, {
	    key: "hide",
	    value: function hide() {
	      this.setState({
	        isOpen: false
	      });
	    }
	  }, {
	    key: "show",
	    value: function show() {
	      this.setState({
	        isOpen: true
	      });
	    }
	  }, {
	    key: "toggleOpen",
	    value: function toggleOpen() {
	      if (this.isOpen) {
	        this.hide();
	      } else {
	        this.show();
	      }
	    }
	  }, {
	    key: "updateOptionsWidth",
	    value: function updateOptionsWidth() {
	      var _this$popperInstance;

	      this.optionsContainer.offsetHeight;
	      var conWidth = this.container.getBoundingClientRect().width;
	      var optionsWidth = this.optionsContainer.getBoundingClientRect().width;

	      if (conWidth !== optionsWidth) {
	        this.optionsContainer.style.width = Math.round(conWidth) - 1 + "px";
	      }

	      this.optionsContainer.offsetHeight;
	      (_this$popperInstance = this.popperInstance) === null || _this$popperInstance === void 0 ? void 0 : _this$popperInstance.update();
	    }
	  }, {
	    key: "publicMethods",
	    get: function get() {
	      var _this4 = this;

	      var self = this;
	      return {
	        update: function update() {
	          self.setState({
	            selected: self.parseOptionElm(self.selectRef.options[self.selectRef.selectedIndex], self.selectRef.selectedIndex)
	          });
	        },
	        setInlineWidth: function setInlineWidth(value) {
	          return self.setInlineWidth(value);
	        },
	        destroy: function destroy() {
	          _this4.store.destroy();

	          delete _this4.selectRef["dkDropdown"];

	          _this4.options.destroy();

	          _this4.container.remove();
	        },
	        reset: function reset() {
	          _this4.publicMethods.destroy();

	          _this4.initBaseClass();

	          _this4._init();
	        }
	      };
	    }
	  }, {
	    key: "isOpen",
	    get: function get() {
	      return this.store.getState().isOpen;
	    }
	  }, {
	    key: "eventHandlers",
	    get: function get() {
	      var _this5 = this;

	      return {
	        docMouseDown: function docMouseDown(e) {
	          var target = e.target;
	          if (!_this5.isOpen) return;

	          if (!(_this5.container.contains(target) || _this5.optionsContainer.contains(target))) {
	            _this5._setState({
	              isOpen: false,
	              noFocusChange: true
	            });

	            _this5._setState({
	              noFocusChange: false
	            });
	          }
	        },
	        container: {
	          keydown: function keydown(e) {
	            keyEventHandler(e, {
	              preventDefault: true
	            }).on({
	              Space: function Space() {
	                _this5.toggleOpen();
	              },
	              Enter: function Enter() {
	                _this5.toggleOpen();
	              },
	              ArrowDown: function ArrowDown() {
	                _this5.toggleOpen();
	              },
	              ArrowUp: function ArrowUp() {
	                _this5.toggleOpen();
	              }
	            });
	          },
	          click: function click(e) {
	            e.preventDefault();

	            _this5.toggleOpen();
	          }
	        }
	      };
	    }
	  }, {
	    key: "_addEventListeners",
	    value: function _addEventListeners() {
	      this._subscribeToOpenState();

	      this.container.addEventListener("keydown", this.eventHandlers.container.keydown);
	      this.container.addEventListener("click", this.eventHandlers.container.click);
	      document.addEventListener("click", this.eventHandlers.docMouseDown);
	    }
	  }, {
	    key: "_subscribeToOpenState",
	    value: function _subscribeToOpenState() {
	      var _this6 = this;

	      this.store.subscribe(function () {
	        var _this6$store$getState = _this6.store.getState(),
	            isOpen = _this6$store$getState.isOpen,
	            noFocusChange = _this6$store$getState.noFocusChange;

	        if (isOpen) {
	          _this6.updateOptionsWidth();
	        } else {
	          _this6.container.focus();
	        }

	        _this6.optionsContainer.setAttribute("data-dropdown-open", isOpen.toString());

	        _this6.container.setAttribute("data-dropdown-open", isOpen.toString());

	        if (_this6.settings.filter && isOpen && noFocusChange) ; else if (_this6.settings.filter && !isOpen) {
	          _this6.options.filter.clear();
	        }
	      }, function (state) {
	        return state.isOpen;
	      });
	    }
	  }, {
	    key: "_render",
	    value: function _render() {
	      this._renderSelected();
	    }
	  }, {
	    key: "_renderSelected",
	    value: function _renderSelected(option) {
	      var refIndex = this.selectRef.selectedIndex;

	      var _ref = option || this.store.getState().options[refIndex === -1 ? 0 : refIndex],
	          label = _ref.label,
	          index = _ref.index,
	          value = _ref.value;

	      this.selected = render(this.container, html(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteral(["\n                <button\n                    tabindex=\"-1\"\n                    class=\"dk-dropdown__selected\"\n                    .dataset=", "\n                >\n                    <span title=", ">", "</span>\n                </button>\n            "])), {
	        index: index,
	        value: value
	      }, label, label));
	    }
	  }, {
	    key: "_setState",
	    value: function _setState(toUpdate) {
	      this.store.setState(toUpdate);
	    }
	  }, {
	    key: "_startSync",
	    value: function _startSync() {
	      var _this7 = this;

	      this.selectOnChange$.pipe(map(function (e) {
	        var selectElm = e.target;

	        var option = _this7.parseOptionElm(selectElm.options[selectElm.selectedIndex], selectElm.selectedIndex);

	        return option;
	      })).subscribe(function (selectedOption) {
	        _this7.setState({
	          selected: selectedOption
	        });
	      });
	    }
	  }]);

	  return Dropdown;
	}(AbstractCustomSelect);

	var defaultSelector = "select.dk-dropdown:not([dk-dropdown--init])";
	function initDropdowns() {
	  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSelector;
	  var passedSettings = arguments.length > 1 ? arguments[1] : undefined;
	  return selectorHelper({
	    selector: selector,
	    defaultSelector: defaultSelector
	  }, function (dropdown) {
	    return createDropdown(dropdown);
	  });

	  function createDropdown(element) {
	    if (element.tagName !== "SELECT") return null;
	    if (element.hasAttribute("dk-dropdown--init")) return;
	    var settings = lodash.isPlainObject(selector) ? selector : passedSettings;
	    return new Dropdown(element, settings).publicMethods;
	  }
	}

	function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

	function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

	function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

	var vanillaNav = function (_tabOverflow) {
	  _inherits(vanillaNav, _tabOverflow);

	  var _super = _createSuper(vanillaNav);

	  function vanillaNav(navElement, passedOptions) {
	    var _this;

	    _classCallCheck(this, vanillaNav);

	    var defaults = {
	      tabSelector: "a.dk-nav__link",
	      more: {
	        tag: "div",
	        text: navElement.getAttribute("data-overflow-text") || "More"
	      },
	      activeSelector: "a[aria-current='page']"
	    };
	    _this = _super.call(this, _objectSpread$1(_objectSpread$1({}, defaults), passedOptions));
	    _this.navElement = navElement;
	    _this.nav = _this.navElement;
	    _this.tabContainer = _this.nav;

	    _this.initOverflow();

	    _this.nav.dkNav = _this.publicMethods;
	    return _this;
	  }

	  return _createClass(vanillaNav);
	}(tabOverflow);

	function dkNav() {
	  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "nav.dk-nav";
	  var passedSettings = arguments.length > 1 ? arguments[1] : undefined;
	  var settings = lodash.isPlainObject(selector) ? selector : passedSettings;
	  return selectorHelper({
	    selector: selector,
	    defaultSelector: "nav.dk-nav"
	  }, function (nav) {
	    return new vanillaNav(nav, settings);
	  });
	}

	var _templateObject;
	function mask() {
	  var id = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
	  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	  return {
	    id: id,
	    classSelector: ".dk-site__mask",

	    get maskSelector() {
	      return this.id ? "#".concat(this.id) : this.classSelector;
	    },

	    toggle: function toggle() {
	      this.get().classList.contains("visible") ? this.hide() : this.show();
	    },
	    show: function show() {
	      this.get().classList.add("visible");
	      if (!options.onShow) return;
	      options.onShow();
	    },
	    hide: function hide() {
	      this.get().classList.remove("visible");
	      if (!options.onHide) return;
	      options.onHide();
	    },
	    get: function get() {
	      var mask = document.querySelector(this.maskSelector);
	      return mask ? mask : this.create();
	    },
	    create: function create() {
	      var _this = this;

	      document.querySelector(window.inStorybook ? "#root" : "body").insertAdjacentElement("beforeend", this.maskMarkup);
	      var maskRef = document.querySelector(this.maskSelector);
	      maskRef.addEventListener("click", function () {
	        _this.hide();
	      });
	      return maskRef;
	    },
	    destroy: function destroy() {
	      this.get().remove();
	    },

	    get maskMarkup() {
	      return html.node(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      <div id=\"", "\" class=\"", "\" tabindex=\"-1\"></div>\n    "])), this.id, this.classSelector.replace(".", ""));
	    }

	  };
	}

	var siteMask = mask();
	function uniqueSiteMask(id, options) {
	  return mask(id, options);
	}

	function modalActions(modalElm) {
	  var showClass = "visible";
	  var modal = typeof modalElm === "string" ? document.querySelector(modalElm) : modalElm;
	  var isWC = modal.tagName === "DK-MODAL";
	  var actions = {
	    hide: function hide() {
	      if (!actions.isVisable) return;

	      if (isWC) {
	        modal.hide();
	      } else {
	        modal.classList.remove(showClass);
	        modal.style.removeProperty("top");
	        modalMask.hide();
	      }
	    },
	    show: function show() {
	      if (actions.isVisable) return;

	      if (isWC) {
	        modal.show();
	      } else {
	        modal.classList.add(showClass);
	        modalMask.show();
	      }
	    },
	    toggle: function toggle() {
	      if (isWC) {
	        if (modal.isOpen) {
	          modal.hide();
	        } else {
	          modal.show();
	        }
	      } else {
	        modal.classList.contains(showClass) ? this.hide() : this.show();
	      }
	    },

	    get isVisable() {
	      if (isWC) {
	        return modal.open;
	      } else {
	        return modal.classList.contains(showClass);
	      }
	    }

	  };
	  return actions;
	}
	var modalMask = uniqueSiteMask("auto-modal-mask", {
	  onHide: function onHide() {
	    var modals = document.querySelectorAll("[class*=\"dk-modal\"], dk-modal");
	    modals.forEach(function (modal) {
	      return modalActions(modal).hide();
	    });
	  }
	});

	function autoModal() {
	  var modalTriggers = document.querySelectorAll("[data-modal-target]:not([data-auto-modal])");
	  modalTriggers.forEach(setupAutoModalTrigger);
	  document.querySelectorAll("[data-modal-dismiss]:not([data-auto-modal]").forEach(initDismissBtn);
	  document.querySelectorAll(".dk-modal__close:not([data-auto-modal])").forEach(initDismissBtn);
	}

	function initDismissBtn(btn) {
	  btn.setAttribute("data-auto-modal", "true");
	  var parentModal = [btn.closest("[class*='dk-modal--']"), btn.closest(".dk-modal")].filter(function (parent) {
	    return parent;
	  });
	  parentModal.forEach(function (modal) {
	    btn.addEventListener("click", function () {
	      modalActions(modal).hide();
	    });
	  });
	}

	function setupAutoModalTrigger(trigger) {
	  var targetString = trigger.getAttribute("data-modal-target");
	  if (!targetString || targetString === "true") return;
	  var modalTarget = document.querySelector(targetString);
	  if (!modalTarget) noModalMsg();
	  if ((modalTarget === null || modalTarget === void 0 ? void 0 : modalTarget.tagName) === "DK-MODAL") return;
	  trigger.addEventListener("click", function () {
	    if (!modalTarget) {
	      noModalMsg();
	      return;
	    }

	    var action = trigger.getAttribute("data-modal-action") || "show";
	    modalActions(modalTarget)[action]();
	    document.querySelector(window.inStorybook ? "#root" : "body").insertAdjacentElement("beforeend", modalTarget);
	  });
	  if (modalTarget) trigger.setAttribute("data-auto-modal", "true");

	  function noModalMsg() {
	    console.error("dk.autoModal() > No target modal found with this query string: \"".concat(targetString, "\"\n  dk.autoModal() > Trigger element:\n"), trigger);
	  }
	}

	function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

	function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
	var EventBus = function () {
	  function EventBus() {
	    _classCallCheck(this, EventBus);

	    _defineProperty(this, "bus", void 0);

	    _defineProperty(this, "_targets", void 0);

	    _defineProperty(this, "events$", void 0);

	    for (var _len = arguments.length, targets = new Array(_len), _key = 0; _key < _len; _key++) {
	      targets[_key] = arguments[_key];
	    }

	    this._targets = targets;
	    this.bus = document.createElement("eventbus");
	    this.events$ = new Subject();
	  }

	  _createClass(EventBus, [{
	    key: "addEventListener",
	    value: function addEventListener(event, callback) {
	      this.allTargets.forEach(function (target) {
	        return target.addEventListener(event, callback);
	      });
	    }
	  }, {
	    key: "removeEventListener",
	    value: function removeEventListener(event, callback) {
	      this.allTargets.forEach(function (target) {
	        return target.removeEventListener(event, callback);
	      });
	    }
	  }, {
	    key: "emit",
	    value: function emit(event, detail) {
	      this.events$.next(_objectSpread({
	        event: event
	      }, detail && detail));
	      this.allTargets.forEach(function (target) {
	        return target.dispatchEvent(new CustomEvent(event, {
	          detail: detail
	        }));
	      });
	    }
	  }, {
	    key: "on$",
	    value: function on$(event) {
	      return this.events$.pipe(filter(function (e) {
	        return e.event == event;
	      }));
	    }
	  }, {
	    key: "allTargets",
	    get: function get() {
	      return [this.bus].concat(_toConsumableArray(this._targets));
	    }
	  }]);

	  return EventBus;
	}();
	new EventBus();

	var Collapse = function () {
	  function Collapse(element, passedSettings) {
	    var _this = this;

	    _classCallCheck(this, Collapse);

	    _defineProperty(this, "isOpen$", void 0);

	    _defineProperty(this, "EventBus", void 0);

	    _defineProperty(this, "_trigger", void 0);

	    _defineProperty(this, "_element", null);

	    _defineProperty(this, "_isTransitioning", false);

	    _defineProperty(this, "_triggerArray", []);

	    _defineProperty(this, "_events", {
	      toggle: "toggle.dk.collapse",
	      show: "show.dk.collapse",
	      shown: "shown.dk.collapse",
	      hide: "hide.dk.collapse",
	      hidden: "hidden.dk.collapse"
	    });

	    _defineProperty(this, "_classNames", {
	      collapse: "dk-collapse",
	      collapsing: "dk-collapsing",
	      show: "dk-show"
	    });

	    var _ref = passedSettings !== null && passedSettings !== void 0 ? passedSettings : {},
	        initialState = _ref.initialState;

	    this._element = element;

	    if (this._element.hasAttribute("data-collapse-init")) {
	      return;
	    } else {
	      this._element.setAttribute("data-collapse-init", "");
	    }

	    this.EventBus = new EventBus(this._element);
	    this._trigger = passedSettings === null || passedSettings === void 0 ? void 0 : passedSettings.trigger;
	    this.isOpen$ = new BehaviorSubject(initialState ? initialState : this._element.classList.contains(this._classNames.show));
	    this._triggerArray = Array.from(document.querySelectorAll("[data-collapse-target=\"#".concat(this._element.id, "\"]")));

	    if (!this._trigger) {
	      this._triggerArray.forEach(function (trigger) {
	        return _this._setupTrigger(trigger);
	      });
	    } else {
	      this._setupTrigger(this._trigger, true);
	    }

	    if (initialState) {
	      this._quickExpand();
	    }

	    this.isOpen$.pipe(distinctUntilChanged(), skip(1)).subscribe(function (isOpen) {
	      if (isOpen) {
	        _this._expandPanel();
	      } else {
	        _this._collapsePanel();
	      }
	    });
	    this._element.dkCollapse = this.publicMethods;
	  }

	  _createClass(Collapse, [{
	    key: "publicMethods",
	    get: function get() {
	      var _this2 = this;

	      return {
	        toggle: function toggle() {
	          return _this2.toggle();
	        },
	        show: function show() {
	          return _this2.show();
	        },
	        hide: function hide() {
	          return _this2.hide();
	        },
	        destroy: function destroy() {
	          return _this2.destroy();
	        }
	      };
	    }
	  }, {
	    key: "toggle",
	    value: function toggle() {
	      this.EventBus.emit(this._events.toggle);

	      this._setIsOpen(!this.isOpen);
	    }
	  }, {
	    key: "show",
	    value: function show() {
	      this._setIsOpen(true);
	    }
	  }, {
	    key: "hide",
	    value: function hide() {
	      this._setIsOpen(false);
	    }
	  }, {
	    key: "destroy",
	    value: function destroy() {
	      this.isOpen$.complete();
	    }
	  }, {
	    key: "isOpen",
	    get: function get() {
	      return this.isOpen$.getValue();
	    }
	  }, {
	    key: "_setIsOpen",
	    value: function _setIsOpen(nextIsOpen) {
	      if (this._isTransitioning) return;
	      this.isOpen$.next(nextIsOpen);
	    }
	  }, {
	    key: "setIsTransitioning",
	    value: function setIsTransitioning(isTransitioning) {
	      this._isTransitioning = isTransitioning;

	      if (isTransitioning) {
	        this._element.classList.add(this._classNames.collapsing);
	      } else {
	        this._element.classList.remove(this._classNames.collapsing);
	      }
	    }
	  }, {
	    key: "_collapsePanel",
	    value: function _collapsePanel() {
	      var _this3 = this;

	      var _this$_classNames = this._classNames,
	          collapse = _this$_classNames.collapse,
	          show = _this$_classNames.show;
	      this.EventBus.emit(this._events.hide);
	      this._element.style.height = "".concat(this._element.getBoundingClientRect().height, "px");

	      this._triggerReflow();

	      this.setIsTransitioning(true);

	      this._element.classList.remove(collapse);

	      this._element.classList.remove(show);

	      this._element.style.height = "0px";

	      var isComplete = function isComplete() {
	        _this3.setIsTransitioning(false);

	        _this3._element.style.height = "";

	        _this3._element.classList.add(collapse);

	        _this3._element.setAttribute("data-collapsed", "true");

	        _this3.EventBus.emit(_this3._events.hidden);
	      };

	      fromEvent(this._element, "transitionend").pipe(take(1)).subscribe(isComplete);
	    }
	  }, {
	    key: "_expandPanel",
	    value: function _expandPanel() {
	      var _this4 = this;

	      var _this$_classNames2 = this._classNames,
	          collapse = _this$_classNames2.collapse,
	          show = _this$_classNames2.show;
	      this.EventBus.emit(this._events.show);

	      this._element.classList.remove(collapse);

	      var trueHeight = this._element.scrollHeight;
	      this.setIsTransitioning(true);
	      this._element.style.height = "0px";

	      this._triggerReflow();

	      this._element.style.height = "".concat(trueHeight, "px");

	      var isComplete = function isComplete() {
	        _this4.setIsTransitioning(false);

	        _this4._element.classList.add(collapse);

	        _this4._element.classList.add(show);

	        _this4._element.style.removeProperty("height");

	        _this4._element.setAttribute("data-collapsed", "false");

	        _this4.EventBus.emit(_this4._events.shown);
	      };

	      fromEvent(this._element, "transitionend").pipe(take(1)).subscribe(isComplete);
	    }
	  }, {
	    key: "_quickExpand",
	    value: function _quickExpand() {
	      this._element.classList.add("dk-show");
	    }
	  }, {
	    key: "_triggerReflow",
	    value: function _triggerReflow() {
	      this._element.offsetHeight;
	    }
	  }, {
	    key: "_setupTrigger",
	    value: function _setupTrigger(trigger) {
	      var _this5 = this;

	      var attachEvents = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

	      if (trigger.tagName !== "BUTTON" && trigger.tagName !== "A") {
	        trigger.setAttribute("role", "button");
	        trigger.setAttribute("tabindex", "0");
	      }

	      this.isOpen$.subscribe(function (isOpen) {
	        trigger.setAttribute("aria-expanded", isOpen.toString());
	      });

	      if (attachEvents) {
	        fromEvent(trigger, "click").subscribe(function (e) {
	          _this5.toggle();
	        });
	      }
	    }
	  }]);

	  return Collapse;
	}();

	// eslint-disable-next-line es/no-object-isfrozen -- safe
	var $isFrozen = Object.isFrozen;
	var FAILS_ON_PRIMITIVES$1 = fails(function () { $isFrozen(1); });

	// `Object.isFrozen` method
	// https://tc39.es/ecma262/#sec-object.isfrozen
	_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$1 || arrayBufferNonExtensible }, {
	  isFrozen: function isFrozen(it) {
	    if (!isObject$1(it)) return true;
	    if (arrayBufferNonExtensible && classofRaw(it) == 'ArrayBuffer') return true;
	    return $isFrozen ? $isFrozen(it) : false;
	  }
	});

	// `Reflect.ownKeys` method
	// https://tc39.es/ecma262/#sec-reflect.ownkeys
	_export({ target: 'Reflect', stat: true }, {
	  ownKeys: ownKeys$8
	});

	var getOwnPropertyNames = objectGetOwnPropertyNamesExternal.f;

	// eslint-disable-next-line es/no-object-getownpropertynames -- required for testing
	var FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });

	// `Object.getOwnPropertyNames` method
	// https://tc39.es/ecma262/#sec-object.getownpropertynames
	_export({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
	  getOwnPropertyNames: getOwnPropertyNames
	});

	// `Reflect.getOwnPropertyDescriptor` method
	// https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor
	_export({ target: 'Reflect', stat: true, sham: !descriptors }, {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
	    return objectGetOwnPropertyDescriptor.f(anObject(target), propertyKey);
	  }
	});

	function n(n) {
	  for (var r = arguments.length, t = Array(r > 1 ? r - 1 : 0), e = 1; e < r; e++) {
	    t[e - 1] = arguments[e];
	  }

	  throw Error("[Immer] minified error nr: " + n + (t.length ? " " + t.map(function (n) {
	    return "'" + n + "'";
	  }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
	}

	function r(n) {
	  return !!n && !!n[Q];
	}

	function t(n) {
	  return !!n && (function (n) {
	    if (!n || "object" != _typeof(n)) return !1;
	    var r = Object.getPrototypeOf(n);
	    if (null === r) return !0;
	    var t = Object.hasOwnProperty.call(r, "constructor") && r.constructor;
	    return t === Object || "function" == typeof t && Function.toString.call(t) === Z;
	  }(n) || Array.isArray(n) || !!n[L] || !!n.constructor[L] || s(n) || v(n));
	}

	function i(n, r, t) {
	  void 0 === t && (t = !1), 0 === o(n) ? (t ? Object.keys : nn)(n).forEach(function (e) {
	    t && "symbol" == _typeof(e) || r(e, n[e], n);
	  }) : n.forEach(function (t, e) {
	    return r(e, t, n);
	  });
	}

	function o(n) {
	  var r = n[Q];
	  return r ? r.i > 3 ? r.i - 4 : r.i : Array.isArray(n) ? 1 : s(n) ? 2 : v(n) ? 3 : 0;
	}

	function u(n, r) {
	  return 2 === o(n) ? n.has(r) : Object.prototype.hasOwnProperty.call(n, r);
	}

	function a(n, r) {
	  return 2 === o(n) ? n.get(r) : n[r];
	}

	function f(n, r, t) {
	  var e = o(n);
	  2 === e ? n.set(r, t) : 3 === e ? (n.delete(r), n.add(t)) : n[r] = t;
	}

	function c(n, r) {
	  return n === r ? 0 !== n || 1 / n == 1 / r : n != n && r != r;
	}

	function s(n) {
	  return X && n instanceof Map;
	}

	function v(n) {
	  return q && n instanceof Set;
	}

	function p(n) {
	  return n.o || n.t;
	}

	function l(n) {
	  if (Array.isArray(n)) return Array.prototype.slice.call(n);
	  var r = rn(n);
	  delete r[Q];

	  for (var t = nn(r), e = 0; e < t.length; e++) {
	    var i = t[e],
	        o = r[i];
	    !1 === o.writable && (o.writable = !0, o.configurable = !0), (o.get || o.set) && (r[i] = {
	      configurable: !0,
	      writable: !0,
	      enumerable: o.enumerable,
	      value: n[i]
	    });
	  }

	  return Object.create(Object.getPrototypeOf(n), r);
	}

	function d(n, e) {
	  return void 0 === e && (e = !1), y(n) || r(n) || !t(n) ? n : (o(n) > 1 && (n.set = n.add = n.clear = n.delete = h), Object.freeze(n), e && i(n, function (n, r) {
	    return d(r, !0);
	  }, !0), n);
	}

	function h() {
	  n(2);
	}

	function y(n) {
	  return null == n || "object" != _typeof(n) || Object.isFrozen(n);
	}

	function b(r) {
	  var t = tn[r];
	  return t || n(18, r), t;
	}

	function _() {
	  return U;
	}

	function j(n, r) {
	  r && (b("Patches"), n.u = [], n.s = [], n.v = r);
	}

	function O(n) {
	  g(n), n.p.forEach(S), n.p = null;
	}

	function g(n) {
	  n === U && (U = n.l);
	}

	function w(n) {
	  return U = {
	    p: [],
	    l: U,
	    h: n,
	    m: !0,
	    _: 0
	  };
	}

	function S(n) {
	  var r = n[Q];
	  0 === r.i || 1 === r.i ? r.j() : r.O = !0;
	}

	function P(r, e) {
	  e._ = e.p.length;
	  var i = e.p[0],
	      o = void 0 !== r && r !== i;
	  return e.h.g || b("ES5").S(e, r, o), o ? (i[Q].P && (O(e), n(4)), t(r) && (r = M(e, r), e.l || x(e, r)), e.u && b("Patches").M(i[Q].t, r, e.u, e.s)) : r = M(e, i, []), O(e), e.u && e.v(e.u, e.s), r !== H ? r : void 0;
	}

	function M(n, r, t) {
	  if (y(r)) return r;
	  var e = r[Q];
	  if (!e) return i(r, function (i, o) {
	    return A(n, e, r, i, o, t);
	  }, !0), r;
	  if (e.A !== n) return r;
	  if (!e.P) return x(n, e.t, !0), e.t;

	  if (!e.I) {
	    e.I = !0, e.A._--;
	    var o = 4 === e.i || 5 === e.i ? e.o = l(e.k) : e.o;
	    i(3 === e.i ? new Set(o) : o, function (r, i) {
	      return A(n, e, o, r, i, t);
	    }), x(n, o, !1), t && n.u && b("Patches").R(e, t, n.u, n.s);
	  }

	  return e.o;
	}

	function A(e, i, o, a, c, s) {
	  if (r(c)) {
	    var v = M(e, c, s && i && 3 !== i.i && !u(i.D, a) ? s.concat(a) : void 0);
	    if (f(o, a, v), !r(v)) return;
	    e.m = !1;
	  }

	  if (t(c) && !y(c)) {
	    if (!e.h.F && e._ < 1) return;
	    M(e, c), i && i.A.l || x(e, c);
	  }
	}

	function x(n, r, t) {
	  void 0 === t && (t = !1), n.h.F && n.m && d(r, t);
	}

	function z(n, r) {
	  var t = n[Q];
	  return (t ? p(t) : n)[r];
	}

	function I(n, r) {
	  if (r in n) for (var t = Object.getPrototypeOf(n); t;) {
	    var e = Object.getOwnPropertyDescriptor(t, r);
	    if (e) return e;
	    t = Object.getPrototypeOf(t);
	  }
	}

	function k(n) {
	  n.P || (n.P = !0, n.l && k(n.l));
	}

	function E(n) {
	  n.o || (n.o = l(n.t));
	}

	function R(n, r, t) {
	  var e = s(r) ? b("MapSet").N(r, t) : v(r) ? b("MapSet").T(r, t) : n.g ? function (n, r) {
	    var t = Array.isArray(n),
	        e = {
	      i: t ? 1 : 0,
	      A: r ? r.A : _(),
	      P: !1,
	      I: !1,
	      D: {},
	      l: r,
	      t: n,
	      k: null,
	      o: null,
	      j: null,
	      C: !1
	    },
	        i = e,
	        o = en;
	    t && (i = [e], o = on);
	    var u = Proxy.revocable(i, o),
	        a = u.revoke,
	        f = u.proxy;
	    return e.k = f, e.j = a, f;
	  }(r, t) : b("ES5").J(r, t);
	  return (t ? t.A : _()).p.push(e), e;
	}

	function D(e) {
	  return r(e) || n(22, e), function n(r) {
	    if (!t(r)) return r;
	    var e,
	        u = r[Q],
	        c = o(r);

	    if (u) {
	      if (!u.P && (u.i < 4 || !b("ES5").K(u))) return u.t;
	      u.I = !0, e = F(r, c), u.I = !1;
	    } else e = F(r, c);

	    return i(e, function (r, t) {
	      u && a(u.t, r) === t || f(e, r, n(t));
	    }), 3 === c ? new Set(e) : e;
	  }(e);
	}

	function F(n, r) {
	  switch (r) {
	    case 2:
	      return new Map(n);

	    case 3:
	      return Array.from(n);
	  }

	  return l(n);
	}

	var G,
	    U,
	    W = "undefined" != typeof Symbol && "symbol" == _typeof(Symbol("x")),
	    X = "undefined" != typeof Map,
	    q = "undefined" != typeof Set,
	    B = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect,
	    H = W ? Symbol.for("immer-nothing") : ((G = {})["immer-nothing"] = !0, G),
	    L = W ? Symbol.for("immer-draftable") : "__$immer_draftable",
	    Q = W ? Symbol.for("immer-state") : "__$immer_state",
	    Z = "" + Object.prototype.constructor,
	    nn = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function (n) {
	  return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n));
	} : Object.getOwnPropertyNames,
	    rn = Object.getOwnPropertyDescriptors || function (n) {
	  var r = {};
	  return nn(n).forEach(function (t) {
	    r[t] = Object.getOwnPropertyDescriptor(n, t);
	  }), r;
	},
	    tn = {},
	    en = {
	  get: function get(n, r) {
	    if (r === Q) return n;
	    var e = p(n);
	    if (!u(e, r)) return function (n, r, t) {
	      var e,
	          i = I(r, t);
	      return i ? "value" in i ? i.value : null === (e = i.get) || void 0 === e ? void 0 : e.call(n.k) : void 0;
	    }(n, e, r);
	    var i = e[r];
	    return n.I || !t(i) ? i : i === z(n.t, r) ? (E(n), n.o[r] = R(n.A.h, i, n)) : i;
	  },
	  has: function has(n, r) {
	    return r in p(n);
	  },
	  ownKeys: function ownKeys(n) {
	    return Reflect.ownKeys(p(n));
	  },
	  set: function set(n, r, t) {
	    var e = I(p(n), r);
	    if (null == e ? void 0 : e.set) return e.set.call(n.k, t), !0;

	    if (!n.P) {
	      var i = z(p(n), r),
	          o = null == i ? void 0 : i[Q];
	      if (o && o.t === t) return n.o[r] = t, n.D[r] = !1, !0;
	      if (c(t, i) && (void 0 !== t || u(n.t, r))) return !0;
	      E(n), k(n);
	    }

	    return n.o[r] === t && "number" != typeof t && (void 0 !== t || r in n.o) || (n.o[r] = t, n.D[r] = !0, !0);
	  },
	  deleteProperty: function deleteProperty(n, r) {
	    return void 0 !== z(n.t, r) || r in n.t ? (n.D[r] = !1, E(n), k(n)) : delete n.D[r], n.o && delete n.o[r], !0;
	  },
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(n, r) {
	    var t = p(n),
	        e = Reflect.getOwnPropertyDescriptor(t, r);
	    return e ? {
	      writable: !0,
	      configurable: 1 !== n.i || "length" !== r,
	      enumerable: e.enumerable,
	      value: t[r]
	    } : e;
	  },
	  defineProperty: function defineProperty() {
	    n(11);
	  },
	  getPrototypeOf: function getPrototypeOf(n) {
	    return Object.getPrototypeOf(n.t);
	  },
	  setPrototypeOf: function setPrototypeOf() {
	    n(12);
	  }
	},
	    on = {};

	i(en, function (n, r) {
	  on[n] = function () {
	    return arguments[0] = arguments[0][0], r.apply(this, arguments);
	  };
	}), on.deleteProperty = function (r, t) {
	  return on.set.call(this, r, t, void 0);
	}, on.set = function (r, t, e) {
	  return en.set.call(this, r[0], t, e, r[0]);
	};

	var un = function () {
	  function e(r) {
	    var e = this;
	    this.g = B, this.F = !0, this.produce = function (r, i, o) {
	      if ("function" == typeof r && "function" != typeof i) {
	        var u = i;
	        i = r;
	        var a = e;
	        return function (n) {
	          var r = this;
	          void 0 === n && (n = u);

	          for (var t = arguments.length, e = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) {
	            e[o - 1] = arguments[o];
	          }

	          return a.produce(n, function (n) {
	            var t;
	            return (t = i).call.apply(t, [r, n].concat(e));
	          });
	        };
	      }

	      var f;

	      if ("function" != typeof i && n(6), void 0 !== o && "function" != typeof o && n(7), t(r)) {
	        var c = w(e),
	            s = R(e, r, void 0),
	            v = !0;

	        try {
	          f = i(s), v = !1;
	        } finally {
	          v ? O(c) : g(c);
	        }

	        return "undefined" != typeof Promise && f instanceof Promise ? f.then(function (n) {
	          return j(c, o), P(n, c);
	        }, function (n) {
	          throw O(c), n;
	        }) : (j(c, o), P(f, c));
	      }

	      if (!r || "object" != _typeof(r)) {
	        if (void 0 === (f = i(r)) && (f = r), f === H && (f = void 0), e.F && d(f, !0), o) {
	          var p = [],
	              l = [];
	          b("Patches").M(r, f, p, l), o(p, l);
	        }

	        return f;
	      }

	      n(21, r);
	    }, this.produceWithPatches = function (n, r) {
	      if ("function" == typeof n) return function (r) {
	        for (var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) {
	          i[o - 1] = arguments[o];
	        }

	        return e.produceWithPatches(r, function (r) {
	          return n.apply(void 0, [r].concat(i));
	        });
	      };
	      var t,
	          i,
	          o = e.produce(n, r, function (n, r) {
	        t = n, i = r;
	      });
	      return "undefined" != typeof Promise && o instanceof Promise ? o.then(function (n) {
	        return [n, t, i];
	      }) : [o, t, i];
	    }, "boolean" == typeof (null == r ? void 0 : r.useProxies) && this.setUseProxies(r.useProxies), "boolean" == typeof (null == r ? void 0 : r.autoFreeze) && this.setAutoFreeze(r.autoFreeze);
	  }

	  var i = e.prototype;
	  return i.createDraft = function (e) {
	    t(e) || n(8), r(e) && (e = D(e));
	    var i = w(this),
	        o = R(this, e, void 0);
	    return o[Q].C = !0, g(i), o;
	  }, i.finishDraft = function (r, t) {
	    var e = r && r[Q];
	    var i = e.A;
	    return j(i, t), P(void 0, i);
	  }, i.setAutoFreeze = function (n) {
	    this.F = n;
	  }, i.setUseProxies = function (r) {
	    r && !B && n(20), this.g = r;
	  }, i.applyPatches = function (n, t) {
	    var e;

	    for (e = t.length - 1; e >= 0; e--) {
	      var i = t[e];

	      if (0 === i.path.length && "replace" === i.op) {
	        n = i.value;
	        break;
	      }
	    }

	    e > -1 && (t = t.slice(e + 1));
	    var o = b("Patches").$;
	    return r(n) ? o(n, t) : this.produce(n, function (n) {
	      return o(n, t);
	    });
	  }, e;
	}(),
	    an = new un(),
	    fn = an.produce;
	    an.produceWithPatches.bind(an);
	    an.setAutoFreeze.bind(an);
	    an.setUseProxies.bind(an);
	    an.applyPatches.bind(an);
	    an.createDraft.bind(an);
	    an.finishDraft.bind(an);

	var produce = fn;

	var dkAccordion = function () {
	  function dkAccordion(elm, passedSettings) {
	    var _this = this;

	    _classCallCheck(this, dkAccordion);

	    _defineProperty(this, "_parent", void 0);

	    _defineProperty(this, "_panels", void 0);

	    _defineProperty(this, "_collapseInstances", void 0);

	    _defineProperty(this, "_settings", {
	      allowMultiple: false,
	      selectors: {
	        panel: ".dk-accordion__panel",
	        content: ".dk-accordion__content",
	        trigger: ".dk-accordion__trigger",
	        collapse: ".dk-collapse"
	      }
	    });

	    this._parent = elm;
	    if (this._parent.hasAttribute("data-accordion-init")) return;

	    this._parent.setAttribute("data-accordion-init", "");

	    if (this._parent.hasAttribute("data-allow-toggle")) {
	      this._settings.allowMultiple = false;
	    } else if (this._parent.hasAttribute("data-allow-multiple")) {
	      this._settings.allowMultiple = true;
	    }

	    this._panels = Array.from(this._parent.querySelectorAll(this._settings.selectors.panel));
	    this._collapseInstances = this._panels.map(function (panel, i) {
	      return _this._processPanel(panel, i);
	    });
	  }

	  _createClass(dkAccordion, [{
	    key: "_processPanel",
	    value: function _processPanel(panel, index) {
	      var _this2 = this;

	      var collapse = panel.querySelector(this._settings.selectors.collapse);
	      var trigger = panel.querySelector(this._settings.selectors.trigger);
	      var collapseInstance = new Collapse(collapse, {
	        trigger: trigger,
	        initialState: trigger.getAttribute("aria-expanded") === "true" ? true : false
	      });

	      if (!this._settings.allowMultiple) {
	        collapse.addEventListener("show.dk.collapse", function () {
	          _this2._collapseInstances.filter(function (i) {
	            return i !== collapseInstance;
	          }).forEach(function (i) {
	            return i.hide();
	          });
	        });
	      }

	      return collapseInstance;
	    }
	  }]);

	  return dkAccordion;
	}();

	function autoCollapse() {
	  var collapseInstances = {};

	  function addCollapseInstace(key, newInstance) {
	    collapseInstances = produce(collapseInstances, function (draft) {
	      draft[key] = newInstance;
	    });
	  }

	  var triggers = [].slice.call(document.querySelectorAll("[data-collapse-target]:not([collapse-init])"));
	  triggers.forEach(function (trigger) {
	    var target = trigger.getAttribute("data-collapse-target");
	    var panel = document.querySelector(target);

	    if (!panel) {
	      return console.error("[Auto Collapse] - No collapse panel found for trigger:", "\n", trigger);
	    }

	    if (!collapseInstances[target]) {
	      addCollapseInstace(target, panel ? new Collapse(panel) : null);
	    }

	    trigger.addEventListener("click", function (e) {
	      var action = trigger.dataset.collapseAction;

	      if (action && (action === "show" || action === "toggle" || action == "hide")) {
	        collapseInstances[target][action]();
	      } else {
	        collapseInstances[target].toggle();
	      }
	    });
	    trigger.setAttribute("collapse-init", "");
	  });
	}
	function autoAccordion() {
	  var accordions = [].slice.call(document.querySelectorAll(".dk-accordion"));
	  accordions.forEach(function (acr) {
	    return new dkAccordion(acr);
	  });
	}
	function accordion(arg) {
	  return selectorHelper({
	    selector: arg,
	    defaultSelector: ".dk-accorion"
	  }, function (accord) {
	    if (accord.hasAttribute("data-accordion-init")) {
	      return "Accordian is already inited";
	    } else {
	      new dkAccordion(accord);
	    }
	  });
	}
	function collapse(arg) {
	  return selectorHelper({
	    selector: arg,
	    defaultSelector: false
	  }, function (panel) {
	    if (panel.hasAttribute("data-collapse-init")) {
	      return panel.dkCollapse.publicMethods;
	    } else {
	      return new Collapse(panel).publicMethods;
	    }
	  });
	}

	var _internal = {
	  auto: {
	    autoModal: autoModal,
	    autoAccordion: autoAccordion,
	    autoCollapse: autoCollapse
	  }
	};

	if (typeof window !== "undefined") {
	  window.addEventListener("DOMContentLoaded", function () {
	    if (document.documentElement.dir.length === 0) {
	      document.documentElement.dir = document.querySelector("body").classList.contains("rtl") ? "rtl" : "ltr";
	    }

	    for (var fnKey in _internal.auto) {
	      _internal.auto[fnKey]();
	    }
	  });
	}

	exports._internal = _internal;
	exports.accordion = accordion;
	exports.collapse = collapse;
	exports.dropdowns = initDropdowns;
	exports.modal = modalActions;
	exports.nav = dkNav;
	exports.siteMask = siteMask;
	exports.tabbedMenu = tabbedMenu;
	exports.tabbedSidebar = tabbedSidebar;
	exports.uniqueSiteMask = uniqueSiteMask;

	Object.defineProperty(exports, '__esModule', { value: true });

	return exports;

})({});
